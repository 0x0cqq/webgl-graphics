#version 300 es

layout(std140, column_major) uniform;

// these are generated by the engine
in vec4 a_position;
in vec3 a_normal;
in vec2 a_texcoord;

// this two should be added by the user
in vec4 a_color;


// these three is added by the accumulator class
uniform mat4 u_view_proj;
uniform vec3 u_eye_position;
uniform vec3 u_light_position;
// this should be added by user in the inner render function
uniform mat4 u_model_matrix;

// those are passed to the fragment shader
out vec3 v_position;
out vec2 v_texcoord;
out vec3 v_normal;
flat out vec4 v_color;

void main() {
    vec4 world_matrix = u_model_matrix * a_position;
    v_position = world_matrix.xyz;
    v_texcoord = a_texcoord;
    v_normal = mat3(u_model_matrix) * a_normal;
    v_color = a_color;
    gl_Position = u_view_proj * world_matrix;
}
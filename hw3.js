/*! For license information please see hw3.js.LICENSE.txt */
(()=>{"use strict";var e={887:(e,t,n)=>{n.r(t),n.d(t,{glMatrix:()=>r,mat2:()=>i,mat2d:()=>a,mat3:()=>o,mat4:()=>s,quat:()=>u,quat2:()=>h,vec2:()=>d,vec3:()=>l,vec4:()=>c});var r={};n.r(r),n.d(r,{ARRAY_TYPE:()=>p,EPSILON:()=>f,RANDOM:()=>m,equals:()=>x,setMatrixArrayType:()=>g,toRadian:()=>v});var i={};n.r(i),n.d(i,{LDU:()=>O,add:()=>B,adjoint:()=>R,clone:()=>M,copy:()=>b,create:()=>y,determinant:()=>P,equals:()=>H,exactEquals:()=>V,frob:()=>F,fromRotation:()=>I,fromScaling:()=>D,fromValues:()=>S,identity:()=>E,invert:()=>w,mul:()=>W,multiply:()=>C,multiplyScalar:()=>G,multiplyScalarAndAdd:()=>k,rotate:()=>L,scale:()=>U,set:()=>T,str:()=>N,sub:()=>j,subtract:()=>z,transpose:()=>A});var a={};n.r(a),n.d(a,{add:()=>ce,clone:()=>q,copy:()=>Y,create:()=>X,determinant:()=>Q,equals:()=>pe,exactEquals:()=>fe,frob:()=>le,fromRotation:()=>ie,fromScaling:()=>ae,fromTranslation:()=>oe,fromValues:()=>Z,identity:()=>K,invert:()=>$,mul:()=>me,multiply:()=>ee,multiplyScalar:()=>he,multiplyScalarAndAdd:()=>de,rotate:()=>te,scale:()=>ne,set:()=>J,str:()=>se,sub:()=>ge,subtract:()=>ue,translate:()=>re});var o={};n.r(o),n.d(o,{add:()=>He,adjoint:()=>Ae,clone:()=>xe,copy:()=>ye,create:()=>_e,determinant:()=>we,equals:()=>Xe,exactEquals:()=>je,frob:()=>Ve,fromMat2d:()=>Ne,fromMat4:()=>ve,fromQuat:()=>Fe,fromRotation:()=>Ie,fromScaling:()=>De,fromTranslation:()=>Ue,fromValues:()=>Me,identity:()=>Ee,invert:()=>Te,mul:()=>qe,multiply:()=>Re,multiplyScalar:()=>ke,multiplyScalarAndAdd:()=>We,normalFromMat4:()=>Oe,projection:()=>Be,rotate:()=>Ce,scale:()=>Le,set:()=>be,str:()=>ze,sub:()=>Ye,subtract:()=>Ge,translate:()=>Pe,transpose:()=>Se});var s={};n.r(s),n.d(s,{add:()=>Bt,adjoint:()=>rt,clone:()=>Ze,copy:()=>Je,create:()=>Ke,determinant:()=>it,equals:()=>kt,exactEquals:()=>Gt,frob:()=>Ot,fromQuat:()=>Tt,fromQuat2:()=>xt,fromRotation:()=>pt,fromRotationTranslation:()=>vt,fromRotationTranslationScale:()=>Et,fromRotationTranslationScaleOrigin:()=>St,fromScaling:()=>ft,fromTranslation:()=>dt,fromValues:()=>$e,fromXRotation:()=>mt,fromYRotation:()=>gt,fromZRotation:()=>_t,frustum:()=>At,getRotation:()=>bt,getScaling:()=>Mt,getTranslation:()=>yt,identity:()=>et,invert:()=>nt,lookAt:()=>Dt,mul:()=>Wt,multiply:()=>at,multiplyScalar:()=>Vt,multiplyScalarAndAdd:()=>Ht,ortho:()=>Ut,orthoNO:()=>Lt,orthoZO:()=>It,perspective:()=>Rt,perspectiveFromFieldOfView:()=>Ct,perspectiveNO:()=>wt,perspectiveZO:()=>Pt,rotate:()=>lt,rotateX:()=>ct,rotateY:()=>ut,rotateZ:()=>ht,scale:()=>st,set:()=>Qe,str:()=>Ft,sub:()=>jt,subtract:()=>zt,targetTo:()=>Nt,translate:()=>ot,transpose:()=>tt});var l={};n.r(l),n.d(l,{add:()=>$t,angle:()=>Rn,bezier:()=>yn,ceil:()=>nn,clone:()=>qt,copy:()=>Zt,create:()=>Xt,cross:()=>_n,dist:()=>On,distance:()=>un,div:()=>Fn,divide:()=>tn,dot:()=>gn,equals:()=>Un,exactEquals:()=>Ln,floor:()=>rn,forEach:()=>Hn,fromValues:()=>Kt,hermite:()=>xn,inverse:()=>pn,len:()=>zn,length:()=>Yt,lerp:()=>vn,max:()=>on,min:()=>an,mul:()=>Nn,multiply:()=>en,negate:()=>fn,normalize:()=>mn,random:()=>Mn,rotateX:()=>Tn,rotateY:()=>An,rotateZ:()=>wn,round:()=>sn,scale:()=>ln,scaleAndAdd:()=>cn,set:()=>Jt,sqrDist:()=>Bn,sqrLen:()=>Vn,squaredDistance:()=>hn,squaredLength:()=>dn,str:()=>Cn,sub:()=>Dn,subtract:()=>Qt,transformMat3:()=>En,transformMat4:()=>bn,transformQuat:()=>Sn,zero:()=>Pn});var c={};n.r(c),n.d(c,{add:()=>qn,ceil:()=>Jn,clone:()=>kn,copy:()=>jn,create:()=>Gn,cross:()=>dr,dist:()=>Sr,distance:()=>ir,div:()=>Er,divide:()=>Zn,dot:()=>hr,equals:()=>yr,exactEquals:()=>xr,floor:()=>$n,forEach:()=>Rr,fromValues:()=>Wn,inverse:()=>cr,len:()=>Ar,length:()=>or,lerp:()=>fr,max:()=>er,min:()=>Qn,mul:()=>br,multiply:()=>Kn,negate:()=>lr,normalize:()=>ur,random:()=>pr,round:()=>tr,scale:()=>nr,scaleAndAdd:()=>rr,set:()=>Xn,sqrDist:()=>Tr,sqrLen:()=>wr,squaredDistance:()=>ar,squaredLength:()=>sr,str:()=>vr,sub:()=>Mr,subtract:()=>Yn,transformMat4:()=>mr,transformQuat:()=>gr,zero:()=>_r});var u={};n.r(u),n.d(u,{add:()=>ai,calculateW:()=>Br,clone:()=>ti,conjugate:()=>jr,copy:()=>ri,create:()=>Pr,dot:()=>li,equals:()=>gi,exactEquals:()=>mi,exp:()=>zr,fromEuler:()=>qr,fromMat3:()=>Xr,fromValues:()=>ni,getAngle:()=>Ir,getAxisAngle:()=>Ur,identity:()=>Cr,invert:()=>Wr,len:()=>hi,length:()=>ui,lerp:()=>ci,ln:()=>Vr,mul:()=>oi,multiply:()=>Dr,normalize:()=>pi,pow:()=>Hr,random:()=>kr,rotateX:()=>Nr,rotateY:()=>Fr,rotateZ:()=>Or,rotationTo:()=>_i,scale:()=>si,set:()=>ii,setAxes:()=>xi,setAxisAngle:()=>Lr,slerp:()=>Gr,sqlerp:()=>vi,sqrLen:()=>fi,squaredLength:()=>di,str:()=>Yr});var h={};n.r(h),n.d(h,{add:()=>ki,clone:()=>Mi,conjugate:()=>Zi,copy:()=>Ri,create:()=>yi,dot:()=>qi,equals:()=>ia,exactEquals:()=>ra,fromMat4:()=>wi,fromRotation:()=>Ai,fromRotationTranslation:()=>Si,fromRotationTranslationValues:()=>Ei,fromTranslation:()=>Ti,fromValues:()=>bi,getDual:()=>Ui,getReal:()=>Li,getTranslation:()=>Ni,identity:()=>Pi,invert:()=>Ki,len:()=>$i,length:()=>Ji,lerp:()=>Yi,mul:()=>ji,multiply:()=>Wi,normalize:()=>ta,rotateAroundAxis:()=>Gi,rotateByQuatAppend:()=>Vi,rotateByQuatPrepend:()=>Hi,rotateX:()=>Oi,rotateY:()=>Bi,rotateZ:()=>zi,scale:()=>Xi,set:()=>Ci,setDual:()=>Di,setReal:()=>Ii,sqrLen:()=>ea,squaredLength:()=>Qi,str:()=>na,translate:()=>Fi});var d={};n.r(d),n.d(d,{add:()=>ua,angle:()=>Oa,ceil:()=>pa,clone:()=>oa,copy:()=>la,create:()=>aa,cross:()=>Pa,dist:()=>Xa,distance:()=>Ma,div:()=>ja,divide:()=>fa,dot:()=>Ra,equals:()=>Ha,exactEquals:()=>Va,floor:()=>ma,forEach:()=>Ka,fromValues:()=>sa,inverse:()=>Aa,len:()=>Ga,length:()=>Ea,lerp:()=>Ca,max:()=>_a,min:()=>ga,mul:()=>Wa,multiply:()=>da,negate:()=>Ta,normalize:()=>wa,random:()=>La,rotate:()=>Fa,round:()=>va,scale:()=>xa,scaleAndAdd:()=>ya,set:()=>ca,sqrDist:()=>qa,sqrLen:()=>Ya,squaredDistance:()=>ba,squaredLength:()=>Sa,str:()=>za,sub:()=>ka,subtract:()=>ha,transformMat2:()=>Ua,transformMat2d:()=>Ia,transformMat3:()=>Da,transformMat4:()=>Na,zero:()=>Ba});var f=1e-6,p="undefined"!=typeof Float32Array?Float32Array:Array,m=Math.random;function g(e){p=e}var _=Math.PI/180;function v(e){return e*_}function x(e,t){return Math.abs(e-t)<=f*Math.max(1,Math.abs(e),Math.abs(t))}function y(){var e=new p(4);return p!=Float32Array&&(e[1]=0,e[2]=0),e[0]=1,e[3]=1,e}function M(e){var t=new p(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function b(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}function E(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e}function S(e,t,n,r){var i=new p(4);return i[0]=e,i[1]=t,i[2]=n,i[3]=r,i}function T(e,t,n,r,i){return e[0]=t,e[1]=n,e[2]=r,e[3]=i,e}function A(e,t){if(e===t){var n=t[1];e[1]=t[2],e[2]=n}else e[0]=t[0],e[1]=t[2],e[2]=t[1],e[3]=t[3];return e}function w(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=n*a-i*r;return o?(o=1/o,e[0]=a*o,e[1]=-r*o,e[2]=-i*o,e[3]=n*o,e):null}function R(e,t){var n=t[0];return e[0]=t[3],e[1]=-t[1],e[2]=-t[2],e[3]=n,e}function P(e){return e[0]*e[3]-e[2]*e[1]}function C(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=n[0],l=n[1],c=n[2],u=n[3];return e[0]=r*s+a*l,e[1]=i*s+o*l,e[2]=r*c+a*u,e[3]=i*c+o*u,e}function L(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(n),l=Math.cos(n);return e[0]=r*l+a*s,e[1]=i*l+o*s,e[2]=r*-s+a*l,e[3]=i*-s+o*l,e}function U(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=n[0],l=n[1];return e[0]=r*s,e[1]=i*s,e[2]=a*l,e[3]=o*l,e}function I(e,t){var n=Math.sin(t),r=Math.cos(t);return e[0]=r,e[1]=n,e[2]=-n,e[3]=r,e}function D(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=t[1],e}function N(e){return"mat2("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"}function F(e){return Math.hypot(e[0],e[1],e[2],e[3])}function O(e,t,n,r){return e[2]=r[2]/r[0],n[0]=r[0],n[1]=r[1],n[3]=r[3]-e[2]*n[1],[e,t,n]}function B(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e[3]=t[3]+n[3],e}function z(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e[3]=t[3]-n[3],e}function V(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]}function H(e,t){var n=e[0],r=e[1],i=e[2],a=e[3],o=t[0],s=t[1],l=t[2],c=t[3];return Math.abs(n-o)<=f*Math.max(1,Math.abs(n),Math.abs(o))&&Math.abs(r-s)<=f*Math.max(1,Math.abs(r),Math.abs(s))&&Math.abs(i-l)<=f*Math.max(1,Math.abs(i),Math.abs(l))&&Math.abs(a-c)<=f*Math.max(1,Math.abs(a),Math.abs(c))}function G(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e}function k(e,t,n,r){return e[0]=t[0]+n[0]*r,e[1]=t[1]+n[1]*r,e[2]=t[2]+n[2]*r,e[3]=t[3]+n[3]*r,e}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});var W=C,j=z;function X(){var e=new p(6);return p!=Float32Array&&(e[1]=0,e[2]=0,e[4]=0,e[5]=0),e[0]=1,e[3]=1,e}function q(e){var t=new p(6);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t}function Y(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e}function K(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e}function Z(e,t,n,r,i,a){var o=new p(6);return o[0]=e,o[1]=t,o[2]=n,o[3]=r,o[4]=i,o[5]=a,o}function J(e,t,n,r,i,a,o){return e[0]=t,e[1]=n,e[2]=r,e[3]=i,e[4]=a,e[5]=o,e}function $(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=n*a-r*i;return l?(l=1/l,e[0]=a*l,e[1]=-r*l,e[2]=-i*l,e[3]=n*l,e[4]=(i*s-a*o)*l,e[5]=(r*o-n*s)*l,e):null}function Q(e){return e[0]*e[3]-e[1]*e[2]}function ee(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],c=n[0],u=n[1],h=n[2],d=n[3],f=n[4],p=n[5];return e[0]=r*c+a*u,e[1]=i*c+o*u,e[2]=r*h+a*d,e[3]=i*h+o*d,e[4]=r*f+a*p+s,e[5]=i*f+o*p+l,e}function te(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],c=Math.sin(n),u=Math.cos(n);return e[0]=r*u+a*c,e[1]=i*u+o*c,e[2]=r*-c+a*u,e[3]=i*-c+o*u,e[4]=s,e[5]=l,e}function ne(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],c=n[0],u=n[1];return e[0]=r*c,e[1]=i*c,e[2]=a*u,e[3]=o*u,e[4]=s,e[5]=l,e}function re(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],c=n[0],u=n[1];return e[0]=r,e[1]=i,e[2]=a,e[3]=o,e[4]=r*c+a*u+s,e[5]=i*c+o*u+l,e}function ie(e,t){var n=Math.sin(t),r=Math.cos(t);return e[0]=r,e[1]=n,e[2]=-n,e[3]=r,e[4]=0,e[5]=0,e}function ae(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=t[1],e[4]=0,e[5]=0,e}function oe(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=t[0],e[5]=t[1],e}function se(e){return"mat2d("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+")"}function le(e){return Math.hypot(e[0],e[1],e[2],e[3],e[4],e[5],1)}function ce(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e[3]=t[3]+n[3],e[4]=t[4]+n[4],e[5]=t[5]+n[5],e}function ue(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e[3]=t[3]-n[3],e[4]=t[4]-n[4],e[5]=t[5]-n[5],e}function he(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*n,e[5]=t[5]*n,e}function de(e,t,n,r){return e[0]=t[0]+n[0]*r,e[1]=t[1]+n[1]*r,e[2]=t[2]+n[2]*r,e[3]=t[3]+n[3]*r,e[4]=t[4]+n[4]*r,e[5]=t[5]+n[5]*r,e}function fe(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]}function pe(e,t){var n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],l=t[0],c=t[1],u=t[2],h=t[3],d=t[4],p=t[5];return Math.abs(n-l)<=f*Math.max(1,Math.abs(n),Math.abs(l))&&Math.abs(r-c)<=f*Math.max(1,Math.abs(r),Math.abs(c))&&Math.abs(i-u)<=f*Math.max(1,Math.abs(i),Math.abs(u))&&Math.abs(a-h)<=f*Math.max(1,Math.abs(a),Math.abs(h))&&Math.abs(o-d)<=f*Math.max(1,Math.abs(o),Math.abs(d))&&Math.abs(s-p)<=f*Math.max(1,Math.abs(s),Math.abs(p))}var me=ee,ge=ue;function _e(){var e=new p(9);return p!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1,e}function ve(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e}function xe(e){var t=new p(9);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t}function ye(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function Me(e,t,n,r,i,a,o,s,l){var c=new p(9);return c[0]=e,c[1]=t,c[2]=n,c[3]=r,c[4]=i,c[5]=a,c[6]=o,c[7]=s,c[8]=l,c}function be(e,t,n,r,i,a,o,s,l,c){return e[0]=t,e[1]=n,e[2]=r,e[3]=i,e[4]=a,e[5]=o,e[6]=s,e[7]=l,e[8]=c,e}function Ee(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e}function Se(e,t){if(e===t){var n=t[1],r=t[2],i=t[5];e[1]=t[3],e[2]=t[6],e[3]=n,e[5]=t[7],e[6]=r,e[7]=i}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e}function Te(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=t[6],c=t[7],u=t[8],h=u*o-s*c,d=-u*a+s*l,f=c*a-o*l,p=n*h+r*d+i*f;return p?(p=1/p,e[0]=h*p,e[1]=(-u*r+i*c)*p,e[2]=(s*r-i*o)*p,e[3]=d*p,e[4]=(u*n-i*l)*p,e[5]=(-s*n+i*a)*p,e[6]=f*p,e[7]=(-c*n+r*l)*p,e[8]=(o*n-r*a)*p,e):null}function Ae(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=t[6],c=t[7],u=t[8];return e[0]=o*u-s*c,e[1]=i*c-r*u,e[2]=r*s-i*o,e[3]=s*l-a*u,e[4]=n*u-i*l,e[5]=i*a-n*s,e[6]=a*c-o*l,e[7]=r*l-n*c,e[8]=n*o-r*a,e}function we(e){var t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8];return t*(c*a-o*l)+n*(-c*i+o*s)+r*(l*i-a*s)}function Re(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],c=t[6],u=t[7],h=t[8],d=n[0],f=n[1],p=n[2],m=n[3],g=n[4],_=n[5],v=n[6],x=n[7],y=n[8];return e[0]=d*r+f*o+p*c,e[1]=d*i+f*s+p*u,e[2]=d*a+f*l+p*h,e[3]=m*r+g*o+_*c,e[4]=m*i+g*s+_*u,e[5]=m*a+g*l+_*h,e[6]=v*r+x*o+y*c,e[7]=v*i+x*s+y*u,e[8]=v*a+x*l+y*h,e}function Pe(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],c=t[6],u=t[7],h=t[8],d=n[0],f=n[1];return e[0]=r,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=l,e[6]=d*r+f*o+c,e[7]=d*i+f*s+u,e[8]=d*a+f*l+h,e}function Ce(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],c=t[6],u=t[7],h=t[8],d=Math.sin(n),f=Math.cos(n);return e[0]=f*r+d*o,e[1]=f*i+d*s,e[2]=f*a+d*l,e[3]=f*o-d*r,e[4]=f*s-d*i,e[5]=f*l-d*a,e[6]=c,e[7]=u,e[8]=h,e}function Le(e,t,n){var r=n[0],i=n[1];return e[0]=r*t[0],e[1]=r*t[1],e[2]=r*t[2],e[3]=i*t[3],e[4]=i*t[4],e[5]=i*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function Ue(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=t[0],e[7]=t[1],e[8]=1,e}function Ie(e,t){var n=Math.sin(t),r=Math.cos(t);return e[0]=r,e[1]=n,e[2]=0,e[3]=-n,e[4]=r,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e}function De(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=t[1],e[5]=0,e[6]=0,e[7]=0,e[8]=1,e}function Ne(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e}function Fe(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=n+n,s=r+r,l=i+i,c=n*o,u=r*o,h=r*s,d=i*o,f=i*s,p=i*l,m=a*o,g=a*s,_=a*l;return e[0]=1-h-p,e[3]=u-_,e[6]=d+g,e[1]=u+_,e[4]=1-c-p,e[7]=f-m,e[2]=d-g,e[5]=f+m,e[8]=1-c-h,e}function Oe(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],p=t[12],m=t[13],g=t[14],_=t[15],v=n*s-r*o,x=n*l-i*o,y=n*c-a*o,M=r*l-i*s,b=r*c-a*s,E=i*c-a*l,S=u*m-h*p,T=u*g-d*p,A=u*_-f*p,w=h*g-d*m,R=h*_-f*m,P=d*_-f*g,C=v*P-x*R+y*w+M*A-b*T+E*S;return C?(C=1/C,e[0]=(s*P-l*R+c*w)*C,e[1]=(l*A-o*P-c*T)*C,e[2]=(o*R-s*A+c*S)*C,e[3]=(i*R-r*P-a*w)*C,e[4]=(n*P-i*A+a*T)*C,e[5]=(r*A-n*R-a*S)*C,e[6]=(m*E-g*b+_*M)*C,e[7]=(g*y-p*E-_*x)*C,e[8]=(p*b-m*y+_*v)*C,e):null}function Be(e,t,n){return e[0]=2/t,e[1]=0,e[2]=0,e[3]=0,e[4]=-2/n,e[5]=0,e[6]=-1,e[7]=1,e[8]=1,e}function ze(e){return"mat3("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+")"}function Ve(e){return Math.hypot(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8])}function He(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e[3]=t[3]+n[3],e[4]=t[4]+n[4],e[5]=t[5]+n[5],e[6]=t[6]+n[6],e[7]=t[7]+n[7],e[8]=t[8]+n[8],e}function Ge(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e[3]=t[3]-n[3],e[4]=t[4]-n[4],e[5]=t[5]-n[5],e[6]=t[6]-n[6],e[7]=t[7]-n[7],e[8]=t[8]-n[8],e}function ke(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*n,e[5]=t[5]*n,e[6]=t[6]*n,e[7]=t[7]*n,e[8]=t[8]*n,e}function We(e,t,n,r){return e[0]=t[0]+n[0]*r,e[1]=t[1]+n[1]*r,e[2]=t[2]+n[2]*r,e[3]=t[3]+n[3]*r,e[4]=t[4]+n[4]*r,e[5]=t[5]+n[5]*r,e[6]=t[6]+n[6]*r,e[7]=t[7]+n[7]*r,e[8]=t[8]+n[8]*r,e}function je(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]}function Xe(e,t){var n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],l=e[6],c=e[7],u=e[8],h=t[0],d=t[1],p=t[2],m=t[3],g=t[4],_=t[5],v=t[6],x=t[7],y=t[8];return Math.abs(n-h)<=f*Math.max(1,Math.abs(n),Math.abs(h))&&Math.abs(r-d)<=f*Math.max(1,Math.abs(r),Math.abs(d))&&Math.abs(i-p)<=f*Math.max(1,Math.abs(i),Math.abs(p))&&Math.abs(a-m)<=f*Math.max(1,Math.abs(a),Math.abs(m))&&Math.abs(o-g)<=f*Math.max(1,Math.abs(o),Math.abs(g))&&Math.abs(s-_)<=f*Math.max(1,Math.abs(s),Math.abs(_))&&Math.abs(l-v)<=f*Math.max(1,Math.abs(l),Math.abs(v))&&Math.abs(c-x)<=f*Math.max(1,Math.abs(c),Math.abs(x))&&Math.abs(u-y)<=f*Math.max(1,Math.abs(u),Math.abs(y))}var qe=Re,Ye=Ge;function Ke(){var e=new p(16);return p!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function Ze(e){var t=new p(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function Je(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function $e(e,t,n,r,i,a,o,s,l,c,u,h,d,f,m,g){var _=new p(16);return _[0]=e,_[1]=t,_[2]=n,_[3]=r,_[4]=i,_[5]=a,_[6]=o,_[7]=s,_[8]=l,_[9]=c,_[10]=u,_[11]=h,_[12]=d,_[13]=f,_[14]=m,_[15]=g,_}function Qe(e,t,n,r,i,a,o,s,l,c,u,h,d,f,p,m,g){return e[0]=t,e[1]=n,e[2]=r,e[3]=i,e[4]=a,e[5]=o,e[6]=s,e[7]=l,e[8]=c,e[9]=u,e[10]=h,e[11]=d,e[12]=f,e[13]=p,e[14]=m,e[15]=g,e}function et(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function tt(e,t){if(e===t){var n=t[1],r=t[2],i=t[3],a=t[6],o=t[7],s=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=n,e[6]=t[9],e[7]=t[13],e[8]=r,e[9]=a,e[11]=t[14],e[12]=i,e[13]=o,e[14]=s}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e}function nt(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],p=t[12],m=t[13],g=t[14],_=t[15],v=n*s-r*o,x=n*l-i*o,y=n*c-a*o,M=r*l-i*s,b=r*c-a*s,E=i*c-a*l,S=u*m-h*p,T=u*g-d*p,A=u*_-f*p,w=h*g-d*m,R=h*_-f*m,P=d*_-f*g,C=v*P-x*R+y*w+M*A-b*T+E*S;return C?(C=1/C,e[0]=(s*P-l*R+c*w)*C,e[1]=(i*R-r*P-a*w)*C,e[2]=(m*E-g*b+_*M)*C,e[3]=(d*b-h*E-f*M)*C,e[4]=(l*A-o*P-c*T)*C,e[5]=(n*P-i*A+a*T)*C,e[6]=(g*y-p*E-_*x)*C,e[7]=(u*E-d*y+f*x)*C,e[8]=(o*R-s*A+c*S)*C,e[9]=(r*A-n*R-a*S)*C,e[10]=(p*b-m*y+_*v)*C,e[11]=(h*y-u*b-f*v)*C,e[12]=(s*T-o*w-l*S)*C,e[13]=(n*w-r*T+i*S)*C,e[14]=(m*x-p*M-g*v)*C,e[15]=(u*M-h*x+d*v)*C,e):null}function rt(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],p=t[12],m=t[13],g=t[14],_=t[15];return e[0]=s*(d*_-f*g)-h*(l*_-c*g)+m*(l*f-c*d),e[1]=-(r*(d*_-f*g)-h*(i*_-a*g)+m*(i*f-a*d)),e[2]=r*(l*_-c*g)-s*(i*_-a*g)+m*(i*c-a*l),e[3]=-(r*(l*f-c*d)-s*(i*f-a*d)+h*(i*c-a*l)),e[4]=-(o*(d*_-f*g)-u*(l*_-c*g)+p*(l*f-c*d)),e[5]=n*(d*_-f*g)-u*(i*_-a*g)+p*(i*f-a*d),e[6]=-(n*(l*_-c*g)-o*(i*_-a*g)+p*(i*c-a*l)),e[7]=n*(l*f-c*d)-o*(i*f-a*d)+u*(i*c-a*l),e[8]=o*(h*_-f*m)-u*(s*_-c*m)+p*(s*f-c*h),e[9]=-(n*(h*_-f*m)-u*(r*_-a*m)+p*(r*f-a*h)),e[10]=n*(s*_-c*m)-o*(r*_-a*m)+p*(r*c-a*s),e[11]=-(n*(s*f-c*h)-o*(r*f-a*h)+u*(r*c-a*s)),e[12]=-(o*(h*g-d*m)-u*(s*g-l*m)+p*(s*d-l*h)),e[13]=n*(h*g-d*m)-u*(r*g-i*m)+p*(r*d-i*h),e[14]=-(n*(s*g-l*m)-o*(r*g-i*m)+p*(r*l-i*s)),e[15]=n*(s*d-l*h)-o*(r*d-i*h)+u*(r*l-i*s),e}function it(e){var t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8],u=e[9],h=e[10],d=e[11],f=e[12],p=e[13],m=e[14],g=e[15];return(t*o-n*a)*(h*g-d*m)-(t*s-r*a)*(u*g-d*p)+(t*l-i*a)*(u*m-h*p)+(n*s-r*o)*(c*g-d*f)-(n*l-i*o)*(c*m-h*f)+(r*l-i*s)*(c*p-u*f)}function at(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],c=t[6],u=t[7],h=t[8],d=t[9],f=t[10],p=t[11],m=t[12],g=t[13],_=t[14],v=t[15],x=n[0],y=n[1],M=n[2],b=n[3];return e[0]=x*r+y*s+M*h+b*m,e[1]=x*i+y*l+M*d+b*g,e[2]=x*a+y*c+M*f+b*_,e[3]=x*o+y*u+M*p+b*v,x=n[4],y=n[5],M=n[6],b=n[7],e[4]=x*r+y*s+M*h+b*m,e[5]=x*i+y*l+M*d+b*g,e[6]=x*a+y*c+M*f+b*_,e[7]=x*o+y*u+M*p+b*v,x=n[8],y=n[9],M=n[10],b=n[11],e[8]=x*r+y*s+M*h+b*m,e[9]=x*i+y*l+M*d+b*g,e[10]=x*a+y*c+M*f+b*_,e[11]=x*o+y*u+M*p+b*v,x=n[12],y=n[13],M=n[14],b=n[15],e[12]=x*r+y*s+M*h+b*m,e[13]=x*i+y*l+M*d+b*g,e[14]=x*a+y*c+M*f+b*_,e[15]=x*o+y*u+M*p+b*v,e}function ot(e,t,n){var r,i,a,o,s,l,c,u,h,d,f,p,m=n[0],g=n[1],_=n[2];return t===e?(e[12]=t[0]*m+t[4]*g+t[8]*_+t[12],e[13]=t[1]*m+t[5]*g+t[9]*_+t[13],e[14]=t[2]*m+t[6]*g+t[10]*_+t[14],e[15]=t[3]*m+t[7]*g+t[11]*_+t[15]):(r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],c=t[6],u=t[7],h=t[8],d=t[9],f=t[10],p=t[11],e[0]=r,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=l,e[6]=c,e[7]=u,e[8]=h,e[9]=d,e[10]=f,e[11]=p,e[12]=r*m+s*g+h*_+t[12],e[13]=i*m+l*g+d*_+t[13],e[14]=a*m+c*g+f*_+t[14],e[15]=o*m+u*g+p*_+t[15]),e}function st(e,t,n){var r=n[0],i=n[1],a=n[2];return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*a,e[9]=t[9]*a,e[10]=t[10]*a,e[11]=t[11]*a,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function lt(e,t,n,r){var i,a,o,s,l,c,u,h,d,p,m,g,_,v,x,y,M,b,E,S,T,A,w,R,P=r[0],C=r[1],L=r[2],U=Math.hypot(P,C,L);return U<f?null:(P*=U=1/U,C*=U,L*=U,i=Math.sin(n),o=1-(a=Math.cos(n)),s=t[0],l=t[1],c=t[2],u=t[3],h=t[4],d=t[5],p=t[6],m=t[7],g=t[8],_=t[9],v=t[10],x=t[11],y=P*P*o+a,M=C*P*o+L*i,b=L*P*o-C*i,E=P*C*o-L*i,S=C*C*o+a,T=L*C*o+P*i,A=P*L*o+C*i,w=C*L*o-P*i,R=L*L*o+a,e[0]=s*y+h*M+g*b,e[1]=l*y+d*M+_*b,e[2]=c*y+p*M+v*b,e[3]=u*y+m*M+x*b,e[4]=s*E+h*S+g*T,e[5]=l*E+d*S+_*T,e[6]=c*E+p*S+v*T,e[7]=u*E+m*S+x*T,e[8]=s*A+h*w+g*R,e[9]=l*A+d*w+_*R,e[10]=c*A+p*w+v*R,e[11]=u*A+m*w+x*R,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)}function ct(e,t,n){var r=Math.sin(n),i=Math.cos(n),a=t[4],o=t[5],s=t[6],l=t[7],c=t[8],u=t[9],h=t[10],d=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=a*i+c*r,e[5]=o*i+u*r,e[6]=s*i+h*r,e[7]=l*i+d*r,e[8]=c*i-a*r,e[9]=u*i-o*r,e[10]=h*i-s*r,e[11]=d*i-l*r,e}function ut(e,t,n){var r=Math.sin(n),i=Math.cos(n),a=t[0],o=t[1],s=t[2],l=t[3],c=t[8],u=t[9],h=t[10],d=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i-c*r,e[1]=o*i-u*r,e[2]=s*i-h*r,e[3]=l*i-d*r,e[8]=a*r+c*i,e[9]=o*r+u*i,e[10]=s*r+h*i,e[11]=l*r+d*i,e}function ht(e,t,n){var r=Math.sin(n),i=Math.cos(n),a=t[0],o=t[1],s=t[2],l=t[3],c=t[4],u=t[5],h=t[6],d=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i+c*r,e[1]=o*i+u*r,e[2]=s*i+h*r,e[3]=l*i+d*r,e[4]=c*i-a*r,e[5]=u*i-o*r,e[6]=h*i-s*r,e[7]=d*i-l*r,e}function dt(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=t[0],e[13]=t[1],e[14]=t[2],e[15]=1,e}function ft(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t[1],e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t[2],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function pt(e,t,n){var r,i,a,o=n[0],s=n[1],l=n[2],c=Math.hypot(o,s,l);return c<f?null:(o*=c=1/c,s*=c,l*=c,r=Math.sin(t),a=1-(i=Math.cos(t)),e[0]=o*o*a+i,e[1]=s*o*a+l*r,e[2]=l*o*a-s*r,e[3]=0,e[4]=o*s*a-l*r,e[5]=s*s*a+i,e[6]=l*s*a+o*r,e[7]=0,e[8]=o*l*a+s*r,e[9]=s*l*a-o*r,e[10]=l*l*a+i,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e)}function mt(e,t){var n=Math.sin(t),r=Math.cos(t);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=r,e[6]=n,e[7]=0,e[8]=0,e[9]=-n,e[10]=r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function gt(e,t){var n=Math.sin(t),r=Math.cos(t);return e[0]=r,e[1]=0,e[2]=-n,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=n,e[9]=0,e[10]=r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function _t(e,t){var n=Math.sin(t),r=Math.cos(t);return e[0]=r,e[1]=n,e[2]=0,e[3]=0,e[4]=-n,e[5]=r,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function vt(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=r+r,l=i+i,c=a+a,u=r*s,h=r*l,d=r*c,f=i*l,p=i*c,m=a*c,g=o*s,_=o*l,v=o*c;return e[0]=1-(f+m),e[1]=h+v,e[2]=d-_,e[3]=0,e[4]=h-v,e[5]=1-(u+m),e[6]=p+g,e[7]=0,e[8]=d+_,e[9]=p-g,e[10]=1-(u+f),e[11]=0,e[12]=n[0],e[13]=n[1],e[14]=n[2],e[15]=1,e}function xt(e,t){var n=new p(3),r=-t[0],i=-t[1],a=-t[2],o=t[3],s=t[4],l=t[5],c=t[6],u=t[7],h=r*r+i*i+a*a+o*o;return h>0?(n[0]=2*(s*o+u*r+l*a-c*i)/h,n[1]=2*(l*o+u*i+c*r-s*a)/h,n[2]=2*(c*o+u*a+s*i-l*r)/h):(n[0]=2*(s*o+u*r+l*a-c*i),n[1]=2*(l*o+u*i+c*r-s*a),n[2]=2*(c*o+u*a+s*i-l*r)),vt(e,t,n),e}function yt(e,t){return e[0]=t[12],e[1]=t[13],e[2]=t[14],e}function Mt(e,t){var n=t[0],r=t[1],i=t[2],a=t[4],o=t[5],s=t[6],l=t[8],c=t[9],u=t[10];return e[0]=Math.hypot(n,r,i),e[1]=Math.hypot(a,o,s),e[2]=Math.hypot(l,c,u),e}function bt(e,t){var n=new p(3);Mt(n,t);var r=1/n[0],i=1/n[1],a=1/n[2],o=t[0]*r,s=t[1]*i,l=t[2]*a,c=t[4]*r,u=t[5]*i,h=t[6]*a,d=t[8]*r,f=t[9]*i,m=t[10]*a,g=o+u+m,_=0;return g>0?(_=2*Math.sqrt(g+1),e[3]=.25*_,e[0]=(h-f)/_,e[1]=(d-l)/_,e[2]=(s-c)/_):o>u&&o>m?(_=2*Math.sqrt(1+o-u-m),e[3]=(h-f)/_,e[0]=.25*_,e[1]=(s+c)/_,e[2]=(d+l)/_):u>m?(_=2*Math.sqrt(1+u-o-m),e[3]=(d-l)/_,e[0]=(s+c)/_,e[1]=.25*_,e[2]=(h+f)/_):(_=2*Math.sqrt(1+m-o-u),e[3]=(s-c)/_,e[0]=(d+l)/_,e[1]=(h+f)/_,e[2]=.25*_),e}function Et(e,t,n,r){var i=t[0],a=t[1],o=t[2],s=t[3],l=i+i,c=a+a,u=o+o,h=i*l,d=i*c,f=i*u,p=a*c,m=a*u,g=o*u,_=s*l,v=s*c,x=s*u,y=r[0],M=r[1],b=r[2];return e[0]=(1-(p+g))*y,e[1]=(d+x)*y,e[2]=(f-v)*y,e[3]=0,e[4]=(d-x)*M,e[5]=(1-(h+g))*M,e[6]=(m+_)*M,e[7]=0,e[8]=(f+v)*b,e[9]=(m-_)*b,e[10]=(1-(h+p))*b,e[11]=0,e[12]=n[0],e[13]=n[1],e[14]=n[2],e[15]=1,e}function St(e,t,n,r,i){var a=t[0],o=t[1],s=t[2],l=t[3],c=a+a,u=o+o,h=s+s,d=a*c,f=a*u,p=a*h,m=o*u,g=o*h,_=s*h,v=l*c,x=l*u,y=l*h,M=r[0],b=r[1],E=r[2],S=i[0],T=i[1],A=i[2],w=(1-(m+_))*M,R=(f+y)*M,P=(p-x)*M,C=(f-y)*b,L=(1-(d+_))*b,U=(g+v)*b,I=(p+x)*E,D=(g-v)*E,N=(1-(d+m))*E;return e[0]=w,e[1]=R,e[2]=P,e[3]=0,e[4]=C,e[5]=L,e[6]=U,e[7]=0,e[8]=I,e[9]=D,e[10]=N,e[11]=0,e[12]=n[0]+S-(w*S+C*T+I*A),e[13]=n[1]+T-(R*S+L*T+D*A),e[14]=n[2]+A-(P*S+U*T+N*A),e[15]=1,e}function Tt(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=n+n,s=r+r,l=i+i,c=n*o,u=r*o,h=r*s,d=i*o,f=i*s,p=i*l,m=a*o,g=a*s,_=a*l;return e[0]=1-h-p,e[1]=u+_,e[2]=d-g,e[3]=0,e[4]=u-_,e[5]=1-c-p,e[6]=f+m,e[7]=0,e[8]=d+g,e[9]=f-m,e[10]=1-c-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function At(e,t,n,r,i,a,o){var s=1/(n-t),l=1/(i-r),c=1/(a-o);return e[0]=2*a*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2*a*l,e[6]=0,e[7]=0,e[8]=(n+t)*s,e[9]=(i+r)*l,e[10]=(o+a)*c,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*a*2*c,e[15]=0,e}function wt(e,t,n,r,i){var a,o=1/Math.tan(t/2);return e[0]=o/n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=o,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=i&&i!==1/0?(a=1/(r-i),e[10]=(i+r)*a,e[14]=2*i*r*a):(e[10]=-1,e[14]=-2*r),e}var Rt=wt;function Pt(e,t,n,r,i){var a,o=1/Math.tan(t/2);return e[0]=o/n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=o,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=i&&i!==1/0?(a=1/(r-i),e[10]=i*a,e[14]=i*r*a):(e[10]=-1,e[14]=-r),e}function Ct(e,t,n,r){var i=Math.tan(t.upDegrees*Math.PI/180),a=Math.tan(t.downDegrees*Math.PI/180),o=Math.tan(t.leftDegrees*Math.PI/180),s=Math.tan(t.rightDegrees*Math.PI/180),l=2/(o+s),c=2/(i+a);return e[0]=l,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=c,e[6]=0,e[7]=0,e[8]=-(o-s)*l*.5,e[9]=(i-a)*c*.5,e[10]=r/(n-r),e[11]=-1,e[12]=0,e[13]=0,e[14]=r*n/(n-r),e[15]=0,e}function Lt(e,t,n,r,i,a,o){var s=1/(t-n),l=1/(r-i),c=1/(a-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*l,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*c,e[11]=0,e[12]=(t+n)*s,e[13]=(i+r)*l,e[14]=(o+a)*c,e[15]=1,e}var Ut=Lt;function It(e,t,n,r,i,a,o){var s=1/(t-n),l=1/(r-i),c=1/(a-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*l,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=c,e[11]=0,e[12]=(t+n)*s,e[13]=(i+r)*l,e[14]=a*c,e[15]=1,e}function Dt(e,t,n,r){var i,a,o,s,l,c,u,h,d,p,m=t[0],g=t[1],_=t[2],v=r[0],x=r[1],y=r[2],M=n[0],b=n[1],E=n[2];return Math.abs(m-M)<f&&Math.abs(g-b)<f&&Math.abs(_-E)<f?et(e):(u=m-M,h=g-b,d=_-E,i=x*(d*=p=1/Math.hypot(u,h,d))-y*(h*=p),a=y*(u*=p)-v*d,o=v*h-x*u,(p=Math.hypot(i,a,o))?(i*=p=1/p,a*=p,o*=p):(i=0,a=0,o=0),s=h*o-d*a,l=d*i-u*o,c=u*a-h*i,(p=Math.hypot(s,l,c))?(s*=p=1/p,l*=p,c*=p):(s=0,l=0,c=0),e[0]=i,e[1]=s,e[2]=u,e[3]=0,e[4]=a,e[5]=l,e[6]=h,e[7]=0,e[8]=o,e[9]=c,e[10]=d,e[11]=0,e[12]=-(i*m+a*g+o*_),e[13]=-(s*m+l*g+c*_),e[14]=-(u*m+h*g+d*_),e[15]=1,e)}function Nt(e,t,n,r){var i=t[0],a=t[1],o=t[2],s=r[0],l=r[1],c=r[2],u=i-n[0],h=a-n[1],d=o-n[2],f=u*u+h*h+d*d;f>0&&(u*=f=1/Math.sqrt(f),h*=f,d*=f);var p=l*d-c*h,m=c*u-s*d,g=s*h-l*u;return(f=p*p+m*m+g*g)>0&&(p*=f=1/Math.sqrt(f),m*=f,g*=f),e[0]=p,e[1]=m,e[2]=g,e[3]=0,e[4]=h*g-d*m,e[5]=d*p-u*g,e[6]=u*m-h*p,e[7]=0,e[8]=u,e[9]=h,e[10]=d,e[11]=0,e[12]=i,e[13]=a,e[14]=o,e[15]=1,e}function Ft(e){return"mat4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+", "+e[9]+", "+e[10]+", "+e[11]+", "+e[12]+", "+e[13]+", "+e[14]+", "+e[15]+")"}function Ot(e){return Math.hypot(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}function Bt(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e[3]=t[3]+n[3],e[4]=t[4]+n[4],e[5]=t[5]+n[5],e[6]=t[6]+n[6],e[7]=t[7]+n[7],e[8]=t[8]+n[8],e[9]=t[9]+n[9],e[10]=t[10]+n[10],e[11]=t[11]+n[11],e[12]=t[12]+n[12],e[13]=t[13]+n[13],e[14]=t[14]+n[14],e[15]=t[15]+n[15],e}function zt(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e[3]=t[3]-n[3],e[4]=t[4]-n[4],e[5]=t[5]-n[5],e[6]=t[6]-n[6],e[7]=t[7]-n[7],e[8]=t[8]-n[8],e[9]=t[9]-n[9],e[10]=t[10]-n[10],e[11]=t[11]-n[11],e[12]=t[12]-n[12],e[13]=t[13]-n[13],e[14]=t[14]-n[14],e[15]=t[15]-n[15],e}function Vt(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*n,e[5]=t[5]*n,e[6]=t[6]*n,e[7]=t[7]*n,e[8]=t[8]*n,e[9]=t[9]*n,e[10]=t[10]*n,e[11]=t[11]*n,e[12]=t[12]*n,e[13]=t[13]*n,e[14]=t[14]*n,e[15]=t[15]*n,e}function Ht(e,t,n,r){return e[0]=t[0]+n[0]*r,e[1]=t[1]+n[1]*r,e[2]=t[2]+n[2]*r,e[3]=t[3]+n[3]*r,e[4]=t[4]+n[4]*r,e[5]=t[5]+n[5]*r,e[6]=t[6]+n[6]*r,e[7]=t[7]+n[7]*r,e[8]=t[8]+n[8]*r,e[9]=t[9]+n[9]*r,e[10]=t[10]+n[10]*r,e[11]=t[11]+n[11]*r,e[12]=t[12]+n[12]*r,e[13]=t[13]+n[13]*r,e[14]=t[14]+n[14]*r,e[15]=t[15]+n[15]*r,e}function Gt(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]}function kt(e,t){var n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],p=e[11],m=e[12],g=e[13],_=e[14],v=e[15],x=t[0],y=t[1],M=t[2],b=t[3],E=t[4],S=t[5],T=t[6],A=t[7],w=t[8],R=t[9],P=t[10],C=t[11],L=t[12],U=t[13],I=t[14],D=t[15];return Math.abs(n-x)<=f*Math.max(1,Math.abs(n),Math.abs(x))&&Math.abs(r-y)<=f*Math.max(1,Math.abs(r),Math.abs(y))&&Math.abs(i-M)<=f*Math.max(1,Math.abs(i),Math.abs(M))&&Math.abs(a-b)<=f*Math.max(1,Math.abs(a),Math.abs(b))&&Math.abs(o-E)<=f*Math.max(1,Math.abs(o),Math.abs(E))&&Math.abs(s-S)<=f*Math.max(1,Math.abs(s),Math.abs(S))&&Math.abs(l-T)<=f*Math.max(1,Math.abs(l),Math.abs(T))&&Math.abs(c-A)<=f*Math.max(1,Math.abs(c),Math.abs(A))&&Math.abs(u-w)<=f*Math.max(1,Math.abs(u),Math.abs(w))&&Math.abs(h-R)<=f*Math.max(1,Math.abs(h),Math.abs(R))&&Math.abs(d-P)<=f*Math.max(1,Math.abs(d),Math.abs(P))&&Math.abs(p-C)<=f*Math.max(1,Math.abs(p),Math.abs(C))&&Math.abs(m-L)<=f*Math.max(1,Math.abs(m),Math.abs(L))&&Math.abs(g-U)<=f*Math.max(1,Math.abs(g),Math.abs(U))&&Math.abs(_-I)<=f*Math.max(1,Math.abs(_),Math.abs(I))&&Math.abs(v-D)<=f*Math.max(1,Math.abs(v),Math.abs(D))}var Wt=at,jt=zt;function Xt(){var e=new p(3);return p!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function qt(e){var t=new p(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function Yt(e){var t=e[0],n=e[1],r=e[2];return Math.hypot(t,n,r)}function Kt(e,t,n){var r=new p(3);return r[0]=e,r[1]=t,r[2]=n,r}function Zt(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}function Jt(e,t,n,r){return e[0]=t,e[1]=n,e[2]=r,e}function $t(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e}function Qt(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e}function en(e,t,n){return e[0]=t[0]*n[0],e[1]=t[1]*n[1],e[2]=t[2]*n[2],e}function tn(e,t,n){return e[0]=t[0]/n[0],e[1]=t[1]/n[1],e[2]=t[2]/n[2],e}function nn(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e[2]=Math.ceil(t[2]),e}function rn(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e[2]=Math.floor(t[2]),e}function an(e,t,n){return e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e[2]=Math.min(t[2],n[2]),e}function on(e,t,n){return e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e[2]=Math.max(t[2],n[2]),e}function sn(e,t){return e[0]=Math.round(t[0]),e[1]=Math.round(t[1]),e[2]=Math.round(t[2]),e}function ln(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e}function cn(e,t,n,r){return e[0]=t[0]+n[0]*r,e[1]=t[1]+n[1]*r,e[2]=t[2]+n[2]*r,e}function un(e,t){var n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2];return Math.hypot(n,r,i)}function hn(e,t){var n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2];return n*n+r*r+i*i}function dn(e){var t=e[0],n=e[1],r=e[2];return t*t+n*n+r*r}function fn(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e}function pn(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e}function mn(e,t){var n=t[0],r=t[1],i=t[2],a=n*n+r*r+i*i;return a>0&&(a=1/Math.sqrt(a)),e[0]=t[0]*a,e[1]=t[1]*a,e[2]=t[2]*a,e}function gn(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function _n(e,t,n){var r=t[0],i=t[1],a=t[2],o=n[0],s=n[1],l=n[2];return e[0]=i*l-a*s,e[1]=a*o-r*l,e[2]=r*s-i*o,e}function vn(e,t,n,r){var i=t[0],a=t[1],o=t[2];return e[0]=i+r*(n[0]-i),e[1]=a+r*(n[1]-a),e[2]=o+r*(n[2]-o),e}function xn(e,t,n,r,i,a){var o=a*a,s=o*(2*a-3)+1,l=o*(a-2)+a,c=o*(a-1),u=o*(3-2*a);return e[0]=t[0]*s+n[0]*l+r[0]*c+i[0]*u,e[1]=t[1]*s+n[1]*l+r[1]*c+i[1]*u,e[2]=t[2]*s+n[2]*l+r[2]*c+i[2]*u,e}function yn(e,t,n,r,i,a){var o=1-a,s=o*o,l=a*a,c=s*o,u=3*a*s,h=3*l*o,d=l*a;return e[0]=t[0]*c+n[0]*u+r[0]*h+i[0]*d,e[1]=t[1]*c+n[1]*u+r[1]*h+i[1]*d,e[2]=t[2]*c+n[2]*u+r[2]*h+i[2]*d,e}function Mn(e,t){t=t||1;var n=2*m()*Math.PI,r=2*m()-1,i=Math.sqrt(1-r*r)*t;return e[0]=Math.cos(n)*i,e[1]=Math.sin(n)*i,e[2]=r*t,e}function bn(e,t,n){var r=t[0],i=t[1],a=t[2],o=n[3]*r+n[7]*i+n[11]*a+n[15];return o=o||1,e[0]=(n[0]*r+n[4]*i+n[8]*a+n[12])/o,e[1]=(n[1]*r+n[5]*i+n[9]*a+n[13])/o,e[2]=(n[2]*r+n[6]*i+n[10]*a+n[14])/o,e}function En(e,t,n){var r=t[0],i=t[1],a=t[2];return e[0]=r*n[0]+i*n[3]+a*n[6],e[1]=r*n[1]+i*n[4]+a*n[7],e[2]=r*n[2]+i*n[5]+a*n[8],e}function Sn(e,t,n){var r=n[0],i=n[1],a=n[2],o=n[3],s=t[0],l=t[1],c=t[2],u=i*c-a*l,h=a*s-r*c,d=r*l-i*s,f=i*d-a*h,p=a*u-r*d,m=r*h-i*u,g=2*o;return u*=g,h*=g,d*=g,f*=2,p*=2,m*=2,e[0]=s+u+f,e[1]=l+h+p,e[2]=c+d+m,e}function Tn(e,t,n,r){var i=[],a=[];return i[0]=t[0]-n[0],i[1]=t[1]-n[1],i[2]=t[2]-n[2],a[0]=i[0],a[1]=i[1]*Math.cos(r)-i[2]*Math.sin(r),a[2]=i[1]*Math.sin(r)+i[2]*Math.cos(r),e[0]=a[0]+n[0],e[1]=a[1]+n[1],e[2]=a[2]+n[2],e}function An(e,t,n,r){var i=[],a=[];return i[0]=t[0]-n[0],i[1]=t[1]-n[1],i[2]=t[2]-n[2],a[0]=i[2]*Math.sin(r)+i[0]*Math.cos(r),a[1]=i[1],a[2]=i[2]*Math.cos(r)-i[0]*Math.sin(r),e[0]=a[0]+n[0],e[1]=a[1]+n[1],e[2]=a[2]+n[2],e}function wn(e,t,n,r){var i=[],a=[];return i[0]=t[0]-n[0],i[1]=t[1]-n[1],i[2]=t[2]-n[2],a[0]=i[0]*Math.cos(r)-i[1]*Math.sin(r),a[1]=i[0]*Math.sin(r)+i[1]*Math.cos(r),a[2]=i[2],e[0]=a[0]+n[0],e[1]=a[1]+n[1],e[2]=a[2]+n[2],e}function Rn(e,t){var n=e[0],r=e[1],i=e[2],a=t[0],o=t[1],s=t[2],l=Math.sqrt(n*n+r*r+i*i)*Math.sqrt(a*a+o*o+s*s),c=l&&gn(e,t)/l;return Math.acos(Math.min(Math.max(c,-1),1))}function Pn(e){return e[0]=0,e[1]=0,e[2]=0,e}function Cn(e){return"vec3("+e[0]+", "+e[1]+", "+e[2]+")"}function Ln(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]}function Un(e,t){var n=e[0],r=e[1],i=e[2],a=t[0],o=t[1],s=t[2];return Math.abs(n-a)<=f*Math.max(1,Math.abs(n),Math.abs(a))&&Math.abs(r-o)<=f*Math.max(1,Math.abs(r),Math.abs(o))&&Math.abs(i-s)<=f*Math.max(1,Math.abs(i),Math.abs(s))}var In,Dn=Qt,Nn=en,Fn=tn,On=un,Bn=hn,zn=Yt,Vn=dn,Hn=(In=Xt(),function(e,t,n,r,i,a){var o,s;for(t||(t=3),n||(n=0),s=r?Math.min(r*t+n,e.length):e.length,o=n;o<s;o+=t)In[0]=e[o],In[1]=e[o+1],In[2]=e[o+2],i(In,In,a),e[o]=In[0],e[o+1]=In[1],e[o+2]=In[2];return e});function Gn(){var e=new p(4);return p!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function kn(e){var t=new p(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function Wn(e,t,n,r){var i=new p(4);return i[0]=e,i[1]=t,i[2]=n,i[3]=r,i}function jn(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}function Xn(e,t,n,r,i){return e[0]=t,e[1]=n,e[2]=r,e[3]=i,e}function qn(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e[3]=t[3]+n[3],e}function Yn(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e[3]=t[3]-n[3],e}function Kn(e,t,n){return e[0]=t[0]*n[0],e[1]=t[1]*n[1],e[2]=t[2]*n[2],e[3]=t[3]*n[3],e}function Zn(e,t,n){return e[0]=t[0]/n[0],e[1]=t[1]/n[1],e[2]=t[2]/n[2],e[3]=t[3]/n[3],e}function Jn(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e[2]=Math.ceil(t[2]),e[3]=Math.ceil(t[3]),e}function $n(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e[2]=Math.floor(t[2]),e[3]=Math.floor(t[3]),e}function Qn(e,t,n){return e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e[2]=Math.min(t[2],n[2]),e[3]=Math.min(t[3],n[3]),e}function er(e,t,n){return e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e[2]=Math.max(t[2],n[2]),e[3]=Math.max(t[3],n[3]),e}function tr(e,t){return e[0]=Math.round(t[0]),e[1]=Math.round(t[1]),e[2]=Math.round(t[2]),e[3]=Math.round(t[3]),e}function nr(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e}function rr(e,t,n,r){return e[0]=t[0]+n[0]*r,e[1]=t[1]+n[1]*r,e[2]=t[2]+n[2]*r,e[3]=t[3]+n[3]*r,e}function ir(e,t){var n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return Math.hypot(n,r,i,a)}function ar(e,t){var n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return n*n+r*r+i*i+a*a}function or(e){var t=e[0],n=e[1],r=e[2],i=e[3];return Math.hypot(t,n,r,i)}function sr(e){var t=e[0],n=e[1],r=e[2],i=e[3];return t*t+n*n+r*r+i*i}function lr(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e}function cr(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e[3]=1/t[3],e}function ur(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=n*n+r*r+i*i+a*a;return o>0&&(o=1/Math.sqrt(o)),e[0]=n*o,e[1]=r*o,e[2]=i*o,e[3]=a*o,e}function hr(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}function dr(e,t,n,r){var i=n[0]*r[1]-n[1]*r[0],a=n[0]*r[2]-n[2]*r[0],o=n[0]*r[3]-n[3]*r[0],s=n[1]*r[2]-n[2]*r[1],l=n[1]*r[3]-n[3]*r[1],c=n[2]*r[3]-n[3]*r[2],u=t[0],h=t[1],d=t[2],f=t[3];return e[0]=h*c-d*l+f*s,e[1]=-u*c+d*o-f*a,e[2]=u*l-h*o+f*i,e[3]=-u*s+h*a-d*i,e}function fr(e,t,n,r){var i=t[0],a=t[1],o=t[2],s=t[3];return e[0]=i+r*(n[0]-i),e[1]=a+r*(n[1]-a),e[2]=o+r*(n[2]-o),e[3]=s+r*(n[3]-s),e}function pr(e,t){var n,r,i,a,o,s;t=t||1;do{o=(n=2*m()-1)*n+(r=2*m()-1)*r}while(o>=1);do{s=(i=2*m()-1)*i+(a=2*m()-1)*a}while(s>=1);var l=Math.sqrt((1-o)/s);return e[0]=t*n,e[1]=t*r,e[2]=t*i*l,e[3]=t*a*l,e}function mr(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3];return e[0]=n[0]*r+n[4]*i+n[8]*a+n[12]*o,e[1]=n[1]*r+n[5]*i+n[9]*a+n[13]*o,e[2]=n[2]*r+n[6]*i+n[10]*a+n[14]*o,e[3]=n[3]*r+n[7]*i+n[11]*a+n[15]*o,e}function gr(e,t,n){var r=t[0],i=t[1],a=t[2],o=n[0],s=n[1],l=n[2],c=n[3],u=c*r+s*a-l*i,h=c*i+l*r-o*a,d=c*a+o*i-s*r,f=-o*r-s*i-l*a;return e[0]=u*c+f*-o+h*-l-d*-s,e[1]=h*c+f*-s+d*-o-u*-l,e[2]=d*c+f*-l+u*-s-h*-o,e[3]=t[3],e}function _r(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e}function vr(e){return"vec4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"}function xr(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]}function yr(e,t){var n=e[0],r=e[1],i=e[2],a=e[3],o=t[0],s=t[1],l=t[2],c=t[3];return Math.abs(n-o)<=f*Math.max(1,Math.abs(n),Math.abs(o))&&Math.abs(r-s)<=f*Math.max(1,Math.abs(r),Math.abs(s))&&Math.abs(i-l)<=f*Math.max(1,Math.abs(i),Math.abs(l))&&Math.abs(a-c)<=f*Math.max(1,Math.abs(a),Math.abs(c))}var Mr=Yn,br=Kn,Er=Zn,Sr=ir,Tr=ar,Ar=or,wr=sr,Rr=function(){var e=Gn();return function(t,n,r,i,a,o){var s,l;for(n||(n=4),r||(r=0),l=i?Math.min(i*n+r,t.length):t.length,s=r;s<l;s+=n)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],e[3]=t[s+3],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3];return t}}();function Pr(){var e=new p(4);return p!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function Cr(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function Lr(e,t,n){n*=.5;var r=Math.sin(n);return e[0]=r*t[0],e[1]=r*t[1],e[2]=r*t[2],e[3]=Math.cos(n),e}function Ur(e,t){var n=2*Math.acos(t[3]),r=Math.sin(n/2);return r>f?(e[0]=t[0]/r,e[1]=t[1]/r,e[2]=t[2]/r):(e[0]=1,e[1]=0,e[2]=0),n}function Ir(e,t){var n=li(e,t);return Math.acos(2*n*n-1)}function Dr(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=n[0],l=n[1],c=n[2],u=n[3];return e[0]=r*u+o*s+i*c-a*l,e[1]=i*u+o*l+a*s-r*c,e[2]=a*u+o*c+r*l-i*s,e[3]=o*u-r*s-i*l-a*c,e}function Nr(e,t,n){n*=.5;var r=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(n),l=Math.cos(n);return e[0]=r*l+o*s,e[1]=i*l+a*s,e[2]=a*l-i*s,e[3]=o*l-r*s,e}function Fr(e,t,n){n*=.5;var r=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(n),l=Math.cos(n);return e[0]=r*l-a*s,e[1]=i*l+o*s,e[2]=a*l+r*s,e[3]=o*l-i*s,e}function Or(e,t,n){n*=.5;var r=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(n),l=Math.cos(n);return e[0]=r*l+i*s,e[1]=i*l-r*s,e[2]=a*l+o*s,e[3]=o*l-a*s,e}function Br(e,t){var n=t[0],r=t[1],i=t[2];return e[0]=n,e[1]=r,e[2]=i,e[3]=Math.sqrt(Math.abs(1-n*n-r*r-i*i)),e}function zr(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=Math.sqrt(n*n+r*r+i*i),s=Math.exp(a),l=o>0?s*Math.sin(o)/o:0;return e[0]=n*l,e[1]=r*l,e[2]=i*l,e[3]=s*Math.cos(o),e}function Vr(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=Math.sqrt(n*n+r*r+i*i),s=o>0?Math.atan2(o,a)/o:0;return e[0]=n*s,e[1]=r*s,e[2]=i*s,e[3]=.5*Math.log(n*n+r*r+i*i+a*a),e}function Hr(e,t,n){return Vr(e,t),si(e,e,n),zr(e,e),e}function Gr(e,t,n,r){var i,a,o,s,l,c=t[0],u=t[1],h=t[2],d=t[3],p=n[0],m=n[1],g=n[2],_=n[3];return(a=c*p+u*m+h*g+d*_)<0&&(a=-a,p=-p,m=-m,g=-g,_=-_),1-a>f?(i=Math.acos(a),o=Math.sin(i),s=Math.sin((1-r)*i)/o,l=Math.sin(r*i)/o):(s=1-r,l=r),e[0]=s*c+l*p,e[1]=s*u+l*m,e[2]=s*h+l*g,e[3]=s*d+l*_,e}function kr(e){var t=m(),n=m(),r=m(),i=Math.sqrt(1-t),a=Math.sqrt(t);return e[0]=i*Math.sin(2*Math.PI*n),e[1]=i*Math.cos(2*Math.PI*n),e[2]=a*Math.sin(2*Math.PI*r),e[3]=a*Math.cos(2*Math.PI*r),e}function Wr(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=n*n+r*r+i*i+a*a,s=o?1/o:0;return e[0]=-n*s,e[1]=-r*s,e[2]=-i*s,e[3]=a*s,e}function jr(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e}function Xr(e,t){var n,r=t[0]+t[4]+t[8];if(r>0)n=Math.sqrt(r+1),e[3]=.5*n,n=.5/n,e[0]=(t[5]-t[7])*n,e[1]=(t[6]-t[2])*n,e[2]=(t[1]-t[3])*n;else{var i=0;t[4]>t[0]&&(i=1),t[8]>t[3*i+i]&&(i=2);var a=(i+1)%3,o=(i+2)%3;n=Math.sqrt(t[3*i+i]-t[3*a+a]-t[3*o+o]+1),e[i]=.5*n,n=.5/n,e[3]=(t[3*a+o]-t[3*o+a])*n,e[a]=(t[3*a+i]+t[3*i+a])*n,e[o]=(t[3*o+i]+t[3*i+o])*n}return e}function qr(e,t,n,r){var i=.5*Math.PI/180;t*=i,n*=i,r*=i;var a=Math.sin(t),o=Math.cos(t),s=Math.sin(n),l=Math.cos(n),c=Math.sin(r),u=Math.cos(r);return e[0]=a*l*u-o*s*c,e[1]=o*s*u+a*l*c,e[2]=o*l*c-a*s*u,e[3]=o*l*u+a*s*c,e}function Yr(e){return"quat("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"}var Kr,Zr,Jr,$r,Qr,ei,ti=kn,ni=Wn,ri=jn,ii=Xn,ai=qn,oi=Dr,si=nr,li=hr,ci=fr,ui=or,hi=ui,di=sr,fi=di,pi=ur,mi=xr,gi=yr,_i=(Kr=Xt(),Zr=Kt(1,0,0),Jr=Kt(0,1,0),function(e,t,n){var r=gn(t,n);return r<-.999999?(_n(Kr,Zr,t),zn(Kr)<1e-6&&_n(Kr,Jr,t),mn(Kr,Kr),Lr(e,Kr,Math.PI),e):r>.999999?(e[0]=0,e[1]=0,e[2]=0,e[3]=1,e):(_n(Kr,t,n),e[0]=Kr[0],e[1]=Kr[1],e[2]=Kr[2],e[3]=1+r,pi(e,e))}),vi=($r=Pr(),Qr=Pr(),function(e,t,n,r,i,a){return Gr($r,t,i,a),Gr(Qr,n,r,a),Gr(e,$r,Qr,2*a*(1-a)),e}),xi=(ei=_e(),function(e,t,n,r){return ei[0]=n[0],ei[3]=n[1],ei[6]=n[2],ei[1]=r[0],ei[4]=r[1],ei[7]=r[2],ei[2]=-t[0],ei[5]=-t[1],ei[8]=-t[2],pi(e,Xr(e,ei))});function yi(){var e=new p(8);return p!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0),e[3]=1,e}function Mi(e){var t=new p(8);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t}function bi(e,t,n,r,i,a,o,s){var l=new p(8);return l[0]=e,l[1]=t,l[2]=n,l[3]=r,l[4]=i,l[5]=a,l[6]=o,l[7]=s,l}function Ei(e,t,n,r,i,a,o){var s=new p(8);s[0]=e,s[1]=t,s[2]=n,s[3]=r;var l=.5*i,c=.5*a,u=.5*o;return s[4]=l*r+c*n-u*t,s[5]=c*r+u*e-l*n,s[6]=u*r+l*t-c*e,s[7]=-l*e-c*t-u*n,s}function Si(e,t,n){var r=.5*n[0],i=.5*n[1],a=.5*n[2],o=t[0],s=t[1],l=t[2],c=t[3];return e[0]=o,e[1]=s,e[2]=l,e[3]=c,e[4]=r*c+i*l-a*s,e[5]=i*c+a*o-r*l,e[6]=a*c+r*s-i*o,e[7]=-r*o-i*s-a*l,e}function Ti(e,t){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e[4]=.5*t[0],e[5]=.5*t[1],e[6]=.5*t[2],e[7]=0,e}function Ai(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=0,e[5]=0,e[6]=0,e[7]=0,e}function wi(e,t){var n=Pr();bt(n,t);var r=new p(3);return yt(r,t),Si(e,n,r),e}function Ri(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e}function Pi(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e}function Ci(e,t,n,r,i,a,o,s,l){return e[0]=t,e[1]=n,e[2]=r,e[3]=i,e[4]=a,e[5]=o,e[6]=s,e[7]=l,e}var Li=ri;function Ui(e,t){return e[0]=t[4],e[1]=t[5],e[2]=t[6],e[3]=t[7],e}var Ii=ri;function Di(e,t){return e[4]=t[0],e[5]=t[1],e[6]=t[2],e[7]=t[3],e}function Ni(e,t){var n=t[4],r=t[5],i=t[6],a=t[7],o=-t[0],s=-t[1],l=-t[2],c=t[3];return e[0]=2*(n*c+a*o+r*l-i*s),e[1]=2*(r*c+a*s+i*o-n*l),e[2]=2*(i*c+a*l+n*s-r*o),e}function Fi(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=.5*n[0],l=.5*n[1],c=.5*n[2],u=t[4],h=t[5],d=t[6],f=t[7];return e[0]=r,e[1]=i,e[2]=a,e[3]=o,e[4]=o*s+i*c-a*l+u,e[5]=o*l+a*s-r*c+h,e[6]=o*c+r*l-i*s+d,e[7]=-r*s-i*l-a*c+f,e}function Oi(e,t,n){var r=-t[0],i=-t[1],a=-t[2],o=t[3],s=t[4],l=t[5],c=t[6],u=t[7],h=s*o+u*r+l*a-c*i,d=l*o+u*i+c*r-s*a,f=c*o+u*a+s*i-l*r,p=u*o-s*r-l*i-c*a;return Nr(e,t,n),r=e[0],i=e[1],a=e[2],o=e[3],e[4]=h*o+p*r+d*a-f*i,e[5]=d*o+p*i+f*r-h*a,e[6]=f*o+p*a+h*i-d*r,e[7]=p*o-h*r-d*i-f*a,e}function Bi(e,t,n){var r=-t[0],i=-t[1],a=-t[2],o=t[3],s=t[4],l=t[5],c=t[6],u=t[7],h=s*o+u*r+l*a-c*i,d=l*o+u*i+c*r-s*a,f=c*o+u*a+s*i-l*r,p=u*o-s*r-l*i-c*a;return Fr(e,t,n),r=e[0],i=e[1],a=e[2],o=e[3],e[4]=h*o+p*r+d*a-f*i,e[5]=d*o+p*i+f*r-h*a,e[6]=f*o+p*a+h*i-d*r,e[7]=p*o-h*r-d*i-f*a,e}function zi(e,t,n){var r=-t[0],i=-t[1],a=-t[2],o=t[3],s=t[4],l=t[5],c=t[6],u=t[7],h=s*o+u*r+l*a-c*i,d=l*o+u*i+c*r-s*a,f=c*o+u*a+s*i-l*r,p=u*o-s*r-l*i-c*a;return Or(e,t,n),r=e[0],i=e[1],a=e[2],o=e[3],e[4]=h*o+p*r+d*a-f*i,e[5]=d*o+p*i+f*r-h*a,e[6]=f*o+p*a+h*i-d*r,e[7]=p*o-h*r-d*i-f*a,e}function Vi(e,t,n){var r=n[0],i=n[1],a=n[2],o=n[3],s=t[0],l=t[1],c=t[2],u=t[3];return e[0]=s*o+u*r+l*a-c*i,e[1]=l*o+u*i+c*r-s*a,e[2]=c*o+u*a+s*i-l*r,e[3]=u*o-s*r-l*i-c*a,s=t[4],l=t[5],c=t[6],u=t[7],e[4]=s*o+u*r+l*a-c*i,e[5]=l*o+u*i+c*r-s*a,e[6]=c*o+u*a+s*i-l*r,e[7]=u*o-s*r-l*i-c*a,e}function Hi(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=n[0],l=n[1],c=n[2],u=n[3];return e[0]=r*u+o*s+i*c-a*l,e[1]=i*u+o*l+a*s-r*c,e[2]=a*u+o*c+r*l-i*s,e[3]=o*u-r*s-i*l-a*c,s=n[4],l=n[5],c=n[6],u=n[7],e[4]=r*u+o*s+i*c-a*l,e[5]=i*u+o*l+a*s-r*c,e[6]=a*u+o*c+r*l-i*s,e[7]=o*u-r*s-i*l-a*c,e}function Gi(e,t,n,r){if(Math.abs(r)<f)return Ri(e,t);var i=Math.hypot(n[0],n[1],n[2]);r*=.5;var a=Math.sin(r),o=a*n[0]/i,s=a*n[1]/i,l=a*n[2]/i,c=Math.cos(r),u=t[0],h=t[1],d=t[2],p=t[3];e[0]=u*c+p*o+h*l-d*s,e[1]=h*c+p*s+d*o-u*l,e[2]=d*c+p*l+u*s-h*o,e[3]=p*c-u*o-h*s-d*l;var m=t[4],g=t[5],_=t[6],v=t[7];return e[4]=m*c+v*o+g*l-_*s,e[5]=g*c+v*s+_*o-m*l,e[6]=_*c+v*l+m*s-g*o,e[7]=v*c-m*o-g*s-_*l,e}function ki(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e[3]=t[3]+n[3],e[4]=t[4]+n[4],e[5]=t[5]+n[5],e[6]=t[6]+n[6],e[7]=t[7]+n[7],e}function Wi(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=n[4],l=n[5],c=n[6],u=n[7],h=t[4],d=t[5],f=t[6],p=t[7],m=n[0],g=n[1],_=n[2],v=n[3];return e[0]=r*v+o*m+i*_-a*g,e[1]=i*v+o*g+a*m-r*_,e[2]=a*v+o*_+r*g-i*m,e[3]=o*v-r*m-i*g-a*_,e[4]=r*u+o*s+i*c-a*l+h*v+p*m+d*_-f*g,e[5]=i*u+o*l+a*s-r*c+d*v+p*g+f*m-h*_,e[6]=a*u+o*c+r*l-i*s+f*v+p*_+h*g-d*m,e[7]=o*u-r*s-i*l-a*c+p*v-h*m-d*g-f*_,e}var ji=Wi;function Xi(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*n,e[5]=t[5]*n,e[6]=t[6]*n,e[7]=t[7]*n,e}var qi=li;function Yi(e,t,n,r){var i=1-r;return qi(t,n)<0&&(r=-r),e[0]=t[0]*i+n[0]*r,e[1]=t[1]*i+n[1]*r,e[2]=t[2]*i+n[2]*r,e[3]=t[3]*i+n[3]*r,e[4]=t[4]*i+n[4]*r,e[5]=t[5]*i+n[5]*r,e[6]=t[6]*i+n[6]*r,e[7]=t[7]*i+n[7]*r,e}function Ki(e,t){var n=Qi(t);return e[0]=-t[0]/n,e[1]=-t[1]/n,e[2]=-t[2]/n,e[3]=t[3]/n,e[4]=-t[4]/n,e[5]=-t[5]/n,e[6]=-t[6]/n,e[7]=t[7]/n,e}function Zi(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e[4]=-t[4],e[5]=-t[5],e[6]=-t[6],e[7]=t[7],e}var Ji=ui,$i=Ji,Qi=di,ea=Qi;function ta(e,t){var n=Qi(t);if(n>0){n=Math.sqrt(n);var r=t[0]/n,i=t[1]/n,a=t[2]/n,o=t[3]/n,s=t[4],l=t[5],c=t[6],u=t[7],h=r*s+i*l+a*c+o*u;e[0]=r,e[1]=i,e[2]=a,e[3]=o,e[4]=(s-r*h)/n,e[5]=(l-i*h)/n,e[6]=(c-a*h)/n,e[7]=(u-o*h)/n}return e}function na(e){return"quat2("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+")"}function ra(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]}function ia(e,t){var n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],l=e[6],c=e[7],u=t[0],h=t[1],d=t[2],p=t[3],m=t[4],g=t[5],_=t[6],v=t[7];return Math.abs(n-u)<=f*Math.max(1,Math.abs(n),Math.abs(u))&&Math.abs(r-h)<=f*Math.max(1,Math.abs(r),Math.abs(h))&&Math.abs(i-d)<=f*Math.max(1,Math.abs(i),Math.abs(d))&&Math.abs(a-p)<=f*Math.max(1,Math.abs(a),Math.abs(p))&&Math.abs(o-m)<=f*Math.max(1,Math.abs(o),Math.abs(m))&&Math.abs(s-g)<=f*Math.max(1,Math.abs(s),Math.abs(g))&&Math.abs(l-_)<=f*Math.max(1,Math.abs(l),Math.abs(_))&&Math.abs(c-v)<=f*Math.max(1,Math.abs(c),Math.abs(v))}function aa(){var e=new p(2);return p!=Float32Array&&(e[0]=0,e[1]=0),e}function oa(e){var t=new p(2);return t[0]=e[0],t[1]=e[1],t}function sa(e,t){var n=new p(2);return n[0]=e,n[1]=t,n}function la(e,t){return e[0]=t[0],e[1]=t[1],e}function ca(e,t,n){return e[0]=t,e[1]=n,e}function ua(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e}function ha(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e}function da(e,t,n){return e[0]=t[0]*n[0],e[1]=t[1]*n[1],e}function fa(e,t,n){return e[0]=t[0]/n[0],e[1]=t[1]/n[1],e}function pa(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e}function ma(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e}function ga(e,t,n){return e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e}function _a(e,t,n){return e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e}function va(e,t){return e[0]=Math.round(t[0]),e[1]=Math.round(t[1]),e}function xa(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e}function ya(e,t,n,r){return e[0]=t[0]+n[0]*r,e[1]=t[1]+n[1]*r,e}function Ma(e,t){var n=t[0]-e[0],r=t[1]-e[1];return Math.hypot(n,r)}function ba(e,t){var n=t[0]-e[0],r=t[1]-e[1];return n*n+r*r}function Ea(e){var t=e[0],n=e[1];return Math.hypot(t,n)}function Sa(e){var t=e[0],n=e[1];return t*t+n*n}function Ta(e,t){return e[0]=-t[0],e[1]=-t[1],e}function Aa(e,t){return e[0]=1/t[0],e[1]=1/t[1],e}function wa(e,t){var n=t[0],r=t[1],i=n*n+r*r;return i>0&&(i=1/Math.sqrt(i)),e[0]=t[0]*i,e[1]=t[1]*i,e}function Ra(e,t){return e[0]*t[0]+e[1]*t[1]}function Pa(e,t,n){var r=t[0]*n[1]-t[1]*n[0];return e[0]=e[1]=0,e[2]=r,e}function Ca(e,t,n,r){var i=t[0],a=t[1];return e[0]=i+r*(n[0]-i),e[1]=a+r*(n[1]-a),e}function La(e,t){t=t||1;var n=2*m()*Math.PI;return e[0]=Math.cos(n)*t,e[1]=Math.sin(n)*t,e}function Ua(e,t,n){var r=t[0],i=t[1];return e[0]=n[0]*r+n[2]*i,e[1]=n[1]*r+n[3]*i,e}function Ia(e,t,n){var r=t[0],i=t[1];return e[0]=n[0]*r+n[2]*i+n[4],e[1]=n[1]*r+n[3]*i+n[5],e}function Da(e,t,n){var r=t[0],i=t[1];return e[0]=n[0]*r+n[3]*i+n[6],e[1]=n[1]*r+n[4]*i+n[7],e}function Na(e,t,n){var r=t[0],i=t[1];return e[0]=n[0]*r+n[4]*i+n[12],e[1]=n[1]*r+n[5]*i+n[13],e}function Fa(e,t,n,r){var i=t[0]-n[0],a=t[1]-n[1],o=Math.sin(r),s=Math.cos(r);return e[0]=i*s-a*o+n[0],e[1]=i*o+a*s+n[1],e}function Oa(e,t){var n=e[0],r=e[1],i=t[0],a=t[1],o=Math.sqrt(n*n+r*r)*Math.sqrt(i*i+a*a),s=o&&(n*i+r*a)/o;return Math.acos(Math.min(Math.max(s,-1),1))}function Ba(e){return e[0]=0,e[1]=0,e}function za(e){return"vec2("+e[0]+", "+e[1]+")"}function Va(e,t){return e[0]===t[0]&&e[1]===t[1]}function Ha(e,t){var n=e[0],r=e[1],i=t[0],a=t[1];return Math.abs(n-i)<=f*Math.max(1,Math.abs(n),Math.abs(i))&&Math.abs(r-a)<=f*Math.max(1,Math.abs(r),Math.abs(a))}var Ga=Ea,ka=ha,Wa=da,ja=fa,Xa=Ma,qa=ba,Ya=Sa,Ka=function(){var e=aa();return function(t,n,r,i,a,o){var s,l;for(n||(n=2),r||(r=0),l=i?Math.min(i*n+r,t.length):t.length,s=r;s<l;s+=n)e[0]=t[s],e[1]=t[s+1],a(e,e,o),t[s]=e[0],t[s+1]=e[1];return t}}()},522:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\nprecision highp float;\n\n// 这个 shader 考虑了光照 + 透明，\n\nlayout(std140, column_major) uniform;\n\n// these three are added by the accumulator class\nuniform mat4 u_view_proj;\nuniform vec3 u_eye_position;\nuniform vec3 u_light_position;\n\n// this should be added by the user in the inner render function\nuniform sampler2D u_texture;\nuniform sampler2D u_specular;\nuniform sampler2D u_bump;\n\nin vec3 v_position;\nin vec2 v_texcoord;\nin vec3 v_normal;\nflat in vec4 v_color;\n\nlayout(location=0) out vec4 accumColor;\nlayout(location=1) out float accumAlpha;\n\nfloat weight(float z, float a) {\n    return clamp(pow(min(1.0, a * 10.0) + 0.01, 3.0) * 1e8 * pow(1.0 - z * 0.9, 3.0), 1e-2, 3e3);\n}\n\nvoid main() {\n    vec3 position = v_position.xyz;\n    vec3 normal = normalize(v_normal.xyz);\n    normal = normalize(normal + texture(u_bump, v_texcoord).xyz * 2.0 - 1.0);\n\n    vec2 texcoord = v_texcoord;\n\n    vec4 original_color = texture(u_texture, texcoord);\n    vec4 base_color = v_color * texture(u_texture, texcoord);\n    vec4 base_specular_color = texture(u_specular, texcoord);\n\n    vec3 eye_direction = normalize(u_eye_position - position);\n    vec3 light_vec = u_light_position - position;\n    vec3 light_direction = normalize(light_vec);\n    vec3 reflect_direction = reflect(-light_direction, normal);\n    float nDotL = max(dot(light_direction, normal), 0.0);\n\n    float diffuse = nDotL;\n    float ambient = 0.3;\n    float specular = pow(max(dot(reflect_direction, eye_direction), 0.0), 20.0);\n\n    vec3 diffuse_color = base_color.rgb * diffuse;\n    vec3 ambient_color = base_color.rgb * ambient;\n    vec3 specular_color = base_specular_color.rgb * specular;\n\n\n    vec4 color = vec4(diffuse_color + ambient_color + specular_color, v_color.a);\n    color.rgb *= color.a;\n    float w = weight(gl_FragCoord.z, color.a);\n    accumColor = vec4(color.rgb * w, color.a);\n    accumAlpha = color.a * w;\n}"},211:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\n\nlayout(std140, column_major) uniform;\n\n// these are generated by the engine\nin vec4 a_position;\nin vec3 a_normal;\nin vec2 a_texcoord;\n\n// this two should be added by the user\nin vec4 a_color;\n\n\n// these three is added by the accumulator class\nuniform mat4 u_view_proj;\nuniform vec3 u_eye_position;\nuniform vec3 u_light_position;\n// this should be added by user in the inner render function\nuniform mat4 u_model_matrix;\n\n// those are passed to the fragment shader\nout vec3 v_position;\nout vec2 v_texcoord;\nout vec3 v_normal;\nflat out vec4 v_color;\n\nvoid main() {\n    vec4 world_matrix = u_model_matrix * a_position;\n    v_position = world_matrix.xyz;\n    v_texcoord = a_texcoord;\n    v_normal = mat3(u_model_matrix) * a_normal;\n    v_color = a_color;\n    gl_Position = u_view_proj * world_matrix;\n}"},847:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\nprecision highp float;\n\n// 这个 shader 考虑了光照 + 透明，\n\nlayout(std140, column_major) uniform;\n\n// these three are added by the accumulator class\nuniform mat4 u_view_proj;\nuniform vec3 u_eye_position;\nuniform vec3 u_light_position;\n\nuniform bool u_is_skybox;\n\n// this should be added by the user in the inner render function\nuniform sampler2D u_texture;\nuniform sampler2D u_specular;\nuniform sampler2D u_bump;\n\nuniform samplerCube u_skybox;\n\nin vec3 v_position;\nin vec2 v_texcoord;\nin vec3 v_normal;\nflat in vec4 v_color;\n\nout vec4 fragColor;\n\nvoid main() {\n    vec3 position = v_position.xyz;\n    vec3 normal = normalize(v_normal.xyz);\n    vec2 texcoord = v_texcoord;\n\n    vec3 I = normalize(v_position - v_normal);\n    vec3 Reflected = reflect(I, normalize(v_normal));\n\n    vec4 base_color = v_color;\n    \n    if(u_is_skybox) {\n        base_color = base_color * vec4(texture(u_skybox, Reflected).rgb, 1.0);   \n    } else {\n        base_color = base_color * texture(u_texture, texcoord);\n    }\n\n    vec4 base_specular_color = texture(u_specular, texcoord);\n\n    vec3 eye_direction = normalize(u_eye_position - position);\n    vec3 light_vec = u_light_position - position;\n    vec3 light_direction = normalize(light_vec);\n    vec3 reflect_direction = reflect(-light_direction, normal);\n    float nDotL = max(dot(light_direction, normal), 0.0);\n\n    float diffuse = nDotL;\n    float ambient = 0.3;\n    float specular = pow(max(dot(reflect_direction, eye_direction), 0.0), 20.0);\n\n    vec3 diffuse_color = base_color.rgb * diffuse;\n    vec3 ambient_color = base_color.rgb * ambient;\n    vec3 specular_color = base_specular_color.rgb * specular;\n\n    fragColor = vec4(diffuse_color + ambient_color + specular_color, v_color.a);\n}"},453:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\nprecision highp float;\n\nuniform sampler2D u_accumulate;\nuniform sampler2D u_accumulate_alpha;\n\n// 这个是用来从两个 accumlated 的纹理中，获得最终的颜色\n\nout vec4 fragColor;\n\nvoid main() {\n    // 找到当前像素的坐标\n    ivec2 frag_coord = ivec2(gl_FragCoord.xy);\n    // 从像素的 Accum 纹理中获取当前像素的颜色值\n    vec4 accum = texelFetch(u_accumulate, frag_coord, 0);\n    float a = 1.0 - accum.a;\n    // 从透明的 Accum 纹理中获取当前像素的透明度值\n    accum.a = texelFetch(u_accumulate_alpha, frag_coord, 0).r;\n    fragColor = vec4(a * accum.rgb / clamp(accum.a, 0.001, 50000.0), a);\n}"},173:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\n\nin vec4 a_position;\n\nvoid main() {\n    gl_Position = a_position;\n}"},742:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\n\nin vec2 a_position;\nin vec2 a_texcoord;\n\nout vec2 v_texcoord;\n\nvoid main()\n{\n    v_texcoord = a_texcoord;\n    gl_Position = vec4(a_position.x, a_position.y, 0.0, 1.0); \n}  \n\n"},318:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\n\nprecision highp float;\n\nin vec2 v_texcoord;\n\nout vec4 FragColor;\n\n\nuniform sampler2D u_screen;\n\nvoid main()\n{\n    // grey effect\n    vec3 col = texture(u_screen, v_texcoord).rgb;\n    float grey = dot(col, vec3(0.2126, 0.7152, 0.0722));\n    col = vec3(grey, grey, grey);\n    FragColor = vec4(col, 1.0);\n} "},615:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\n\nprecision highp float;\n\nin vec2 v_texcoord;\n\nout vec4 FragColor;\n\n\nuniform sampler2D u_screen;\n\nvoid main()\n{\n    // guassian blur\n    vec2 tex_offset = 1.0 / vec2(textureSize(u_screen, 0)); // gets size of single texel\n    vec3 result = vec3(0.0);\n    for(int x = -2; x <= 2; x++)\n    {\n        for(int y = -2; y <= 2; y++)\n        {\n            vec2 offset = vec2(x, y) * tex_offset;\n            vec4 this_color = texture(u_screen, v_texcoord + offset);\n            result += vec3(this_color.r, this_color.g, this_color.b);\n        }\n    }\n    vec3 col = vec3(result / 25.0);\n    FragColor = vec4(col, 1.0);\n} "},913:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\n\nprecision highp float;\n\nin vec2 v_texcoord;\n\nout vec4 FragColor;\n\n\nuniform sampler2D u_screen;\n\nvoid main()\n{\n    // raw effect\n    vec3 col = texture(u_screen, v_texcoord).rgb;\n    FragColor = vec4(col, 1.0);\n} "},981:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\n\nprecision highp float;\n\nin vec2 v_texcoord;\n\nout vec4 FragColor;\n\n\nuniform sampler2D u_screen;\n\nvoid main()\n{\n    // reverse effect\n    vec3 col = texture(u_screen, v_texcoord).rgb;\n    col = 1.0 - col;\n    FragColor = vec4(col, 1.0);\n} "},734:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="#version 300 es\n\nprecision highp float;\n\nin vec2 v_texcoord;\n\nout vec4 FragColor;\n\n\nuniform sampler2D u_screen;\n\nvoid main()\n{\n    vec3 col = texture(u_screen, v_texcoord).rgb;\n    // create a vignette effect\n    float dist = distance(v_texcoord, vec2(0.5, 0.5));\n    col *= smoothstep(0.7, 0.2, dist);\n\n    FragColor = vec4(col, 1.0);\n} "},858:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AccumlatorExporter=t.Accumlator=void 0;const s=o(n(211)),l=o(n(522)),c=o(n(847)),u=o(n(173)),h=o(n(453)),d=a(n(460)),f=n(887),p=n(275),m=n(324);function g(e,t){const n=e.createTexture();return e.bindTexture(e.TEXTURE_2D,n),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),d.setTextureParameters(e,n,{minMag:e.NEAREST,wrap:e.CLAMP_TO_EDGE}),e.texStorage2D(e.TEXTURE_2D,1,t,e.drawingBufferWidth,e.drawingBufferHeight),n}t.Accumlator=class{constructor(e){this.gl=e;const t=g(e,e.DEPTH_COMPONENT16);g(e,e.DEPTH_COMPONENT16),this.normalprogramInfo=d.createProgramInfo(e,[s.default,c.default]);const n=[{attachment:g(e,e.RGBA8),attachmentPoint:e.COLOR_ATTACHMENT0},{attachment:t,attachmentPoint:e.DEPTH_ATTACHMENT}];this.normalFramebufferInfo=d.createFramebufferInfo(e,n),e.checkFramebufferStatus(e.FRAMEBUFFER)!=e.FRAMEBUFFER_COMPLETE&&alert("frame buffer is not complete!"),this.oitProgramInfo=d.createProgramInfo(e,[s.default,l.default]);const r=g(e,e.RGBA16F),i=g(e,e.R16F),a=[{attachment:r,attachmentPoint:e.COLOR_ATTACHMENT0},{attachment:i,attachmentPoint:e.COLOR_ATTACHMENT1},{attachment:t,attachmentPoint:e.DEPTH_ATTACHMENT}];this.oitFramebufferInfo=d.createFramebufferInfo(e,a),e.checkFramebufferStatus(e.FRAMEBUFFER)!=e.FRAMEBUFFER_COMPLETE&&alert("frame buffer is not complete!"),d.bindFramebufferInfo(e,null)}render(e,t,n,r,i){const a=t.get_eye_position(),o=t.get_view_matrix(),s=t.get_projection_matrix(e.width,e.height),l={u_view_proj:f.mat4.multiply(f.mat4.create(),s,o),u_eye_position:a,u_light_position:n};d.bindFramebufferInfo(this.gl,this.normalFramebufferInfo),this.gl.enable(this.gl.DEPTH_TEST),this.gl.depthMask(!0),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),this.gl.useProgram(this.normalprogramInfo.program),d.setUniforms(this.normalprogramInfo,l),this.gl.depthFunc(this.gl.LEQUAL),this.gl.disable(this.gl.BLEND),r(this.normalprogramInfo),d.bindFramebufferInfo(this.gl,this.oitFramebufferInfo),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.useProgram(this.oitProgramInfo.program),d.setUniforms(this.oitProgramInfo,l),this.gl.enable(this.gl.DEPTH_TEST),this.gl.depthFunc(this.gl.LEQUAL),this.gl.depthMask(!1),this.gl.enable(this.gl.BLEND),this.gl.blendFuncSeparate(this.gl.ONE,this.gl.ONE,this.gl.ZERO,this.gl.ONE_MINUS_SRC_ALPHA),i(this.oitProgramInfo)}},t.AccumlatorExporter=class{constructor(e,t){this.gl=e,this.renderer=d.createProgramInfo(e,[u.default,h.default]),this.quadBufferInfo=d.primitives.createXYQuadBufferInfo(e),this.accumlator=t,this.normal_exporter=new p.FramebufferExporter(e,this.accumlator.normalFramebufferInfo)}render(e){d.bindFramebufferInfo(this.gl,null),d.resizeCanvasToDisplaySize(e),this.gl.useProgram(this.renderer.program),this.gl.viewport(0,0,e.width,e.height),this.gl.depthMask(!0),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),this.normal_exporter.render(e,!1);const t=this.accumlator.oitFramebufferInfo;this.gl.disable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA);const n={u_accumulate:t.attachments[0],u_accumulate_alpha:t.attachments[1]},r={programInfo:this.renderer,bufferInfo:this.quadBufferInfo,uniforms:n};(0,m.myDrawObjectList)(this.gl,[r])}}},963:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Camera=t.CameraMovement=void 0;const r=n(887),i=n(201);var a;!function(e){e[e.FORWARD=0]="FORWARD",e[e.BACKWARD=1]="BACKWARD",e[e.LEFT=2]="LEFT",e[e.RIGHT=3]="RIGHT",e[e.UP=4]="UP",e[e.DOWN=5]="DOWN"}(a=t.CameraMovement||(t.CameraMovement={})),t.Camera=class{update_camera_vectors(){let e=r.vec3.create();e[0]=Math.cos((0,i.deg_to_rad)(this.yaw))*Math.cos((0,i.deg_to_rad)(this.pitch)),e[1]=Math.sin((0,i.deg_to_rad)(this.pitch)),e[2]=Math.sin((0,i.deg_to_rad)(this.yaw))*Math.cos((0,i.deg_to_rad)(this.pitch)),r.vec3.normalize(this.front_axis,e),r.vec3.cross(this.right_axis,this.front_axis,this.world_up),r.vec3.normalize(this.right_axis,this.right_axis),r.vec3.cross(this.up_axis,this.right_axis,this.front_axis),r.vec3.normalize(this.up_axis,this.up_axis)}constructor(e=r.vec3.fromValues(0,0,1),t=r.vec3.fromValues(0,1,0),n=-90,i=0){this.position=r.vec3.fromValues(0,0,0),this.front_axis=r.vec3.fromValues(0,0,-1),this.up_axis=r.vec3.fromValues(0,1,0),this.right_axis=r.vec3.fromValues(1,0,0),this.movement_speed=2.5,this.mouse_sensitivity=.1,this.zoom=45,this.position=e,this.world_up=t,this.yaw=n,this.pitch=i,this.update_camera_vectors()}setup_interaction(e,t=(e=>{})){document.addEventListener("wheel",(e=>{this.process_mouse_scroll(e.deltaY>0?1:-1),t(this)})),document.addEventListener("keydown",(e=>{switch(e.key){case"w":this.process_keyboard(a.FORWARD,.1);break;case"s":this.process_keyboard(a.BACKWARD,.1);break;case"a":this.process_keyboard(a.LEFT,.1);break;case"d":this.process_keyboard(a.RIGHT,.1);break;case"q":this.process_keyboard(a.UP,.1);break;case"e":this.process_keyboard(a.DOWN,.1)}t(this)}));let n=!1,r=0,i=0;e.addEventListener("mousedown",(function(e){n=!0,r=e.clientX,i=e.clientY})),e.addEventListener("mousemove",(e=>{n&&(this.process_mouse_movement(e.clientX-r,e.clientY-i),r=e.clientX,i=e.clientY,t(this))})),e.addEventListener("mouseup",(e=>{n=!1})),e.addEventListener("mouseleave",(e=>{n=!1}))}set_position(e){this.position=e,this.update_camera_vectors()}set_yaw_pitch(e,t){this.yaw=e,this.pitch=t,this.update_camera_vectors()}set_zoom(e){this.zoom=e,this.update_camera_vectors()}get_position_string(){return`(${this.position[0].toFixed(2)}, ${this.position[1].toFixed(2)}, ${this.position[2].toFixed(2)})`}get_angles_string(){return`(yaw: ${this.yaw.toFixed(2)}, pitch: ${this.pitch.toFixed(2)})`}get_zoom_string(){return`zoom: ${this.zoom.toFixed(2)}`}get_eye_position(){return r.vec3.clone(this.position)}get_view_matrix(){let e=r.mat4.create(),t=r.vec3.create();return r.vec3.add(t,this.position,this.front_axis),r.mat4.lookAt(e,this.position,t,this.up_axis),e}get_projection_matrix(e,t,n=1,a=100){return r.mat4.perspective(r.mat4.create(),(0,i.deg_to_rad)(this.zoom),e/t,n,a)}process_keyboard(e,t){let n=this.movement_speed*t;e==a.FORWARD&&r.vec3.scaleAndAdd(this.position,this.position,this.front_axis,n),e==a.BACKWARD&&r.vec3.scaleAndAdd(this.position,this.position,this.front_axis,-n),e==a.LEFT&&r.vec3.scaleAndAdd(this.position,this.position,this.right_axis,-n),e==a.RIGHT&&r.vec3.scaleAndAdd(this.position,this.position,this.right_axis,n),e==a.UP&&r.vec3.scaleAndAdd(this.position,this.position,this.up_axis,n),e==a.DOWN&&r.vec3.scaleAndAdd(this.position,this.position,this.up_axis,-n)}process_mouse_movement(e,t,n=!0){e*=this.mouse_sensitivity,t*=this.mouse_sensitivity,this.yaw+=e,this.pitch+=t,n&&(this.pitch>89&&(this.pitch=89),this.pitch<-89&&(this.pitch=-89)),this.update_camera_vectors()}process_mouse_scroll(e){console.log(e),this.zoom>=1&&this.zoom<=90&&(this.zoom-=e),this.zoom<=1&&(this.zoom=1),this.zoom>=90&&(this.zoom=90)}}},539:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{l(r.next(e))}catch(e){a(e)}}function s(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}l((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.TextureType=t.MaterialType=t.ObjectShapeType=t.RayTraceConfigReader=void 0;const s=n(887),l=n(648),c=n(977),u=n(377),h=a(n(460)),d=n(324),f=n(700);var p,m,g;!function(e){e[e.DEFAULT=0]="DEFAULT",e[e.SPHERE=1]="SPHERE",e[e.CUBE=2]="CUBE"}(p||(p={})),t.ObjectShapeType=p,function(e){e[e.DIFFUSE=0]="DIFFUSE",e[e.SPECULAR=1]="SPECULAR",e[e.REFRACTIVE=2]="REFRACTIVE"}(m||(m={})),t.MaterialType=m,function(e){e[e.CONSTANT=0]="CONSTANT",e[e.IMAGE=1]="IMAGE",e[e.FILE=2]="FILE"}(g||(g={})),t.TextureType=g,t.RayTraceConfigReader=class{constructor(e){this.gl=e}readFile(e){return new Promise(((t,n)=>{let r=new FileReader;r.readAsText(e),r.onload=()=>{try{let e=r.result;t(e)}catch(e){n(e)}}}))}load(e){return new Promise(((t,n)=>{this.readFile(e).then((e=>{try{const n=JSON.parse(e);t(n)}catch(e){n(e)}}))}))}set_camera(e,t){3==e.position.length?2==e.angle.length?e.angle[1]<=-89||e.angle[1]>=89?alert(`camera pitch should be in range (-89, 89), but got ${e.angle[1]}`):e.zoom<=0||e.zoom>90?alert(`camera zoom should be in range (0, 90], but got ${e.zoom}`):(t.set_position(s.vec3.fromValues(e.position[0],e.position[1],e.position[2])),t.set_yaw_pitch(e.angle[0],e.angle[1]),t.set_zoom(e.zoom)):alert("Camera angle should be a 2D vector (yaw, pitch)"):alert("Camera position should be a 3D vector")}getVerticesFromType(e){return e==p.SPHERE?h.primitives.createSphereVertices(4,32,32):e==p.CUBE?h.primitives.createCubeVertices(4):(console.error("Unknown shape type"),{})}createWebGLTextureFromTextureData(e){return o(this,void 0,void 0,(function*(){if(e.type==g.CONSTANT)return(0,d.getWhiteTexture)(this.gl,e.color);if(e.type==g.IMAGE){const t=new Image;return t.src=e.file,yield new Promise(((e,n)=>{t.onload=()=>{e()},t.onerror=()=>{n()}})),(0,f.createImmutableImageTexture)(this.gl,t)}return console.error("Unknown texture type"),(0,d.getWhiteTexture)(this.gl)}))}createImageDataFromTextureData(e){return o(this,void 0,void 0,(function*(){if(e.type==g.CONSTANT)return(0,d.getWhiteImageData)(e.color);if(e.type==g.IMAGE){const t=new Image;t.src=e.file,yield new Promise(((e,n)=>{t.onload=()=>{e()},t.onerror=()=>{n()}}));const n=document.createElement("canvas");n.width=t.width,n.height=t.height;const r=n.getContext("2d");return r.drawImage(t,0,0),r.getImageData(0,0,t.width,t.height)}return console.error("Unknown texture type"),(0,d.getWhiteImageData)()}))}createVec3ArrayFromTypedArray(e){const t=e.length,n=[];for(let r=0;r<t;r+=3)n.push(s.vec3.fromValues(e[r],e[r+1],e[r+2]));return n}createVec2ArrayFromTypedArray(e){const t=e.length,n=[];for(let r=0;r<t;r+=2)n.push(s.vec2.fromValues(e[r],e[r+1]));return n}createMeshesFromObject(e){return o(this,void 0,void 0,(function*(){const t=this.getVerticesFromType(e.shape),n=this.extractIndicesFromTypedArray(t),r=this.createVec3ArrayFromTypedArray(n.position),i=this.createVec3ArrayFromTypedArray(n.normal),a=this.createVec2ArrayFromTypedArray(n.texcoord),o=yield this.createImageDataFromTextureData(e.texture),c=s.vec3.fromValues(e.position[0],e.position[1],e.position[2]);return[new l.Mesh(c,r,i,a,o,(0,d.getWhiteImageData)(),(0,d.getWhiteImageData)())]}))}createMeshesFromRayTraceObjectData(e){return o(this,void 0,void 0,(function*(){return e.texture.type==g.FILE?yield(0,c.createThreeMeshesFromFileName)(e.texture.file,this.gl):yield this.createMeshesFromObject(e)}))}setScene(e,t){return o(this,void 0,void 0,(function*(){const n=t.camera;this.set_camera(e.camera,n),t.lightPosition=s.vec3.fromValues(e.light_position[0],e.light_position[1],e.light_position[2]);for(let n=0;n<e.objects.length;n++){const r=e.objects[n],i=yield this.createMeshesFromRayTraceObjectData(r);for(const e of i)if(e instanceof l.Mesh)t.addMesh(e);else{const n=s.vec3.fromValues(r.position[0],r.position[1],r.position[2]);yield t.addThreeMesh(e,n)}}}))}extractIndicesFromTypedArray(e){const t={};if(null==e.indices)return e;const n=e.indices,r=e.position,i=e.normal,a=e.texcoord,o=n.length,s=new Float32Array(3*o),l=new Float32Array(3*o),c=new Float32Array(2*o);for(let e=0;e<o;e++){const t=n[e];s[3*e]=r[3*t],s[3*e+1]=r[3*t+1],s[3*e+2]=r[3*t+2],l[3*e]=i[3*t],l[3*e+1]=i[3*t+1],l[3*e+2]=i[3*t+2],c[2*e]=a[2*t],c[2*e+1]=a[2*t+1]}return t.position=s,t.normal=l,t.texcoord=c,t}createDrawObjectFromObjectData(e,t,n){return o(this,void 0,void 0,(function*(){const r=[],i=[];if(e.texture.type==g.FILE){const n=yield(0,c.createThreeMeshesFromFileName)(e.texture.file,this.gl),i=yield(0,u.createTWGLMeshesFromThreeMeshes)(n,this.gl),a=s.vec3.fromValues(e.position[0],e.position[1],e.position[2]),o=(0,u.createDrawObjectsFromTWGLMeshes)(i,t,a,this.gl);for(const e of o)r.push(e)}else{const a=this.getVerticesFromType(e.shape),o=this.extractIndicesFromTypedArray(a);console.log("vertices of generated objects",o),e.material==m.REFRACTIVE?(0,u.addRandomColor)(o,.5):(0,u.addRandomColor)(o);const l=yield this.createWebGLTextureFromTextureData(e.texture),c=e.material==m.REFRACTIVE?n:t,f=h.createBufferInfoFromArrays(this.gl,o),p=s.vec3.fromValues(e.position[0],e.position[1],e.position[2]),g={programInfo:c,bufferInfo:f,uniforms:{u_texture:l,u_specular_texture:(0,d.getWhiteTexture)(this.gl),u_bump_texture:(0,d.getWhiteTexture)(this.gl),u_model_matrix:s.mat4.translate(s.mat4.create(),s.mat4.create(),p),u_is_skybox:e.material==m.SPECULAR?1:0,u_skybox:(0,d.getDefaultSkyBox)(this.gl)}};e.material==m.REFRACTIVE?i.push(g):r.push(g)}return[r,i]}))}setDrawObjects(e,t,n){return o(this,void 0,void 0,(function*(){const r=[],i=[];for(const a of e.objects){const[e,o]=yield this.createDrawObjectFromObjectData(a,t,n);for(const t of e)r.push(t);for(const e of o)i.push(e)}return[r,i]}))}}},275:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.FramebufferExporter=t.FrameBufferType=void 0;const s=o(n(742)),l=o(n(913)),c=o(n(318)),u=o(n(981)),h=o(n(615)),d=o(n(734)),f=a(n(460)),p=n(324);var m;!function(e){e[e.Raw=0]="Raw",e[e.Grey=1]="Grey",e[e.Reverse=2]="Reverse",e[e.Guass=3]="Guass",e[e.Vignette=4]="Vignette"}(m=t.FrameBufferType||(t.FrameBufferType={}));const g=[l.default,c.default,u.default,h.default,d.default];t.FramebufferExporter=class{constructor(e,t,n=m.Raw){this.currentType=m.Raw,this.gl=e,this.programInfo=f.createProgramInfo(e,[s.default,g[n]]),this.quadBufferInfo=f.primitives.createXYQuadBufferInfo(e),this.framebufferInfo=t}recreate(e=m.Raw){this.programInfo=f.createProgramInfo(this.gl,[s.default,g[e]]),this.currentType=e}render(e,t=!0){t&&(f.resizeCanvasToDisplaySize(e),this.gl.viewport(0,0,e.width,e.height),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)),this.gl.disable(this.gl.DEPTH_TEST),this.gl.disable(this.gl.BLEND),this.gl.useProgram(this.programInfo.program);const n={u_screen:this.framebufferInfo.attachments[0]},r={programInfo:this.programInfo,bufferInfo:this.quadBufferInfo,uniforms:n};(0,p.myDrawObjectList)(this.gl,[r])}}},700:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.createImmutableImageTexture=void 0;const o=a(n(460));t.createImmutableImageTexture=function(e,t){const n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),o.setTextureParameters(e,n,{mag:e.LINEAR,min:e.LINEAR_MIPMAP_LINEAR,wrap:e.REPEAT});const r=Math.floor(Math.log2(Math.max(t.width,t.height)))+1;return e.texStorage2D(e.TEXTURE_2D,r,e.RGBA8,t.width,t.height),e.texSubImage2D(e.TEXTURE_2D,0,0,0,t.width,t.height,e.RGBA,e.UNSIGNED_BYTE,t),e.generateMipmap(e.TEXTURE_2D),n}},977:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{l(r.next(e))}catch(e){a(e)}}function s(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}l((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.createThreeMeshesFromFileName=t.createTWGLVerticesFromThreeMesh=t.createImageDataFromThreeMesh=t.createWebGLTextureFromThreeMesh=void 0;const s=a(n(460)),l=n(324),c=n(700),u=n(23),h=n(11);function d(e,t){return o(this,void 0,void 0,(function*(){let n=0;for(;(null==e||null==e.image||null==e.image.src)&&n<30;)yield new Promise((e=>{setTimeout((()=>{e()}),20)})),n+=1;if(null==e||null==e.image||null==e.image.src)return(0,l.getWhiteTexture)(t);{const n=new Image;return n.src=e.image.src,yield new Promise((e=>{n.onload=()=>{e()}})),(0,c.createImmutableImageTexture)(t,n)}}))}function f(e){return o(this,void 0,void 0,(function*(){let t=0;for(;(null==e||null==e.image||null==e.image.src)&&t<30;)yield new Promise((e=>{setTimeout((()=>{e()}),20)})),t+=1;if(null==e||null==e.image||null==e.image.src)return(0,l.getWhiteImageData)();{const t=e.image.src,n=new Image;n.src=t,yield new Promise((e=>{n.onload=()=>{e()}}));const r=document.createElement("canvas");r.width=n.width,r.height=n.height;const i=r.getContext("2d");return i.drawImage(n,0,0),i.getImageData(0,0,n.width,n.height)}}))}t.createWebGLTextureFromThreeMesh=function(e,t){return o(this,void 0,void 0,(function*(){const n=e.material;return console.log(n),{diffuse_texture:yield d(n.map,t),specular_texture:yield d(n.specularMap,t),bump_texture:yield d(n.bumpMap,t)}}))},t.createImageDataFromThreeMesh=function(e){return o(this,void 0,void 0,(function*(){const t=e.material;return console.log(t),{diffuse_texture:yield f(t.map),specular_texture:yield f(t.specularMap),bump_texture:yield f(t.bumpMap)}}))},t.createTWGLVerticesFromThreeMesh=function(e){const t={position:s.primitives.createAugmentedTypedArray(3,e.geometry.attributes.position.array.length/3),normal:s.primitives.createAugmentedTypedArray(3,e.geometry.attributes.normal.array.length/3),texcoord:s.primitives.createAugmentedTypedArray(2,e.geometry.attributes.uv.array.length/2)};for(let n=0;n<e.geometry.attributes.position.array.length;n+=3)t.position.push(e.geometry.attributes.position.array[n],e.geometry.attributes.position.array[n+1],e.geometry.attributes.position.array[n+2]);for(let n=0;n<e.geometry.attributes.normal.array.length;n+=3)t.normal.push(e.geometry.attributes.normal.array[n],e.geometry.attributes.normal.array[n+1],e.geometry.attributes.normal.array[n+2]);for(let n=0;n<e.geometry.attributes.uv.array.length;n+=2)t.texcoord.push(e.geometry.attributes.uv.array[n],e.geometry.attributes.uv.array[n+1]);return t},t.createThreeMeshesFromFileName=function(e,t){return o(this,void 0,void 0,(function*(){const t=new h.OBJLoader,n=new u.MTLLoader,r=yield n.loadAsync(e+".mtl");r.preload(),t.setMaterials(r);const i=yield t.loadAsync(e+".obj");console.log(i);const a=i.children.length,o=[];for(let e=0;e<a;e++){const t=i.children[e];o.push(t)}return o}))}},377:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{l(r.next(e))}catch(e){a(e)}}function s(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}l((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.addRandomColor=t.createDrawObjectsFromTWGLMeshes=t.createTWGLMeshesFromThreeMeshes=void 0;const s=a(n(460)),l=n(977),c=n(887),u=n(324);function h(e,t=1){const n=e.position.length/3,r=s.primitives.createAugmentedTypedArray(4,n);for(let e=0;e<n;++e)r.push(1,1,1,t);e.color=r}function d(e,t,n=1){h(e,n);const r=s.createBufferInfoFromArrays(t,e);return console.log(e),r}function f(e,t,n,r){return{programInfo:t,bufferInfo:e.bufferInfo,uniforms:{u_texture:e.diffuseTexture,u_specular_texture:e.specularTexture,u_bump_texture:e.bumpTexture,u_model_matrix:c.mat4.fromTranslation(c.mat4.create(),n),u_is_skybox:!1,u_skybox:(0,u.getDefaultSkyBox)(r)}}}t.addRandomColor=h,t.createTWGLMeshesFromThreeMeshes=function(e,t){return o(this,void 0,void 0,(function*(){const n=[],r=e.length;for(let i=0;i<r;i++){const r=e[i],a=(0,l.createTWGLVerticesFromThreeMesh)(r),o=d(a,t),{diffuse_texture:s,specular_texture:c,bump_texture:u}=yield(0,l.createWebGLTextureFromThreeMesh)(r,t);n.push({verticesArray:a,bufferInfo:o,diffuseTexture:s,specularTexture:c,bumpTexture:u})}return n}))},t.createDrawObjectsFromTWGLMeshes=function(e,t,n,r){const i=[];for(let a=0;a<e.length;a++)i.push(f(e[a],t,n,r));return i}},648:function(e,t,n){var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{l(r.next(e))}catch(e){a(e)}}function s(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}l((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.RayTracer=t.Scene=t.Mesh=void 0;const i=n(887),a=n(201),o=n(977);function s(e){return e>1?e-1:e}function l(e,t){const n=s(t[0]),r=s(t[1]),a=Math.floor(n*e.width),o=4*(Math.floor(r*e.height)*e.width+a);return i.vec4.fromValues(e.data[o],e.data[o+1],e.data[o+2],e.data[o+3])}function c(e,t,n){if(!function(e){return e[0]>=0&&e[0]<=1&&e[1]>=0&&e[1]<=1||(console.error("uv is not in [0, 1] x [0, 1]",e),!1)}(e))return i.vec3.fromValues(0,0,0);const r=n.zoom,o=(0,a.deg_to_rad)(r),s=(i.vec3.clone(n.right_axis),i.vec3.clone(n.up_axis),i.vec3.clone(n.front_axis)),l=-(e[0]-.5),c=o*t[0]/t[1],u=-(e[1]-.5),h=o,d=Math.atan(l/2*Math.tan(c/2)),f=Math.atan(u/2*Math.tan(h/2)),p=i.vec3.create();return i.vec3.rotateY(p,s,i.vec3.create(),d),i.vec3.rotateX(p,p,i.vec3.create(),f),p}function u(e,t){const n=i.vec3.normalize(i.vec3.create(),e),r=i.vec3.normalize(i.vec3.create(),t),a=i.vec3.scale(i.vec3.create(),r,i.vec3.dot(n,r)),o=i.vec3.sub(i.vec3.create(),n,a),s=i.vec3.scaleAndAdd(i.vec3.create(),n,o,2);return i.vec3.normalize(i.vec3.create(),s)}class h{constructor(e=i.vec3.fromValues(0,0,0),t=i.vec3.fromValues(0,0,0)){this.origin=e,this.direction=t}}class d{constructor(e,t){this.mesh=e,this.v=[e.vertices[3*t],e.vertices[3*t+1],e.vertices[3*t+2]],this.n=[e.normal[3*t],e.normal[3*t+1],e.normal[3*t+2]],this.texcoord=[e.texcoord[3*t],e.texcoord[3*t+1],e.texcoord[3*t+2]]}is_intersected_with(e){const t=i.vec3.sub(i.vec3.create(),e.origin,this.v[0]),n=i.vec3.sub(i.vec3.create(),this.v[1],this.v[0]),r=i.vec3.sub(i.vec3.create(),this.v[2],this.v[0]),a=i.vec3.cross(i.vec3.create(),e.direction,r),o=i.vec3.cross(i.vec3.create(),t,n),s=i.vec3.dot(a,n),l=i.vec3.dot(o,r)/s,c=i.vec3.dot(a,t)/s,u=i.vec3.dot(o,e.direction)/s,h=i.vec3.scaleAndAdd(i.vec3.create(),e.origin,e.direction,l);return l>0&&c>0&&u>0&&c+u<1?[!0,h,l,c,u]:[!1,i.vec3.fromValues(0,0,0),0,0,0]}clamp_to_edge(e,t){return[Math.max(0,Math.min(1,e)),Math.max(0,Math.min(1,t))]}vec2_interpolated(e,t,n,r,a){const o=i.vec2.create();return i.vec2.scaleAndAdd(o,o,r,e),i.vec2.scaleAndAdd(o,o,a,t),i.vec2.scaleAndAdd(o,o,n,1-e-t),o}vec3_interpolated(e,t,n,r,a){const o=i.vec3.create();return i.vec3.scaleAndAdd(o,o,r,e),i.vec3.scaleAndAdd(o,o,a,t),i.vec3.scaleAndAdd(o,o,n,1-e-t),o}vec4_interpolated(e,t,n,r,a){const o=i.vec4.create();return i.vec4.scaleAndAdd(o,o,r,e),i.vec4.scaleAndAdd(o,o,a,t),i.vec4.scaleAndAdd(o,o,n,1-e-t),o}normal_interpolated(e,t){return this.vec3_interpolated(e,t,this.n[0],this.n[1],this.n[2])}texcoord_interpolated(e,t){return this.vec2_interpolated(e,t,this.texcoord[0],this.texcoord[1],this.texcoord[2])}}class f{constructor(e,t,n,r,a,o,s){this.model_matrix=i.mat4.fromTranslation(i.mat4.create(),e),this.vertices=t,this.normal=n,this.texcoord=r,this.diffuse_image=a,this.specular_image=o,this.bump_image=s,this.min=i.vec3.fromValues(1/0,1/0,1/0),this.max=i.vec3.fromValues(-1/0,-1/0,-1/0);for(const e of t){const t=i.vec3.transformMat4(i.vec3.create(),e,this.model_matrix);i.vec3.min(this.min,this.min,t),i.vec3.max(this.max,this.max,t)}}is_intersected_with_box(e){if(e.origin[0]>=this.min[0]&&e.origin[0]<=this.max[0]&&e.origin[1]>=this.min[1]&&e.origin[1]<=this.max[1]&&e.origin[2]>=this.min[2]&&e.origin[2]<=this.max[2])return!0;for(let t=0;t<3;t++){let n=0;if(Math.abs(e.direction[t])>1e-7&&(n=e.direction[t]>0?(this.min[t]-e.origin[t])/e.direction[t]:(this.max[t]-e.origin[t])/e.direction[t]),n>0){let r=!0;for(let i=0;i<3;i++)if(i!==t){const t=e.origin[i]+n*e.direction[i];if(t<this.min[i]||t>this.max[i]){r=!1;break}}if(r)return!0}}return!1}fetch_face(e){const t=new d(this,e);for(let e=0;e<3;e++)t.v[e]=i.vec3.transformMat4(i.vec3.create(),t.v[e],this.model_matrix),t.n[e]=i.vec3.transformMat4(i.vec3.create(),t.n[e],this.model_matrix);return t}}t.Mesh=f,t.Scene=class{constructor(e,t){this.camera=e,this.lightPosition=t,this.objects=[]}addThreeMesh(e,t){return r(this,void 0,void 0,(function*(){console.log("add mesh",e);const n=yield function(e,t){return r(this,void 0,void 0,(function*(){const n=(0,o.createTWGLVerticesFromThreeMesh)(e),r=yield(0,o.createImageDataFromThreeMesh)(e);console.log("v",n,"image",r);const a=n.position.length/3,s=[],l=[],c=[];for(let e=0;e<a;e++)s.push(i.vec3.fromValues(n.position[3*e],n.position[3*e+1],n.position[3*e+2])),l.push(i.vec3.fromValues(n.normal[3*e],n.normal[3*e+1],n.normal[3*e+2])),c.push(i.vec2.fromValues(n.texcoord[2*e],n.texcoord[2*e+1]));return new f(t,s,l,c,r.diffuse_texture,r.specular_texture,r.bump_texture)}))}(e,t);this.objects.push(n)}))}addMesh(e){this.objects.push(e)}find_nearest_intersection(e){let t=null,n=1/0;for(const r of this.objects){if(!r.is_intersected_with_box(e))continue;const i=r.vertices.length/3;for(let a=0;a<i;a++){const i=r.fetch_face(a),[o,s,l,c,u]=i.is_intersected_with(e);o&&l<n&&(n=l,t=i)}}return t}},t.RayTracer=class{constructor(e,t=5,n=10){this.scene=e,this.depth=t,this.sample_times=n}trace(e){let t=i.vec3.fromValues(0,0,0);for(let t=1;t<=this.depth;t++){const t=this.scene.find_nearest_intersection(e);if(null===t)return i.vec3.fromValues(255,255,255);{const[n,r,a,o,s]=t.is_intersected_with(e);let c=t.normal_interpolated(o,s);const h=t.texcoord_interpolated(o,s),d=l(t.mesh.diffuse_image,h),f=l(t.mesh.specular_image,h),p=i.vec3.sub(i.vec3.create(),this.scene.lightPosition,r);i.vec3.normalize(p,p),u(e.direction,c),u(p,c);let m=i.vec4.create();const g=.3,_=.7,v=0;return i.vec4.scaleAndAdd(m,m,d,g),i.vec4.scaleAndAdd(m,m,d,_),i.vec4.scaleAndAdd(m,m,f,v),i.vec3.fromValues(m[0],m[1],m[2])}}return t}pack(){}do_raytracing(e,t,n){if(e*t>1e6)return alert("too big width & height"),new ImageData(0,0);alert("开始光线追踪。这可能会很慢，而且UI界面会卡死，请耐心等待。");const r=new Float32Array(e*t*4);for(let n=0;n<e*t*4;n++)r[n]=0;let i=0,a=e*t*this.sample_times;for(let o=0;o<this.sample_times;o++)for(let o=0;o<e;o++)for(let s=0;s<t;s++){const l=this.scene.camera.get_eye_position(),u=c([o/e,s/t],[e,t],this.scene.camera),d=new h(l,u),f=this.trace(d),p=4*(s*e+o);r[p]=f[0],r[p+1]=f[1],r[p+2]=f[2],r[p+3]=255,i+=1,i%100==0&&(console.log(i/a),n(i/a))}const o=new ImageData(e,t);for(let n=0;n<e*t*4;n++)o.data[n]=Math.max(0,Math.min(255,Math.round(r[n])));return o}}},201:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.rad_to_deg=t.deg_to_rad=void 0,t.deg_to_rad=function(e){return e*Math.PI/180},t.rad_to_deg=function(e){return 180*e/Math.PI}},324:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.myDrawObjectList=t.getWhiteImageData=t.getWhiteTexture=t.getDefaultSkyBox=void 0;const o=a(n(460));t.getDefaultSkyBox=function(e){return o.createTexture(e,{target:e.TEXTURE_CUBE_MAP,src:["./textures/posx.jpg","./textures/negx.jpg","./textures/posy.jpg","./textures/negy.jpg","./textures/posz.jpg","./textures/negz.jpg"],min:e.LINEAR_MIPMAP_LINEAR,crossOrigin:""})},t.getWhiteTexture=function(e,t=[255,255,255,255]){return o.createTexture(e,{minMag:e.NEAREST,src:new Uint8Array(t)})},t.getWhiteImageData=function(e=[255,255,255,255]){const t=new ImageData(1,1);return t.data[0]=e[0],t.data[1]=e[1],t.data[2]=e[2],t.data[3]=e[3],t},t.myDrawObjectList=function(e,t){for(const n of t)o.createVAOFromBufferInfo(e,n.programInfo,n.bufferInfo),e.useProgram(n.programInfo.program),o.setUniforms(n.programInfo,n.uniforms),o.setBuffersAndAttributes(e,n.programInfo,n.bufferInfo),o.drawBufferInfo(e,n.bufferInfo)}},244:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{l(r.next(e))}catch(e){a(e)}}function s(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}l((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const s=n(887),l=a(n(460)),c=n(963),u=n(858),h=n(648),d=n(539),f=n(324);!function(){o(this,void 0,void 0,(function*(){const e=document.querySelector("#canvas"),t=e.getContext("webgl2");if(l.resizeCanvasToDisplaySize(e),!t)return void alert("No WebGL2! Please use a newer browser.");if(!t.getExtension("EXT_color_buffer_float"))return void alert("FLOAT color buffer not available");l.setDefaults({attribPrefix:"a_"});const n=new d.RayTraceConfigReader(t),r=document.querySelector("#load_config"),i=document.querySelector("#config"),a=new c.Camera(s.vec3.fromValues(0,8,80));a.setup_interaction(e);let p=s.vec3.fromValues(0,0,20);const m=new h.Scene(a,p);let g=[],_=[];r.addEventListener("click",(function(e){return o(this,void 0,void 0,(function*(){if(null==i.files)return;if(0==i.files.length)return void alert("Please select a config file");const e=i.files[0],t=yield n.load(e);console.log(t),n.setScene(t,m);const[r,a]=yield n.setDrawObjects(t,x.normalprogramInfo,x.oitProgramInfo);g=r,_=a}))}));const v=new h.RayTracer(m,1,1),x=new u.Accumlator(t),y=new u.AccumlatorExporter(t,x);t.clearColor(1,1,1,1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT|t.STENCIL_BUFFER_BIT);const M=document.querySelector("#render"),b=document.querySelector("#progress");M.onclick=()=>{!function(e,t=(e=>{})){console.log(e.scene);const n=e.do_raytracing(100,100,(e=>{t(e)}));console.log(n);const r=document.querySelector("#raytrace"),i=r.getContext("2d");r.style.width=n.width+"px",r.style.height=n.height+"px",r.width=n.width,r.height=n.height,i.putImageData(n,0,0)}(v,(e=>{b.innerHTML=e.toFixed(2)+"%"}))},requestAnimationFrame((function n(r){l.resizeCanvasToDisplaySize(e),x.render(e,a,p,(e=>{(0,f.myDrawObjectList)(t,g)}),(e=>{(0,f.myDrawObjectList)(t,_)})),y.render(e),requestAnimationFrame(n)})),console.log("ready.")}))}()},460:(e,t,n)=>{n.r(t),n.d(t,{addExtensionsToContext:()=>Co,attributes:()=>xe,bindFramebufferInfo:()=>vo,bindTransformFeedbackInfo:()=>wa,bindUniformBlock:()=>Da,canFilter:()=>Gr,canGenerateMipmap:()=>Hr,createAttribsFromArrays:()=>fe,createAttributeSetters:()=>Va,createBufferFromArray:()=>_e,createBufferFromTypedArray:()=>ne,createBufferInfoFromArrays:()=>ge,createBuffersFromArrays:()=>ve,createFramebufferInfo:()=>go,createProgram:()=>fa,createProgramAsync:()=>ma,createProgramFromScripts:()=>xa,createProgramFromSources:()=>ya,createProgramInfo:()=>ja,createProgramInfoAsync:()=>ga,createProgramInfoFromProgram:()=>ka,createProgramInfos:()=>Ya,createProgramInfosAsync:()=>Za,createPrograms:()=>qa,createProgramsAsync:()=>Ka,createSampler:()=>Qr,createSamplers:()=>ei,createTexture:()=>fi,createTextures:()=>mi,createTransformFeedback:()=>Ra,createTransformFeedbackInfo:()=>Aa,createUniformBlockInfo:()=>Ia,createUniformBlockInfoFromProgram:()=>Ua,createUniformBlockSpecFromProgram:()=>Pa,createUniformSetters:()=>Ta,createVAOAndSetAttributes:()=>bo,createVAOFromBufferInfo:()=>Eo,createVertexArrayInfo:()=>Mo,draw:()=>no,drawBufferInfo:()=>eo,drawObjectList:()=>to,framebuffers:()=>xo,getArray_:()=>ie,getBytesPerElementForInternalFormat:()=>Br,getContext:()=>Uo,getFormatAndTypeForInternalFormat:()=>zr,getGLTypeForTypedArray:()=>P,getGLTypeForTypedArrayType:()=>C,getNumComponentsForFormat:()=>kr,getNumComponents_:()=>se,getTypedArrayTypeForGLType:()=>L,getWebGLContext:()=>Lo,glEnumToString:()=>yt,isArrayBuffer:()=>U,isWebGL1:()=>xt,isWebGL2:()=>vt,loadTextureFromUrl:()=>ui,m4:()=>y,primitives:()=>_t,programs:()=>Ja,resizeCanvasToDisplaySize:()=>Io,resizeFramebufferInfo:()=>_o,resizeTexture:()=>pi,setAttribInfoBufferFromArray:()=>pe,setAttributeDefaults_:()=>ee,setAttributePrefix:()=>Q,setAttributes:()=>Ha,setBlockUniforms:()=>Fa,setBuffersAndAttributes:()=>Ga,setDefaultTextureColor:()=>Xr,setDefaults:()=>Ao,setEmptyTexture:()=>di,setSamplerParameters:()=>$r,setTextureDefaults_:()=>qr,setTextureFilteringForSize:()=>ti,setTextureFromArray:()=>hi,setTextureFromElement:()=>ai,setTextureParameters:()=>Jr,setUniformBlock:()=>Na,setUniforms:()=>Ba,setUniformsAndBindTextures:()=>za,textures:()=>gi,typedarrays:()=>I,utils:()=>Mt,v3:()=>u,vertexArrays:()=>So});let r=Float32Array;function i(e,t,n){const i=new r(3);return e&&(i[0]=e),t&&(i[1]=t),n&&(i[2]=n),i}function a(e,t,n){return(n=n||new r(3))[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n}function o(e,t,n){return(n=n||new r(3))[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n}function s(e,t,n){n=n||new r(3);const i=e[2]*t[0]-e[0]*t[2],a=e[0]*t[1]-e[1]*t[0];return n[0]=e[1]*t[2]-e[2]*t[1],n[1]=i,n[2]=a,n}function l(e,t){t=t||new r(3);const n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=Math.sqrt(n);return i>1e-5?(t[0]=e[0]/i,t[1]=e[1]/i,t[2]=e[2]/i):(t[0]=0,t[1]=0,t[2]=0),t}function c(e,t,n){return(n=n||new r(3))[0]=e[0]*t[0],n[1]=e[1]*t[1],n[2]=e[2]*t[2],n}var u=Object.freeze({__proto__:null,add:a,copy:function(e,t){return(t=t||new r(3))[0]=e[0],t[1]=e[1],t[2]=e[2],t},create:i,cross:s,distance:function(e,t){const n=e[0]-t[0],r=e[1]-t[1],i=e[2]-t[2];return Math.sqrt(n*n+r*r+i*i)},distanceSq:function(e,t){const n=e[0]-t[0],r=e[1]-t[1],i=e[2]-t[2];return n*n+r*r+i*i},divide:function(e,t,n){return(n=n||new r(3))[0]=e[0]/t[0],n[1]=e[1]/t[1],n[2]=e[2]/t[2],n},divScalar:function(e,t,n){return(n=n||new r(3))[0]=e[0]/t,n[1]=e[1]/t,n[2]=e[2]/t,n},dot:function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},lerp:function(e,t,n,i){return(i=i||new r(3))[0]=e[0]+n*(t[0]-e[0]),i[1]=e[1]+n*(t[1]-e[1]),i[2]=e[2]+n*(t[2]-e[2]),i},lerpV:function(e,t,n,i){return(i=i||new r(3))[0]=e[0]+n[0]*(t[0]-e[0]),i[1]=e[1]+n[1]*(t[1]-e[1]),i[2]=e[2]+n[2]*(t[2]-e[2]),i},length:function(e){return Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2])},lengthSq:function(e){return e[0]*e[0]+e[1]*e[1]+e[2]*e[2]},max:function(e,t,n){return(n=n||new r(3))[0]=Math.max(e[0],t[0]),n[1]=Math.max(e[1],t[1]),n[2]=Math.max(e[2],t[2]),n},min:function(e,t,n){return(n=n||new r(3))[0]=Math.min(e[0],t[0]),n[1]=Math.min(e[1],t[1]),n[2]=Math.min(e[2],t[2]),n},mulScalar:function(e,t,n){return(n=n||new r(3))[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n},multiply:c,negate:function(e,t){return(t=t||new r(3))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t},normalize:l,setDefaultType:function(e){const t=r;return r=e,t},subtract:o});let h,d,f,p=Float32Array;function m(e,t){return(t=t||new p(16))[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function g(e){return(e=e||new p(16))[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function _(e,t){t=t||new p(16);const n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],f=e[11],m=e[12],g=e[13],_=e[14],v=e[15],x=d*v,y=_*f,M=l*v,b=_*c,E=l*f,S=d*c,T=i*v,A=_*a,w=i*f,R=d*a,P=i*c,C=l*a,L=u*g,U=m*h,I=o*g,D=m*s,N=o*h,F=u*s,O=n*g,B=m*r,z=n*h,V=u*r,H=n*s,G=o*r,k=x*s+b*h+E*g-(y*s+M*h+S*g),W=y*r+T*h+R*g-(x*r+A*h+w*g),j=M*r+A*s+P*g-(b*r+T*s+C*g),X=S*r+w*s+C*h-(E*r+R*s+P*h),q=1/(n*k+o*W+u*j+m*X);return t[0]=q*k,t[1]=q*W,t[2]=q*j,t[3]=q*X,t[4]=q*(y*o+M*u+S*m-(x*o+b*u+E*m)),t[5]=q*(x*n+A*u+w*m-(y*n+T*u+R*m)),t[6]=q*(b*n+T*o+C*m-(M*n+A*o+P*m)),t[7]=q*(E*n+R*o+P*u-(S*n+w*o+C*u)),t[8]=q*(L*c+D*f+N*v-(U*c+I*f+F*v)),t[9]=q*(U*a+O*f+V*v-(L*a+B*f+z*v)),t[10]=q*(I*a+B*c+H*v-(D*a+O*c+G*v)),t[11]=q*(F*a+z*c+G*f-(N*a+V*c+H*f)),t[12]=q*(I*d+F*_+U*l-(N*_+L*l+D*d)),t[13]=q*(z*_+L*i+B*d-(O*d+V*_+U*i)),t[14]=q*(O*l+G*_+D*i-(H*_+I*i+B*l)),t[15]=q*(H*d+N*i+V*l-(z*l+G*d+F*i)),t}function v(e,t,n){n=n||i();const r=t[0],a=t[1],o=t[2],s=r*e[3]+a*e[7]+o*e[11]+e[15];return n[0]=(r*e[0]+a*e[4]+o*e[8]+e[12])/s,n[1]=(r*e[1]+a*e[5]+o*e[9]+e[13])/s,n[2]=(r*e[2]+a*e[6]+o*e[10]+e[14])/s,n}function x(e,t,n){n=n||i();const r=t[0],a=t[1],o=t[2];return n[0]=r*e[0]+a*e[4]+o*e[8],n[1]=r*e[1]+a*e[5]+o*e[9],n[2]=r*e[2]+a*e[6]+o*e[10],n}var y=Object.freeze({__proto__:null,axisRotate:function(e,t,n,r){r=r||new p(16);let i=t[0],a=t[1],o=t[2];const s=Math.sqrt(i*i+a*a+o*o);i/=s,a/=s,o/=s;const l=i*i,c=a*a,u=o*o,h=Math.cos(n),d=Math.sin(n),f=1-h,m=l+(1-l)*h,g=i*a*f+o*d,_=i*o*f-a*d,v=i*a*f-o*d,x=c+(1-c)*h,y=a*o*f+i*d,M=i*o*f+a*d,b=a*o*f-i*d,E=u+(1-u)*h,S=e[0],T=e[1],A=e[2],w=e[3],R=e[4],P=e[5],C=e[6],L=e[7],U=e[8],I=e[9],D=e[10],N=e[11];return r[0]=m*S+g*R+_*U,r[1]=m*T+g*P+_*I,r[2]=m*A+g*C+_*D,r[3]=m*w+g*L+_*N,r[4]=v*S+x*R+y*U,r[5]=v*T+x*P+y*I,r[6]=v*A+x*C+y*D,r[7]=v*w+x*L+y*N,r[8]=M*S+b*R+E*U,r[9]=M*T+b*P+E*I,r[10]=M*A+b*C+E*D,r[11]=M*w+b*L+E*N,e!==r&&(r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=e[15]),r},axisRotation:function(e,t,n){n=n||new p(16);let r=e[0],i=e[1],a=e[2];const o=Math.sqrt(r*r+i*i+a*a);r/=o,i/=o,a/=o;const s=r*r,l=i*i,c=a*a,u=Math.cos(t),h=Math.sin(t),d=1-u;return n[0]=s+(1-s)*u,n[1]=r*i*d+a*h,n[2]=r*a*d-i*h,n[3]=0,n[4]=r*i*d-a*h,n[5]=l+(1-l)*u,n[6]=i*a*d+r*h,n[7]=0,n[8]=r*a*d+i*h,n[9]=i*a*d-r*h,n[10]=c+(1-c)*u,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n},copy:m,create:function(){return new p(16).fill(0)},frustum:function(e,t,n,r,i,a,o){const s=t-e,l=r-n,c=i-a;return(o=o||new p(16))[0]=2*i/s,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=2*i/l,o[6]=0,o[7]=0,o[8]=(e+t)/s,o[9]=(r+n)/l,o[10]=a/c,o[11]=-1,o[12]=0,o[13]=0,o[14]=i*a/c,o[15]=0,o},getAxis:function(e,t,n){const r=4*t;return(n=n||i())[0]=e[r+0],n[1]=e[r+1],n[2]=e[r+2],n},getTranslation:function(e,t){return(t=t||i())[0]=e[12],t[1]=e[13],t[2]=e[14],t},identity:g,inverse:_,lookAt:function(e,t,n,r){return r=r||new p(16),h=h||i(),d=d||i(),f=f||i(),l(o(e,t,f),f),l(s(n,f,h),h),l(s(f,h,d),d),r[0]=h[0],r[1]=h[1],r[2]=h[2],r[3]=0,r[4]=d[0],r[5]=d[1],r[6]=d[2],r[7]=0,r[8]=f[0],r[9]=f[1],r[10]=f[2],r[11]=0,r[12]=e[0],r[13]=e[1],r[14]=e[2],r[15]=1,r},multiply:function(e,t,n){n=n||new p(16);const r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],l=e[5],c=e[6],u=e[7],h=e[8],d=e[9],f=e[10],m=e[11],g=e[12],_=e[13],v=e[14],x=e[15],y=t[0],M=t[1],b=t[2],E=t[3],S=t[4],T=t[5],A=t[6],w=t[7],R=t[8],P=t[9],C=t[10],L=t[11],U=t[12],I=t[13],D=t[14],N=t[15];return n[0]=r*y+s*M+h*b+g*E,n[1]=i*y+l*M+d*b+_*E,n[2]=a*y+c*M+f*b+v*E,n[3]=o*y+u*M+m*b+x*E,n[4]=r*S+s*T+h*A+g*w,n[5]=i*S+l*T+d*A+_*w,n[6]=a*S+c*T+f*A+v*w,n[7]=o*S+u*T+m*A+x*w,n[8]=r*R+s*P+h*C+g*L,n[9]=i*R+l*P+d*C+_*L,n[10]=a*R+c*P+f*C+v*L,n[11]=o*R+u*P+m*C+x*L,n[12]=r*U+s*I+h*D+g*N,n[13]=i*U+l*I+d*D+_*N,n[14]=a*U+c*I+f*D+v*N,n[15]=o*U+u*I+m*D+x*N,n},negate:function(e,t){return(t=t||new p(16))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t[9]=-e[9],t[10]=-e[10],t[11]=-e[11],t[12]=-e[12],t[13]=-e[13],t[14]=-e[14],t[15]=-e[15],t},ortho:function(e,t,n,r,i,a,o){return(o=o||new p(16))[0]=2/(t-e),o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=2/(r-n),o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=2/(i-a),o[11]=0,o[12]=(t+e)/(e-t),o[13]=(r+n)/(n-r),o[14]=(a+i)/(i-a),o[15]=1,o},perspective:function(e,t,n,r,i){i=i||new p(16);const a=Math.tan(.5*Math.PI-.5*e),o=1/(n-r);return i[0]=a/t,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=a,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=(n+r)*o,i[11]=-1,i[12]=0,i[13]=0,i[14]=n*r*o*2,i[15]=0,i},rotateX:function(e,t,n){n=n||new p(16);const r=e[4],i=e[5],a=e[6],o=e[7],s=e[8],l=e[9],c=e[10],u=e[11],h=Math.cos(t),d=Math.sin(t);return n[4]=h*r+d*s,n[5]=h*i+d*l,n[6]=h*a+d*c,n[7]=h*o+d*u,n[8]=h*s-d*r,n[9]=h*l-d*i,n[10]=h*c-d*a,n[11]=h*u-d*o,e!==n&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},rotateY:function(e,t,n){n=n||new p(16);const r=e[0],i=e[1],a=e[2],o=e[3],s=e[8],l=e[9],c=e[10],u=e[11],h=Math.cos(t),d=Math.sin(t);return n[0]=h*r-d*s,n[1]=h*i-d*l,n[2]=h*a-d*c,n[3]=h*o-d*u,n[8]=h*s+d*r,n[9]=h*l+d*i,n[10]=h*c+d*a,n[11]=h*u+d*o,e!==n&&(n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},rotateZ:function(e,t,n){n=n||new p(16);const r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],l=e[5],c=e[6],u=e[7],h=Math.cos(t),d=Math.sin(t);return n[0]=h*r+d*s,n[1]=h*i+d*l,n[2]=h*a+d*c,n[3]=h*o+d*u,n[4]=h*s-d*r,n[5]=h*l-d*i,n[6]=h*c-d*a,n[7]=h*u-d*o,e!==n&&(n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},rotationX:function(e,t){t=t||new p(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n,t[6]=r,t[7]=0,t[8]=0,t[9]=-r,t[10]=n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotationY:function(e,t){t=t||new p(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=n,t[1]=0,t[2]=-r,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=r,t[9]=0,t[10]=n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotationZ:function(e,t){t=t||new p(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=n,t[1]=r,t[2]=0,t[3]=0,t[4]=-r,t[5]=n,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},scale:function(e,t,n){n=n||new p(16);const r=t[0],i=t[1],a=t[2];return n[0]=r*e[0],n[1]=r*e[1],n[2]=r*e[2],n[3]=r*e[3],n[4]=i*e[4],n[5]=i*e[5],n[6]=i*e[6],n[7]=i*e[7],n[8]=a*e[8],n[9]=a*e[9],n[10]=a*e[10],n[11]=a*e[11],e!==n&&(n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},scaling:function(e,t){return(t=t||new p(16))[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},setAxis:function(e,t,n,r){r!==e&&(r=m(e,r));const i=4*n;return r[i+0]=t[0],r[i+1]=t[1],r[i+2]=t[2],r},setDefaultType:function(e){const t=p;return p=e,t},setTranslation:function(e,t,n){return e!==(n=n||g())&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11]),n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n},transformDirection:x,transformNormal:function(e,t,n){n=n||i();const r=_(e),a=t[0],o=t[1],s=t[2];return n[0]=a*r[0]+o*r[1]+s*r[2],n[1]=a*r[4]+o*r[5]+s*r[6],n[2]=a*r[8]+o*r[9]+s*r[10],n},transformPoint:v,translate:function(e,t,n){n=n||new p(16);const r=t[0],i=t[1],a=t[2],o=e[0],s=e[1],l=e[2],c=e[3],u=e[4],h=e[5],d=e[6],f=e[7],m=e[8],g=e[9],_=e[10],v=e[11],x=e[12],y=e[13],M=e[14],b=e[15];return e!==n&&(n[0]=o,n[1]=s,n[2]=l,n[3]=c,n[4]=u,n[5]=h,n[6]=d,n[7]=f,n[8]=m,n[9]=g,n[10]=_,n[11]=v),n[12]=o*r+u*i+m*a+x,n[13]=s*r+h*i+g*a+y,n[14]=l*r+d*i+_*a+M,n[15]=c*r+f*i+v*a+b,n},translation:function(e,t){return(t=t||new p(16))[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t},transpose:function(e,t){if((t=t||new p(16))===e){let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,t}const n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],f=e[11],m=e[12],g=e[13],_=e[14],v=e[15];return t[0]=n,t[1]=o,t[2]=u,t[3]=m,t[4]=r,t[5]=s,t[6]=h,t[7]=g,t[8]=i,t[9]=l,t[10]=d,t[11]=_,t[12]=a,t[13]=c,t[14]=f,t[15]=v,t}});const M=5120,b=5121,E=5122,S=5123,T=5124,A=5125,w=5126,R={};{const e=R;e[M]=Int8Array,e[b]=Uint8Array,e[E]=Int16Array,e[S]=Uint16Array,e[T]=Int32Array,e[A]=Uint32Array,e[w]=Float32Array,e[32819]=Uint16Array,e[32820]=Uint16Array,e[33635]=Uint16Array,e[5131]=Uint16Array,e[33640]=Uint32Array,e[35899]=Uint32Array,e[35902]=Uint32Array,e[36269]=Uint32Array,e[34042]=Uint32Array}function P(e){if(e instanceof Int8Array)return M;if(e instanceof Uint8Array)return b;if(e instanceof Uint8ClampedArray)return b;if(e instanceof Int16Array)return E;if(e instanceof Uint16Array)return S;if(e instanceof Int32Array)return T;if(e instanceof Uint32Array)return A;if(e instanceof Float32Array)return w;throw new Error("unsupported typed array type")}function C(e){if(e===Int8Array)return M;if(e===Uint8Array)return b;if(e===Uint8ClampedArray)return b;if(e===Int16Array)return E;if(e===Uint16Array)return S;if(e===Int32Array)return T;if(e===Uint32Array)return A;if(e===Float32Array)return w;throw new Error("unsupported typed array type")}function L(e){const t=R[e];if(!t)throw new Error("unknown gl type");return t}const U="undefined"!=typeof SharedArrayBuffer?function(e){return e&&e.buffer&&(e.buffer instanceof ArrayBuffer||e.buffer instanceof SharedArrayBuffer)}:function(e){return e&&e.buffer&&e.buffer instanceof ArrayBuffer};var I=Object.freeze({__proto__:null,getGLTypeForTypedArray:P,getGLTypeForTypedArrayType:C,getTypedArrayTypeForGLType:L,isArrayBuffer:U});function D(e,t){Object.keys(t).forEach((function(n){t.hasOwnProperty(n)&&e.hasOwnProperty(n)&&(t[n]=e[n])}))}function N(...e){console.error(...e)}function F(...e){console.warn(...e)}const O=new Map;function B(e,t){if(!e||"object"!=typeof e)return!1;let n=O.get(t);n||(n=new WeakMap,O.set(t,n));let r=n.get(e);if(void 0===r){const i=Object.prototype.toString.call(e);r=i.substring(8,i.length-1)===t,n.set(e,r)}return r}function z(e,t){return"undefined"!=typeof WebGLRenderbuffer&&B(t,"WebGLRenderbuffer")}function V(e,t){return"undefined"!=typeof WebGLTexture&&B(t,"WebGLTexture")}const H=35044,G=34962,k=34963,W=34660,j=5120,X=5121,q=5122,Y=5123,K=5124,Z=5125,J=5126,$={attribPrefix:""};function Q(e){$.attribPrefix=e}function ee(e){D(e,$)}function te(e,t,n,r,i){e.bindBuffer(t,n),e.bufferData(t,r,i||H)}function ne(e,t,n,r){if("undefined"!=typeof WebGLBuffer&&B(t,"WebGLBuffer"))return t;n=n||G;const i=e.createBuffer();return te(e,n,i,t,r),i}function re(e){return"indices"===e}function ie(e){return e.length?e:e.data}const ae=/coord|texture/i,oe=/color|colour/i;function se(e,t,n){return e.numComponents||e.size||function(e,t){let n;if(n=ae.test(e)?2:oe.test(e)?4:3,t%n>0)throw new Error(`Can not guess numComponents for attribute '${e}'. Tried ${n} but ${t} values is not evenly divisible by ${n}. You should specify it.`);return n}(t,n||ie(e).length)}function le(e,t){if(U(e))return e;if(U(e.data))return e.data;Array.isArray(e)&&(e={data:e});let n=e.type?ce(e.type):void 0;return n||(n=re(t)?Uint16Array:Float32Array),new n(e.data)}function ce(e){return"number"==typeof e?L(e):e||Float32Array}function ue(e,t){return{buffer:t.buffer,numValues:24,type:(n=t.type,"number"==typeof n?n:n?C(n):J),arrayType:ce(t.type)};var n}function he(e,t){const n=t.data||t,r=ce(t.type),i=n*r.BYTES_PER_ELEMENT,a=e.createBuffer();return e.bindBuffer(G,a),e.bufferData(G,i,t.drawType||H),{buffer:a,numValues:n,type:C(r),arrayType:r}}function de(e,t,n){const r=le(t,n);return{arrayType:r.constructor,buffer:ne(e,r,void 0,t.drawType),type:P(r),numValues:0}}function fe(e,t){const n={};return Object.keys(t).forEach((function(r){if(!re(r)){const a=t[r],o=a.attrib||a.name||a.attribName||$.attribPrefix+r;if(a.value){if(!Array.isArray(a.value)&&!U(a.value))throw new Error("array.value is not array or typedarray");n[o]={value:a.value}}else{let t;t=a.buffer&&a.buffer instanceof WebGLBuffer?ue:"number"==typeof a||"number"==typeof a.data?he:de;const{buffer:s,type:l,numValues:c,arrayType:u}=t(e,a,r),h=void 0!==a.normalize?a.normalize:(i=u)===Int8Array||i===Uint8Array,d=se(a,r,c);n[o]={buffer:s,numComponents:d,type:l,normalize:h,stride:a.stride||0,offset:a.offset||0,divisor:void 0===a.divisor?void 0:a.divisor,drawType:a.drawType}}}var i})),e.bindBuffer(G,null),n}function pe(e,t,n,r){n=le(n),void 0!==r?(e.bindBuffer(G,t.buffer),e.bufferSubData(G,r,n)):te(e,G,t.buffer,n,t.drawType)}const me=["position","positions","a_position"];function ge(e,t,n){const r=fe(e,t),i=Object.assign({},n||{});i.attribs=Object.assign({},n?n.attribs:{},r);const a=t.indices;if(a){const t=le(a,"indices");i.indices=ne(e,t,k),i.numElements=t.length,i.elementType=P(t)}else i.numElements||(i.numElements=function(e,t){let n,r;for(r=0;r<me.length&&(n=me[r],!(n in t))&&(n=$.attribPrefix+n,!(n in t));++r);r===me.length&&(n=Object.keys(t)[0]);const i=t[n];if(!i.buffer)return 1;e.bindBuffer(G,i.buffer);const a=e.getBufferParameter(G,W);var o;e.bindBuffer(G,null);const s=a/((o=i.type)===j||o===X?1:o===q||o===Y?2:o===K||o===Z||o===J?4:0),l=i.numComponents||i.size,c=s/l;if(c%1!=0)throw new Error(`numComponents ${l} not correct for length ${length}`);return c}(e,i.attribs));return i}function _e(e,t,n){const r="indices"===n?k:G;return ne(e,le(t,n),r)}function ve(e,t){const n={};return Object.keys(t).forEach((function(r){n[r]=_e(e,t[r],r)})),t.indices?(n.numElements=t.indices.length,n.elementType=P(le(t.indices))):n.numElements=function(e){let t,n;for(n=0;n<me.length&&(t=me[n],!(t in e));++n);n===me.length&&(t=Object.keys(e)[0]);const r=e[t],i=ie(r).length;if(void 0===i)return 1;const a=se(r,t),o=i/a;if(i%a>0)throw new Error(`numComponents ${a} not correct for length ${i}`);return o}(t),n}var xe=Object.freeze({__proto__:null,createAttribsFromArrays:fe,createBuffersFromArrays:ve,createBufferFromArray:_e,createBufferFromTypedArray:ne,createBufferInfoFromArrays:ge,setAttribInfoBufferFromArray:pe,setAttributePrefix:Q,setAttributeDefaults_:ee,getNumComponents_:se,getArray_:ie});const ye=ie,Me=se;function be(e,t){let n=0;return e.push=function(){for(let t=0;t<arguments.length;++t){const r=arguments[t];if(r instanceof Array||U(r))for(let t=0;t<r.length;++t)e[n++]=r[t];else e[n++]=r}},e.reset=function(e){n=e||0},e.numComponents=t,Object.defineProperty(e,"numElements",{get:function(){return this.length/this.numComponents|0}}),e}function Ee(e,t,n){return be(new(n||Float32Array)(e*t),e)}function Se(e){return"indices"!==e}function Te(e,t,n){const r=e.length,i=new Float32Array(3);for(let a=0;a<r;a+=3)n(t,[e[a],e[a+1],e[a+2]],i),e[a]=i[0],e[a+1]=i[1],e[a+2]=i[2]}function Ae(e,t,n){n=n||i();const r=t[0],a=t[1],o=t[2];return n[0]=r*e[0]+a*e[1]+o*e[2],n[1]=r*e[4]+a*e[5]+o*e[6],n[2]=r*e[8]+a*e[9]+o*e[10],n}function we(e,t){return Te(e,t,x),e}function Re(e,t){return Te(e,_(t),Ae),e}function Pe(e,t){return Te(e,t,v),e}function Ce(e,t){return Object.keys(e).forEach((function(n){const r=e[n];n.indexOf("pos")>=0?Pe(r,t):n.indexOf("tan")>=0||n.indexOf("binorm")>=0?we(r,t):n.indexOf("norm")>=0&&Re(r,t)})),e}function Le(e,t,n){return e=e||2,{position:{numComponents:2,data:[(t=t||0)+-1*(e*=.5),(n=n||0)+-1*e,t+1*e,n+-1*e,t+-1*e,n+1*e,t+1*e,n+1*e]},normal:[0,0,1,0,0,1,0,0,1,0,0,1],texcoord:[0,0,1,0,0,1,1,1],indices:[0,1,2,2,1,3]}}function Ue(e,t,n,r,i){e=e||1,t=t||1,n=n||1,r=r||1,i=i||g();const a=(n+1)*(r+1),o=Ee(3,a),s=Ee(3,a),l=Ee(2,a);for(let i=0;i<=r;i++)for(let a=0;a<=n;a++){const c=a/n,u=i/r;o.push(e*c-.5*e,0,t*u-.5*t),s.push(0,1,0),l.push(c,u)}const c=n+1,u=Ee(3,n*r*2,Uint16Array);for(let e=0;e<r;e++)for(let t=0;t<n;t++)u.push((e+0)*c+t,(e+1)*c+t,(e+0)*c+t+1),u.push((e+1)*c+t,(e+1)*c+t+1,(e+0)*c+t+1);return Ce({position:o,normal:s,texcoord:l,indices:u},i)}function Ie(e,t,n,r,i,a,o){if(t<=0||n<=0)throw new Error("subdivisionAxis and subdivisionHeight must be > 0");r=r||0,a=a||0;const s=(i=i||Math.PI)-r,l=(o=o||2*Math.PI)-a,c=(t+1)*(n+1),u=Ee(3,c),h=Ee(3,c),d=Ee(2,c);for(let i=0;i<=n;i++)for(let o=0;o<=t;o++){const c=o/t,f=i/n,p=l*c+a,m=s*f+r,g=Math.sin(p),_=Math.cos(p),v=Math.sin(m),x=_*v,y=Math.cos(m),M=g*v;u.push(e*x,e*y,e*M),h.push(x,y,M),d.push(1-c,f)}const f=t+1,p=Ee(3,t*n*2,Uint16Array);for(let e=0;e<t;e++)for(let t=0;t<n;t++)p.push((t+0)*f+e,(t+0)*f+e+1,(t+1)*f+e),p.push((t+1)*f+e,(t+0)*f+e+1,(t+1)*f+e+1);return{position:u,normal:h,texcoord:d,indices:p}}const De=[[3,7,5,1],[6,2,0,4],[6,7,3,2],[0,1,5,4],[7,6,4,5],[2,3,1,0]];function Ne(e){const t=(e=e||1)/2,n=[[-t,-t,-t],[+t,-t,-t],[-t,+t,-t],[+t,+t,-t],[-t,-t,+t],[+t,-t,+t],[-t,+t,+t],[+t,+t,+t]],r=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],i=[[1,0],[0,0],[0,1],[1,1]],a=Ee(3,24),o=Ee(3,24),s=Ee(2,24),l=Ee(3,12,Uint16Array);for(let e=0;e<6;++e){const t=De[e];for(let l=0;l<4;++l){const c=n[t[l]],u=r[e],h=i[l];a.push(c),o.push(u),s.push(h)}const c=4*e;l.push(c+0,c+1,c+2),l.push(c+0,c+2,c+3)}return{position:a,normal:o,texcoord:s,indices:l}}function Fe(e,t,n,r,i,a,o){if(r<3)throw new Error("radialSubdivisions must be 3 or greater");if(i<1)throw new Error("verticalSubdivisions must be 1 or greater");const s=void 0===a||a,l=void 0===o||o,c=(s?2:0)+(l?2:0),u=(r+1)*(i+1+c),h=Ee(3,u),d=Ee(3,u),f=Ee(2,u),p=Ee(3,r*(i+c/2)*2,Uint16Array),m=r+1,g=Math.atan2(e-t,n),_=Math.cos(g),v=Math.sin(g),x=i+(l?2:0);for(let a=s?-2:0;a<=x;++a){let o,s=a/i,l=n*s;a<0?(l=0,s=1,o=e):a>i?(l=n,s=1,o=t):o=e+a/i*(t-e),-2!==a&&a!==i+2||(o=0,s=0),l-=n/2;for(let e=0;e<m;++e){const t=Math.sin(e*Math.PI*2/r),n=Math.cos(e*Math.PI*2/r);h.push(t*o,l,n*o),a<0?d.push(0,-1,0):a>i?d.push(0,1,0):0===o?d.push(0,0,0):d.push(t*_,v,n*_),f.push(e/r,1-s)}}for(let e=0;e<i+c;++e)if(!(1===e&&s||e===i+c-2&&l))for(let t=0;t<r;++t)p.push(m*(e+0)+0+t,m*(e+0)+1+t,m*(e+1)+1+t),p.push(m*(e+0)+0+t,m*(e+1)+1+t,m*(e+1)+0+t);return{position:h,normal:d,texcoord:f,indices:p}}function Oe(e,t){t=t||[];const n=[];for(let r=0;r<e.length;r+=4){const i=e[r],a=e.slice(r+1,r+4);a.push.apply(a,t);for(let e=0;e<i;++e)n.push.apply(n,a)}return n}function Be(){const e=[0,0,0,0,150,0,30,0,0,0,150,0,30,150,0,30,0,0,30,0,0,30,30,0,100,0,0,30,30,0,100,30,0,100,0,0,30,60,0,30,90,0,67,60,0,30,90,0,67,90,0,67,60,0,0,0,30,30,0,30,0,150,30,0,150,30,30,0,30,30,150,30,30,0,30,100,0,30,30,30,30,30,30,30,100,0,30,100,30,30,30,60,30,67,60,30,30,90,30,30,90,30,67,60,30,67,90,30,0,0,0,100,0,0,100,0,30,0,0,0,100,0,30,0,0,30,100,0,0,100,30,0,100,30,30,100,0,0,100,30,30,100,0,30,30,30,0,30,30,30,100,30,30,30,30,0,100,30,30,100,30,0,30,30,0,30,60,30,30,30,30,30,30,0,30,60,0,30,60,30,30,60,0,67,60,30,30,60,30,30,60,0,67,60,0,67,60,30,67,60,0,67,90,30,67,60,30,67,60,0,67,90,0,67,90,30,30,90,0,30,90,30,67,90,30,30,90,0,67,90,30,67,90,0,30,90,0,30,150,30,30,90,30,30,90,0,30,150,0,30,150,30,0,150,0,0,150,30,30,150,30,0,150,0,30,150,30,30,150,0,0,0,0,0,0,30,0,150,30,0,0,0,0,150,30,0,150,0],t=Oe([18,0,0,1,18,0,0,-1,6,0,1,0,6,1,0,0,6,0,-1,0,6,1,0,0,6,0,1,0,6,1,0,0,6,0,-1,0,6,1,0,0,6,0,-1,0,6,-1,0,0]),n=Oe([18,200,70,120,18,80,70,200,6,70,200,210,6,200,200,70,6,210,100,70,6,210,160,70,6,70,180,210,6,100,70,210,6,76,210,100,6,140,210,80,6,90,130,110,6,160,160,220],[255]),r=e.length/3,i={position:Ee(3,r),texcoord:Ee(2,r),normal:Ee(3,r),color:Ee(4,r,Uint8Array),indices:Ee(3,r/3,Uint16Array)};i.position.push(e),i.texcoord.push([.22,.19,.22,.79,.34,.19,.22,.79,.34,.79,.34,.19,.34,.19,.34,.31,.62,.19,.34,.31,.62,.31,.62,.19,.34,.43,.34,.55,.49,.43,.34,.55,.49,.55,.49,.43,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,0]),i.normal.push(t),i.color.push(n);for(let e=0;e<r;++e)i.indices.push(e);return i}function ze(e,t,n,r,i,o,s){if(i<=0)throw new Error("subdivisionDown must be > 0");const l=(s=s||1)-(o=o||0),u=2*(i+1)*4,h=Ee(3,u),d=Ee(3,u),f=Ee(2,u);function p(e,t,n){return e+(t-e)*n}function m(t,n,s,u,m,g){for(let _=0;_<=i;_++){const v=n/1,x=_/i,y=2*(v-.5),M=(o+x*l)*Math.PI,b=Math.sin(M),E=Math.cos(M),S=p(e,t,b),T=y*r,A=E*e,w=b*S;h.push(T,A,w);const R=a(c([0,b,E],s),u);d.push(R),f.push(v*m+g,x)}}for(let e=0;e<2;e++){const r=2*(e/1-.5);m(t,e,[1,1,1],[0,0,0],1,0),m(t,e,[0,0,0],[r,0,0],0,0),m(n,e,[1,1,1],[0,0,0],1,0),m(n,e,[0,0,0],[r,0,0],0,1)}const g=Ee(3,2*i*4,Uint16Array);function _(e,t){for(let n=0;n<i;++n)g.push(e+n+0,e+n+1,t+n+0),g.push(e+n+1,t+n+1,t+n+0)}const v=i+1;return _(0*v,4*v),_(5*v,7*v),_(6*v,2*v),_(3*v,1*v),{position:h,normal:d,texcoord:f,indices:g}}function Ve(e,t,n,r,i,a){return Fe(e,e,t,n,r,i,a)}function He(e,t,n,r,i,a){if(n<3)throw new Error("radialSubdivisions must be 3 or greater");if(r<3)throw new Error("verticalSubdivisions must be 3 or greater");i=i||0;const o=(a=a||2*Math.PI)-i,s=n+1,l=r+1,c=s*l,u=Ee(3,c),h=Ee(3,c),d=Ee(2,c),f=Ee(3,n*r*2,Uint16Array);for(let a=0;a<l;++a){const l=a/r,c=l*Math.PI*2,f=Math.sin(c),p=e+f*t,m=Math.cos(c),g=m*t;for(let e=0;e<s;++e){const t=e/n,r=i+t*o,a=Math.sin(r),s=Math.cos(r),c=a*p,_=s*p,v=a*f,x=s*f;u.push(c,g,_),h.push(v,m,x),d.push(t,1-l)}}for(let e=0;e<r;++e)for(let t=0;t<n;++t){const n=1+t,r=1+e;f.push(s*e+t,s*r+t,s*e+n),f.push(s*r+t,s*r+n,s*e+n)}return{position:u,normal:h,texcoord:d,indices:f}}function Ge(e,t,n,r,i){if(t<3)throw new Error("divisions must be at least 3");i=i||1,r=r||0;const a=(t+1)*((n=n||1)+1),o=Ee(3,a),s=Ee(3,a),l=Ee(2,a),c=Ee(3,n*t*2,Uint16Array);let u=0;const h=e-r,d=t+1;for(let e=0;e<=n;++e){const a=r+h*Math.pow(e/n,i);for(let r=0;r<=t;++r){const i=2*Math.PI*r/t,h=a*Math.cos(i),f=a*Math.sin(i);if(o.push(h,0,f),s.push(0,1,0),l.push(1-r/t,e/n),e>0&&r!==t){const e=u+(r+1),t=u+r,n=u+r-d,i=u+(r+1)-d;c.push(e,t,n),c.push(e,n,i)}}u+=t+1}return{position:o,normal:s,texcoord:l,indices:c}}function ke(e){return function(t){return ve(t,e.apply(this,Array.prototype.slice.call(arguments,1)))}}function We(e){return function(t){return ge(t,e.apply(null,Array.prototype.slice.call(arguments,1)))}}const je=["numComponents","size","type","normalize","stride","offset","attrib","name","attribName"];function Xe(e,t,n,r){r=r||0;const i=e.length;for(let a=0;a<i;++a)t[n+a]=e[a]+r}function qe(e,t){const n=ye(e),r=new n.constructor(t);let i=r;var a,o;return n.numComponents&&n.numElements&&be(r,n.numComponents),e.data&&(i={data:r},a=e,o=i,je.forEach((function(e){const t=a[e];void 0!==t&&(o[e]=t)}))),i}const Ye=We(Be),Ke=ke(Be),Ze=We(Ne),Je=ke(Ne),$e=We(Ue),Qe=ke(Ue),et=We(Ie),tt=ke(Ie),nt=We(Fe),rt=ke(Fe),it=We(Le),at=ke(Le),ot=We(ze),st=ke(ze),lt=We(Ve),ct=ke(Ve),ut=We(He),ht=ke(He),dt=We(Ge),ft=ke(Ge),pt=ot,mt=st,gt=ze;var _t=Object.freeze({__proto__:null,create3DFBufferInfo:Ye,create3DFBuffers:Ke,create3DFVertices:Be,createAugmentedTypedArray:Ee,createCubeBufferInfo:Ze,createCubeBuffers:Je,createCubeVertices:Ne,createPlaneBufferInfo:$e,createPlaneBuffers:Qe,createPlaneVertices:Ue,createSphereBufferInfo:et,createSphereBuffers:tt,createSphereVertices:Ie,createTruncatedConeBufferInfo:nt,createTruncatedConeBuffers:rt,createTruncatedConeVertices:Fe,createXYQuadBufferInfo:it,createXYQuadBuffers:at,createXYQuadVertices:Le,createCresentBufferInfo:pt,createCresentBuffers:mt,createCresentVertices:gt,createCrescentBufferInfo:ot,createCrescentBuffers:st,createCrescentVertices:ze,createCylinderBufferInfo:lt,createCylinderBuffers:ct,createCylinderVertices:Ve,createTorusBufferInfo:ut,createTorusBuffers:ht,createTorusVertices:He,createDiscBufferInfo:dt,createDiscBuffers:ft,createDiscVertices:Ge,deindexVertices:function(e){const t=e.indices,n={},r=t.length;return Object.keys(e).filter(Se).forEach((function(i){const a=e[i],o=a.numComponents,s=Ee(o,r,a.constructor);for(let e=0;e<r;++e){const n=t[e]*o;for(let e=0;e<o;++e)s.push(a[n+e])}n[i]=s})),n},flattenNormals:function(e){if(e.indices)throw new Error("can not flatten normals of indexed vertices. deindex them first");const t=e.normal,n=t.length;for(let e=0;e<n;e+=9){const n=t[e+0],r=t[e+1],i=t[e+2],a=t[e+3],o=t[e+4],s=t[e+5];let l=n+a+t[e+6],c=r+o+t[e+7],u=i+s+t[e+8];const h=Math.sqrt(l*l+c*c+u*u);l/=h,c/=h,u/=h,t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=l,t[e+4]=c,t[e+5]=u,t[e+6]=l,t[e+7]=c,t[e+8]=u}return e},makeRandomVertexColors:function(e,t){t=t||{};const n=e.position.numElements,r=Ee(4,n,Uint8Array),i=t.rand||function(e,t){return t<3?(256,256*Math.random()|0):255};if(e.color=r,e.indices)for(let e=0;e<n;++e)r.push(i(e,0),i(e,1),i(e,2),i(e,3));else{const e=t.vertsPerColor||3,a=n/e;for(let t=0;t<a;++t){const n=[i(t,0),i(t,1),i(t,2),i(t,3)];for(let t=0;t<e;++t)r.push(n)}}return e},reorientDirections:we,reorientNormals:Re,reorientPositions:Pe,reorientVertices:Ce,concatVertices:function(e){const t={};let n;for(let r=0;r<e.length;++r){const i=e[r];Object.keys(i).forEach((function(e){t[e]||(t[e]=[]),n||"indices"===e||(n=e);const r=i[e],a=Me(r,e),o=ye(r).length/a;t[e].push(o)}))}const r=t[n],i={};return Object.keys(t).forEach((function(t){const n=function(t){let n,r=0;for(let i=0;i<e.length;++i){const a=e[i][t];r+=ye(a).length,n&&!a.data||(n=a)}return{length:r,spec:n}}(t),a=qe(n.spec,n.length);!function(t,n,r){let i=0,a=0;for(let o=0;o<e.length;++o){const s=e[o][t],l=ye(s);"indices"===t?(Xe(l,r,a,i),i+=n[o]):Xe(l,r,a),a+=l.length}}(t,r,ye(a)),i[t]=a})),i},duplicateVertices:function(e){const t={};return Object.keys(e).forEach((function(n){const r=e[n],i=ye(r),a=qe(r,i.length);Xe(i,ye(a),0),t[n]=a})),t}});function vt(e){return!!e.texStorage2D}function xt(e){return!e.texStorage2D}const yt=function(){const e={},t={};return function(n,r){return function(n){const r=n.constructor.name;if(!e[r]){for(const e in n)if("number"==typeof n[e]){const r=t[n[e]];t[n[e]]=r?`${r} | ${e}`:e}e[r]=!0}}(n),t[r]||("number"==typeof r?`0x${r.toString(16)}`:r)}}();var Mt=Object.freeze({__proto__:null,glEnumToString:yt,isWebGL1:xt,isWebGL2:vt});const bt={textureColor:new Uint8Array([128,192,255,255]),textureOptions:{},crossOrigin:void 0},Et=U,St=function(){let e;return function(){return e=e||("undefined"!=typeof document&&document.createElement?document.createElement("canvas").getContext("2d"):null),e}}(),Tt=6406,At=6407,wt=6408,Rt=6409,Pt=6410,Ct=6402,Lt=34041,Ut=33071,It=9728,Dt=9729,Nt=3553,Ft=34067,Ot=32879,Bt=35866,zt=34069,Vt=34070,Ht=34071,Gt=34072,kt=34073,Wt=34074,jt=10241,Xt=10240,qt=10242,Yt=10243,Kt=32882,Zt=33082,Jt=33083,$t=33084,Qt=33085,en=34892,tn=34893,nn=3317,rn=3314,an=32878,on=3316,sn=3315,ln=32877,cn=37443,un=37441,hn=37440,dn=33321,fn=36756,pn=33325,mn=33326,gn=33330,_n=33329,vn=33338,xn=33337,yn=33340,Mn=33339,bn=33323,En=36757,Sn=33327,Tn=33328,An=33336,wn=33335,Rn=33332,Pn=33331,Cn=33334,Ln=33333,Un=32849,In=35905,Dn=36194,Nn=36758,Fn=35898,On=35901,Bn=34843,zn=34837,Vn=36221,Hn=36239,Gn=36215,kn=36233,Wn=36209,jn=36227,Xn=32856,qn=35907,Yn=36759,Kn=32855,Zn=32854,Jn=32857,$n=34842,Qn=34836,er=36220,tr=36238,nr=36975,rr=36214,ir=36232,ar=36226,or=36208,sr=33189,lr=33190,cr=36012,ur=36013,hr=35056,dr=5120,fr=5121,pr=5122,mr=5123,gr=5124,_r=5125,vr=5126,xr=32819,yr=32820,Mr=33635,br=5131,Er=36193,Sr=33640,Tr=35899,Ar=35902,wr=36269,Rr=34042,Pr=33319,Cr=33320,Lr=6403,Ur=36244,Ir=36248,Dr=36249,Nr={};{const e=Nr;e[Tt]={numColorComponents:1},e[Rt]={numColorComponents:1},e[Pt]={numColorComponents:2},e[At]={numColorComponents:3},e[wt]={numColorComponents:4},e[Lr]={numColorComponents:1},e[Ur]={numColorComponents:1},e[Pr]={numColorComponents:2},e[Cr]={numColorComponents:2},e[At]={numColorComponents:3},e[Ir]={numColorComponents:3},e[wt]={numColorComponents:4},e[Dr]={numColorComponents:4},e[Ct]={numColorComponents:1},e[Lt]={numColorComponents:2}}let Fr;function Or(e){if(!Fr){const e={};e[Tt]={textureFormat:Tt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[1,2,2,4],type:[fr,br,Er,vr]},e[Rt]={textureFormat:Rt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[1,2,2,4],type:[fr,br,Er,vr]},e[Pt]={textureFormat:Pt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[2,4,4,8],type:[fr,br,Er,vr]},e[At]={textureFormat:At,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[3,6,6,12,2],type:[fr,br,Er,vr,Mr]},e[wt]={textureFormat:wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4,8,8,16,2,2],type:[fr,br,Er,vr,xr,yr]},e[Ct]={textureFormat:Ct,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2,4],type:[_r,mr]},e[dn]={textureFormat:Lr,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[1],type:[fr]},e[fn]={textureFormat:Lr,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[1],type:[dr]},e[pn]={textureFormat:Lr,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[4,2],type:[vr,br]},e[mn]={textureFormat:Lr,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[4],type:[vr]},e[gn]={textureFormat:Ur,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[1],type:[fr]},e[_n]={textureFormat:Ur,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[1],type:[dr]},e[Rn]={textureFormat:Ur,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2],type:[mr]},e[Pn]={textureFormat:Ur,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2],type:[pr]},e[Cn]={textureFormat:Ur,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[_r]},e[Ln]={textureFormat:Ur,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[gr]},e[bn]={textureFormat:Pr,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[2],type:[fr]},e[En]={textureFormat:Pr,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[2],type:[dr]},e[Sn]={textureFormat:Pr,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[8,4],type:[vr,br]},e[Tn]={textureFormat:Pr,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[8],type:[vr]},e[An]={textureFormat:Cr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2],type:[fr]},e[wn]={textureFormat:Cr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2],type:[dr]},e[vn]={textureFormat:Cr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[mr]},e[xn]={textureFormat:Cr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[pr]},e[yn]={textureFormat:Cr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[8],type:[_r]},e[Mn]={textureFormat:Cr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[8],type:[gr]},e[Un]={textureFormat:At,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[3],type:[fr]},e[In]={textureFormat:At,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[3],type:[fr]},e[Dn]={textureFormat:At,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[3,2],type:[fr,Mr]},e[Nn]={textureFormat:At,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[3],type:[dr]},e[Fn]={textureFormat:At,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[12,6,4],type:[vr,br,Tr]},e[On]={textureFormat:At,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[12,6,4],type:[vr,br,Ar]},e[Bn]={textureFormat:At,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[12,6],type:[vr,br]},e[zn]={textureFormat:At,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[12],type:[vr]},e[Vn]={textureFormat:Ir,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[3],type:[fr]},e[Hn]={textureFormat:Ir,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[3],type:[dr]},e[Gn]={textureFormat:Ir,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[6],type:[mr]},e[kn]={textureFormat:Ir,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[6],type:[pr]},e[Wn]={textureFormat:Ir,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[12],type:[_r]},e[jn]={textureFormat:Ir,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[12],type:[gr]},e[Xn]={textureFormat:wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4],type:[fr]},e[qn]={textureFormat:wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4],type:[fr]},e[Yn]={textureFormat:wt,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[4],type:[dr]},e[Kn]={textureFormat:wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4,2,4],type:[fr,yr,Sr]},e[Zn]={textureFormat:wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4,2],type:[fr,xr]},e[Jn]={textureFormat:wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4],type:[Sr]},e[$n]={textureFormat:wt,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[16,8],type:[vr,br]},e[Qn]={textureFormat:wt,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[16],type:[vr]},e[er]={textureFormat:Dr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[fr]},e[tr]={textureFormat:Dr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[dr]},e[nr]={textureFormat:Dr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[Sr]},e[rr]={textureFormat:Dr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[8],type:[mr]},e[ir]={textureFormat:Dr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[8],type:[pr]},e[ar]={textureFormat:Dr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[16],type:[gr]},e[or]={textureFormat:Dr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[16],type:[_r]},e[sr]={textureFormat:Ct,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2,4],type:[mr,_r]},e[lr]={textureFormat:Ct,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[_r]},e[cr]={textureFormat:Ct,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[vr]},e[hr]={textureFormat:Lt,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[Rr]},e[ur]={textureFormat:Lt,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[wr]},Object.keys(e).forEach((function(t){const n=e[t];n.bytesPerElementMap={},n.bytesPerElement.forEach((function(e,t){const r=n.type[t];n.bytesPerElementMap[r]=e}))})),Fr=e}return Fr[e]}function Br(e,t){const n=Or(e);if(!n)throw"unknown internal format";const r=n.bytesPerElementMap[t];if(void 0===r)throw"unknown internal format";return r}function zr(e){const t=Or(e);if(!t)throw"unknown internal format";return{format:t.textureFormat,type:t.type[0]}}function Vr(e){return 0==(e&e-1)}function Hr(e,t,n,r){if(!vt(e))return Vr(t)&&Vr(n);const i=Or(r);if(!i)throw"unknown internal format";return i.colorRenderable&&i.textureFilterable}function Gr(e){const t=Or(e);if(!t)throw"unknown internal format";return t.textureFilterable}function kr(e){const t=Nr[e];if(!t)throw"unknown format: "+e;return t.numColorComponents}function Wr(e,t,n){return Et(t)?P(t):n||fr}function jr(e,t,n,r,i){if(i%1!=0)throw"can't guess dimensions";if(n||r){if(r){if(!n&&(n=i/r)%1)throw"can't guess dimensions"}else if((r=i/n)%1)throw"can't guess dimensions"}else{const e=Math.sqrt(i/(t===Ft?6:1));e%1==0?(n=e,r=e):(n=i,r=1)}return{width:n,height:r}}function Xr(e){bt.textureColor=new Uint8Array([255*e[0],255*e[1],255*e[2],255*e[3]])}function qr(e){D(e,bt),e.textureColor&&Xr(e.textureColor)}function Yr(e,t){void 0!==t.colorspaceConversion&&e.pixelStorei(cn,t.colorspaceConversion),void 0!==t.premultiplyAlpha&&e.pixelStorei(un,t.premultiplyAlpha),void 0!==t.flipY&&e.pixelStorei(hn,t.flipY)}function Kr(e){e.pixelStorei(nn,4),vt(e)&&(e.pixelStorei(rn,0),e.pixelStorei(an,0),e.pixelStorei(on,0),e.pixelStorei(sn,0),e.pixelStorei(ln,0))}function Zr(e,t,n,r){r.minMag&&(n.call(e,t,jt,r.minMag),n.call(e,t,Xt,r.minMag)),r.min&&n.call(e,t,jt,r.min),r.mag&&n.call(e,t,Xt,r.mag),r.wrap&&(n.call(e,t,qt,r.wrap),n.call(e,t,Yt,r.wrap),(t===Ot||"undefined"!=typeof WebGLSampler&&B(t,"WebGLSampler"))&&n.call(e,t,Kt,r.wrap)),r.wrapR&&n.call(e,t,Kt,r.wrapR),r.wrapS&&n.call(e,t,qt,r.wrapS),r.wrapT&&n.call(e,t,Yt,r.wrapT),void 0!==r.minLod&&n.call(e,t,Zt,r.minLod),void 0!==r.maxLod&&n.call(e,t,Jt,r.maxLod),void 0!==r.baseLevel&&n.call(e,t,$t,r.baseLevel),void 0!==r.maxLevel&&n.call(e,t,Qt,r.maxLevel),void 0!==r.compareFunc&&n.call(e,t,tn,r.compareFunc),void 0!==r.compareMode&&n.call(e,t,en,r.compareMode)}function Jr(e,t,n){const r=n.target||Nt;e.bindTexture(r,t),Zr(e,r,e.texParameteri,n)}function $r(e,t,n){Zr(e,t,e.samplerParameteri,n)}function Qr(e,t){const n=e.createSampler();return $r(e,n,t),n}function ei(e,t){const n={};return Object.keys(t).forEach((function(r){n[r]=Qr(e,t[r])})),n}function ti(e,t,n,r,i,a){n=n||bt.textureOptions,a=a||wt;const o=n.target||Nt;if(r=r||n.width,i=i||n.height,e.bindTexture(o,t),Hr(e,r,i,a))e.generateMipmap(o);else{const t=Gr(a)?Dt:It;e.texParameteri(o,jt,t),e.texParameteri(o,Xt,t),e.texParameteri(o,qt,Ut),e.texParameteri(o,Yt,Ut)}}function ni(e){return!0===e.auto||void 0===e.auto&&void 0===e.level}function ri(e,t){return(t=t||{}).cubeFaceOrder||[zt,Vt,Ht,Gt,kt,Wt]}function ii(e,t){const n=ri(0,t).map((function(e,t){return{face:e,ndx:t}}));return n.sort((function(e,t){return e.face-t.face})),n}function ai(e,t,n,r){const i=(r=r||bt.textureOptions).target||Nt,a=r.level||0;let o=n.width,s=n.height;const l=r.internalFormat||r.format||wt,c=zr(l),u=r.format||c.format,h=r.type||c.type;if(Yr(e,r),e.bindTexture(i,t),i===Ft){const c=n.width,d=n.height;let f,p;if(c/6===d)f=d,p=[0,0,1,0,2,0,3,0,4,0,5,0];else if(d/6===c)f=c,p=[0,0,0,1,0,2,0,3,0,4,0,5];else if(c/3==d/2)f=c/3,p=[0,0,1,0,2,0,0,1,1,1,2,1];else{if(c/2!=d/3)throw"can't figure out cube map from element: "+(n.src?n.src:n.nodeName);f=c/2,p=[0,0,1,0,0,1,1,1,0,2,1,2]}const m=St();m?(m.canvas.width=f,m.canvas.height=f,o=f,s=f,ii(0,r).forEach((function(t){const r=p[2*t.ndx+0]*f,i=p[2*t.ndx+1]*f;m.drawImage(n,r,i,f,f,0,0,f,f),e.texImage2D(t.face,a,l,u,h,m.canvas)})),m.canvas.width=1,m.canvas.height=1):"undefined"!=typeof createImageBitmap&&(o=f,s=f,ii(0,r).forEach((function(c){const d=p[2*c.ndx+0]*f,m=p[2*c.ndx+1]*f;e.texImage2D(c.face,a,l,f,f,0,u,h,null),createImageBitmap(n,d,m,f,f,{premultiplyAlpha:"none",colorSpaceConversion:"none"}).then((function(n){Yr(e,r),e.bindTexture(i,t),e.texImage2D(c.face,a,l,u,h,n),ni(r)&&ti(e,t,r,o,s,l)}))})))}else if(i===Ot||i===Bt){const t=Math.min(n.width,n.height),r=Math.max(n.width,n.height),o=r/t;if(o%1!=0)throw"can not compute 3D dimensions of element";const s=n.width===r?1:0,c=n.height===r?1:0;e.pixelStorei(nn,1),e.pixelStorei(rn,n.width),e.pixelStorei(an,0),e.pixelStorei(ln,0),e.texImage3D(i,a,l,t,t,t,0,u,h,null);for(let r=0;r<o;++r){const o=r*t*s,l=r*t*c;e.pixelStorei(on,o),e.pixelStorei(sn,l),e.texSubImage3D(i,a,0,0,r,t,t,1,u,h,n)}Kr(e)}else e.texImage2D(i,a,l,u,h,n);ni(r)&&ti(e,t,r,o,s,l),Jr(e,t,r)}function oi(){}function si(e){return"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof ImageData&&e instanceof ImageData||"undefined"!=typeof HTMLElement&&e instanceof HTMLElement}function li(e,t,n){return si(e)?(setTimeout((function(){n(null,e)})),e):function(e,t,n){let r;if(n=n||oi,t=void 0!==t?t:bt.crossOrigin,t=function(e,t){return void 0!==t||function(e){if("undefined"!=typeof document){const t=document.createElement("a");return t.href=e,t.hostname===location.hostname&&t.port===location.port&&t.protocol===location.protocol}{const t=new URL(location.href).origin;return new URL(e,location.href).origin===t}}(e)?t:"anonymous"}(e,t),"undefined"!=typeof Image){r=new Image,void 0!==t&&(r.crossOrigin=t);const i=function(){r.removeEventListener("error",a),r.removeEventListener("load",o),r=null},a=function(){const t="couldn't load image: "+e;N(t),n(t,r),i()},o=function(){n(null,r),i()};return r.addEventListener("error",a),r.addEventListener("load",o),r.src=e,r}if("undefined"!=typeof ImageBitmap){let i,a;const o=function(){n(i,a)},s={};t&&(s.mode="cors"),fetch(e,s).then((function(e){if(!e.ok)throw e;return e.blob()})).then((function(e){return createImageBitmap(e,{premultiplyAlpha:"none",colorSpaceConversion:"none"})})).then((function(e){a=e,setTimeout(o)})).catch((function(e){i=e,setTimeout(o)})),r=null}return r}(e,t,n)}function ci(e,t,n){const r=(n=n||bt.textureOptions).target||Nt;if(e.bindTexture(r,t),!1===n.color)return;const i=function(e){return e=e||bt.textureColor,Et(e)?e:new Uint8Array([255*e[0],255*e[1],255*e[2],255*e[3]])}(n.color);if(r===Ft)for(let t=0;t<6;++t)e.texImage2D(zt+t,0,wt,1,1,0,wt,fr,i);else r===Ot||r===Bt?e.texImage3D(r,0,wt,1,1,1,0,wt,fr,i):e.texImage2D(r,0,wt,1,1,0,wt,fr,i)}function ui(e,t,n,r){return r=r||oi,n=n||bt.textureOptions,ci(e,t,n),li((n=Object.assign({},n)).src,n.crossOrigin,(function(i,a){i?r(i,t,a):(ai(e,t,a,n),r(null,t,a))}))}function hi(e,t,n,r){const i=(r=r||bt.textureOptions).target||Nt;e.bindTexture(i,t);let a=r.width,o=r.height,s=r.depth;const l=r.level||0,c=r.internalFormat||r.format||wt,u=zr(c),h=r.format||u.format,d=r.type||Wr(0,n,u.type);if(Et(n))n instanceof Uint8ClampedArray&&(n=new Uint8Array(n.buffer));else{const e=L(d);n=new e(n)}const f=Br(c,d),p=n.byteLength/f;if(p%1)throw"length wrong size for format: "+yt(e,h);let m;if(i===Ot||i===Bt)if(a||o||s)!a||o&&s?!o||a&&s?(m=jr(0,i,a,o,p/s),a=m.width,o=m.height):(m=jr(0,i,a,s,p/o),a=m.width,s=m.height):(m=jr(0,i,o,s,p/a),o=m.width,s=m.height);else{const e=Math.cbrt(p);if(e%1!=0)throw"can't guess cube size of array of numElements: "+p;a=e,o=e,s=e}else m=jr(0,i,a,o,p),a=m.width,o=m.height;if(Kr(e),e.pixelStorei(nn,r.unpackAlignment||1),Yr(e,r),i===Ft){const t=p/6*(f/n.BYTES_PER_ELEMENT);ii(0,r).forEach((r=>{const i=t*r.ndx,s=n.subarray(i,i+t);e.texImage2D(r.face,l,c,a,o,0,h,d,s)}))}else i===Ot||i===Bt?e.texImage3D(i,l,c,a,o,s,0,h,d,n):e.texImage2D(i,l,c,a,o,0,h,d,n);return{width:a,height:o,depth:s,type:d}}function di(e,t,n){const r=n.target||Nt;e.bindTexture(r,t);const i=n.level||0,a=n.internalFormat||n.format||wt,o=zr(a),s=n.format||o.format,l=n.type||o.type;if(Yr(e,n),r===Ft)for(let t=0;t<6;++t)e.texImage2D(zt+t,i,a,n.width,n.height,0,s,l,null);else r===Ot||r===Bt?e.texImage3D(r,i,a,n.width,n.height,n.depth,0,s,l,null):e.texImage2D(r,i,a,n.width,n.height,0,s,l,null)}function fi(e,t,n){n=n||oi,t=t||bt.textureOptions;const r=e.createTexture(),i=t.target||Nt;let a=t.width||1,o=t.height||1;const s=t.internalFormat||wt;e.bindTexture(i,r),i===Ft&&(e.texParameteri(i,qt,Ut),e.texParameteri(i,Yt,Ut));let l=t.src;if(l)if("function"==typeof l&&(l=l(e,t)),"string"==typeof l)ui(e,r,t,n);else if(Et(l)||Array.isArray(l)&&("number"==typeof l[0]||Array.isArray(l[0])||Et(l[0]))){const n=hi(e,r,l,t);a=n.width,o=n.height}else Array.isArray(l)&&("string"==typeof l[0]||si(l[0]))?i===Ft?function(e,t,n,r){r=r||oi;const i=n.src;if(6!==i.length)throw"there must be 6 urls for a cubemap";const a=n.level||0,o=n.internalFormat||n.format||wt,s=zr(o),l=n.format||s.format,c=n.type||fr,u=n.target||Nt;if(u!==Ft)throw"target must be TEXTURE_CUBE_MAP";ci(e,t,n),n=Object.assign({},n);let h=6;const d=[],f=ri(0,n);let p;p=i.map((function(i,s){return li(i,n.crossOrigin,(m=f[s],function(i,s){--h,i?d.push(i):s.width!==s.height?d.push("cubemap face img is not a square: "+s.src):(Yr(e,n),e.bindTexture(u,t),5===h?ri().forEach((function(t){e.texImage2D(t,a,o,l,c,s)})):e.texImage2D(m,a,o,l,c,s),ni(n)&&e.generateMipmap(u)),0===h&&r(d.length?d:void 0,t,p)}));var m}))}(e,r,t,n):function(e,t,n,r){r=r||oi;const i=n.src,a=n.internalFormat||n.format||wt,o=zr(a),s=n.format||o.format,l=n.type||fr,c=n.target||Bt;if(c!==Ot&&c!==Bt)throw"target must be TEXTURE_3D or TEXTURE_2D_ARRAY";ci(e,t,n),n=Object.assign({},n);let u=i.length;const h=[];let d;const f=n.level||0;let p=n.width,m=n.height;const g=i.length;let _=!0;d=i.map((function(i,o){return li(i,n.crossOrigin,(v=o,function(i,o){if(--u,i)h.push(i);else{if(Yr(e,n),e.bindTexture(c,t),_){_=!1,p=n.width||o.width,m=n.height||o.height,e.texImage3D(c,f,a,p,m,g,0,s,l,null);for(let t=0;t<g;++t)e.texSubImage3D(c,f,0,0,t,p,m,1,s,l,o)}else{let t,n=o;o.width===p&&o.height===m||(t=St(),n=t.canvas,t.canvas.width=p,t.canvas.height=m,t.drawImage(o,0,0,p,m)),e.texSubImage3D(c,f,0,0,v,p,m,1,s,l,n),t&&n===t.canvas&&(t.canvas.width=0,t.canvas.height=0)}ni(n)&&e.generateMipmap(c)}0===u&&r(h.length?h:void 0,t,d)}));var v}))}(e,r,t,n):(ai(e,r,l,t),a=l.width,o=l.height);else di(e,r,t);return ni(t)&&ti(e,r,t,a,o,s),Jr(e,r,t),r}function pi(e,t,n,r,i,a){r=r||n.width,i=i||n.height,a=a||n.depth;const o=n.target||Nt;e.bindTexture(o,t);const s=n.level||0,l=n.internalFormat||n.format||wt,c=zr(l),u=n.format||c.format;let h;const d=n.src;if(h=d&&(Et(d)||Array.isArray(d)&&"number"==typeof d[0])?n.type||Wr(0,d,c.type):n.type||c.type,o===Ft)for(let t=0;t<6;++t)e.texImage2D(zt+t,s,l,r,i,0,u,h,null);else o===Ot||o===Bt?e.texImage3D(o,s,l,r,i,a,0,u,h,null):e.texImage2D(o,s,l,r,i,0,u,h,null)}function mi(e,t,n){n=n||oi;let r=0;const i=[],a={},o={};function s(){0===r&&setTimeout((function(){n(i.length?i:void 0,a,o)}),0)}return Object.keys(t).forEach((function(n){const l=t[n];let c;var u;("string"==typeof(u=l.src)||Array.isArray(u)&&"string"==typeof u[0])&&(c=function(e,t,a){o[n]=a,--r,e&&i.push(e),s()},++r),a[n]=fi(e,l,c)})),s(),a}var gi=Object.freeze({__proto__:null,setTextureDefaults_:qr,createSampler:Qr,createSamplers:ei,setSamplerParameters:$r,createTexture:fi,setEmptyTexture:di,setTextureFromArray:hi,loadTextureFromUrl:ui,setTextureFromElement:ai,setTextureFilteringForSize:ti,setTextureParameters:Jr,setDefaultTextureColor:Xr,createTextures:mi,resizeTexture:pi,canGenerateMipmap:Hr,canFilter:Gr,getNumComponentsForFormat:kr,getBytesPerElementForInternalFormat:Br,getFormatAndTypeForInternalFormat:zr});const _i=N,vi=F;function xi(e){return"undefined"!=typeof document&&document.getElementById?document.getElementById(e):null}const yi=33984,Mi=35048,bi=34962,Ei=34963,Si=35345,Ti=35982,Ai=36386,wi=35713,Ri=35714,Pi=35632,Ci=35633,Li=35981,Ui=35718,Ii=35721,Di=35971,Ni=35382,Fi=35396,Oi=35398,Bi=35392,zi=35395,Vi=5124,Hi=3553,Gi=34067,ki=32879,Wi=35866,ji={};function Xi(e,t){return ji[t].bindPoint}function qi(e,t){return function(n){e.uniform1i(t,n)}}function Yi(e,t){return function(n){e.uniform1iv(t,n)}}function Ki(e,t){return function(n){e.uniform2iv(t,n)}}function Zi(e,t){return function(n){e.uniform3iv(t,n)}}function Ji(e,t){return function(n){e.uniform4iv(t,n)}}function $i(e,t,n,r){const i=Xi(0,t);return vt(e)?function(t){let a,o;!t||V(0,t)?(a=t,o=null):(a=t.texture,o=t.sampler),e.uniform1i(r,n),e.activeTexture(yi+n),e.bindTexture(i,a),e.bindSampler(n,o)}:function(t){e.uniform1i(r,n),e.activeTexture(yi+n),e.bindTexture(i,t)}}function Qi(e,t,n,r,i){const a=Xi(0,t),o=new Int32Array(i);for(let e=0;e<i;++e)o[e]=n+e;return vt(e)?function(t){e.uniform1iv(r,o),t.forEach((function(t,r){let i,s;e.activeTexture(yi+o[r]),!t||V(0,t)?(i=t,s=null):(i=t.texture,s=t.sampler),e.bindSampler(n,s),e.bindTexture(a,i)}))}:function(t){e.uniform1iv(r,o),t.forEach((function(t,n){e.activeTexture(yi+o[n]),e.bindTexture(a,t)}))}}function ea(e,t){return function(n){if(n.value)switch(e.disableVertexAttribArray(t),n.value.length){case 4:e.vertexAttrib4fv(t,n.value);break;case 3:e.vertexAttrib3fv(t,n.value);break;case 2:e.vertexAttrib2fv(t,n.value);break;case 1:e.vertexAttrib1fv(t,n.value);break;default:throw new Error("the length of a float constant value must be between 1 and 4!")}else e.bindBuffer(bi,n.buffer),e.enableVertexAttribArray(t),e.vertexAttribPointer(t,n.numComponents||n.size,n.type||5126,n.normalize||!1,n.stride||0,n.offset||0),e.vertexAttribDivisor&&e.vertexAttribDivisor(t,n.divisor||0)}}function ta(e,t){return function(n){if(n.value){if(e.disableVertexAttribArray(t),4!==n.value.length)throw new Error("The length of an integer constant value must be 4!");e.vertexAttrib4iv(t,n.value)}else e.bindBuffer(bi,n.buffer),e.enableVertexAttribArray(t),e.vertexAttribIPointer(t,n.numComponents||n.size,n.type||Vi,n.stride||0,n.offset||0),e.vertexAttribDivisor&&e.vertexAttribDivisor(t,n.divisor||0)}}function na(e,t){return function(n){if(n.value){if(e.disableVertexAttribArray(t),4!==n.value.length)throw new Error("The length of an unsigned integer constant value must be 4!");e.vertexAttrib4uiv(t,n.value)}else e.bindBuffer(bi,n.buffer),e.enableVertexAttribArray(t),e.vertexAttribIPointer(t,n.numComponents||n.size,n.type||5125,n.stride||0,n.offset||0),e.vertexAttribDivisor&&e.vertexAttribDivisor(t,n.divisor||0)}}function ra(e,t,n){const r=n.size,i=n.count;return function(n){e.bindBuffer(bi,n.buffer);const a=n.size||n.numComponents||r,o=a/i,s=n.type||5126,l=ji[s].size*a,c=n.normalize||!1,u=n.offset||0,h=l/i;for(let r=0;r<i;++r)e.enableVertexAttribArray(t+r),e.vertexAttribPointer(t+r,o,s,c,l,u+h*r),e.vertexAttribDivisor&&e.vertexAttribDivisor(t+r,n.divisor||0)}}ji[5126]={Type:Float32Array,size:4,setter:function(e,t){return function(n){e.uniform1f(t,n)}},arraySetter:function(e,t){return function(n){e.uniform1fv(t,n)}}},ji[35664]={Type:Float32Array,size:8,setter:function(e,t){return function(n){e.uniform2fv(t,n)}},cols:2},ji[35665]={Type:Float32Array,size:12,setter:function(e,t){return function(n){e.uniform3fv(t,n)}},cols:3},ji[35666]={Type:Float32Array,size:16,setter:function(e,t){return function(n){e.uniform4fv(t,n)}},cols:4},ji[Vi]={Type:Int32Array,size:4,setter:qi,arraySetter:Yi},ji[35667]={Type:Int32Array,size:8,setter:Ki,cols:2},ji[35668]={Type:Int32Array,size:12,setter:Zi,cols:3},ji[35669]={Type:Int32Array,size:16,setter:Ji,cols:4},ji[5125]={Type:Uint32Array,size:4,setter:function(e,t){return function(n){e.uniform1ui(t,n)}},arraySetter:function(e,t){return function(n){e.uniform1uiv(t,n)}}},ji[36294]={Type:Uint32Array,size:8,setter:function(e,t){return function(n){e.uniform2uiv(t,n)}},cols:2},ji[36295]={Type:Uint32Array,size:12,setter:function(e,t){return function(n){e.uniform3uiv(t,n)}},cols:3},ji[36296]={Type:Uint32Array,size:16,setter:function(e,t){return function(n){e.uniform4uiv(t,n)}},cols:4},ji[35670]={Type:Uint32Array,size:4,setter:qi,arraySetter:Yi},ji[35671]={Type:Uint32Array,size:8,setter:Ki,cols:2},ji[35672]={Type:Uint32Array,size:12,setter:Zi,cols:3},ji[35673]={Type:Uint32Array,size:16,setter:Ji,cols:4},ji[35674]={Type:Float32Array,size:32,setter:function(e,t){return function(n){e.uniformMatrix2fv(t,!1,n)}},rows:2,cols:2},ji[35675]={Type:Float32Array,size:48,setter:function(e,t){return function(n){e.uniformMatrix3fv(t,!1,n)}},rows:3,cols:3},ji[35676]={Type:Float32Array,size:64,setter:function(e,t){return function(n){e.uniformMatrix4fv(t,!1,n)}},rows:4,cols:4},ji[35685]={Type:Float32Array,size:32,setter:function(e,t){return function(n){e.uniformMatrix2x3fv(t,!1,n)}},rows:2,cols:3},ji[35686]={Type:Float32Array,size:32,setter:function(e,t){return function(n){e.uniformMatrix2x4fv(t,!1,n)}},rows:2,cols:4},ji[35687]={Type:Float32Array,size:48,setter:function(e,t){return function(n){e.uniformMatrix3x2fv(t,!1,n)}},rows:3,cols:2},ji[35688]={Type:Float32Array,size:48,setter:function(e,t){return function(n){e.uniformMatrix3x4fv(t,!1,n)}},rows:3,cols:4},ji[35689]={Type:Float32Array,size:64,setter:function(e,t){return function(n){e.uniformMatrix4x2fv(t,!1,n)}},rows:4,cols:2},ji[35690]={Type:Float32Array,size:64,setter:function(e,t){return function(n){e.uniformMatrix4x3fv(t,!1,n)}},rows:4,cols:3},ji[35678]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Hi},ji[35680]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Gi},ji[35679]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:ki},ji[35682]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Hi},ji[36289]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Wi},ji[36292]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Wi},ji[36293]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Gi},ji[36298]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Hi},ji[36299]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:ki},ji[36300]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Gi},ji[36303]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Wi},ji[36306]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Hi},ji[36307]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:ki},ji[36308]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Gi},ji[36311]={Type:null,size:0,setter:$i,arraySetter:Qi,bindPoint:Wi};const ia={};ia[5126]={size:4,setter:ea},ia[35664]={size:8,setter:ea},ia[35665]={size:12,setter:ea},ia[35666]={size:16,setter:ea},ia[Vi]={size:4,setter:ta},ia[35667]={size:8,setter:ta},ia[35668]={size:12,setter:ta},ia[35669]={size:16,setter:ta},ia[5125]={size:4,setter:na},ia[36294]={size:8,setter:na},ia[36295]={size:12,setter:na},ia[36296]={size:16,setter:na},ia[35670]={size:4,setter:ta},ia[35671]={size:8,setter:ta},ia[35672]={size:12,setter:ta},ia[35673]={size:16,setter:ta},ia[35674]={size:4,setter:ra,count:2},ia[35675]={size:9,setter:ra,count:3},ia[35676]={size:16,setter:ra,count:4};const aa=/ERROR:\s*\d+:(\d+)/gi,oa=/^[ \t]*\n/;function sa(e){let t=0;return oa.test(e)&&(t=1,e=e.replace(oa,"")),{lineOffset:t,shaderSource:e}}function la(e,t){return e.errorCallback(t),e.callback&&setTimeout((()=>{e.callback(`${t}\n${e.errors.join("\n")}`)})),null}function ca(e,t,n){let r,i,a;if("function"==typeof t&&(n=t,t=void 0),"function"==typeof e)n=e,e=void 0;else if(e&&!Array.isArray(e)){const t=e;n=t.errorCallback,e=t.attribLocations,r=t.transformFeedbackVaryings,i=t.transformFeedbackMode,a=t.callback}const o=n||_i,s=[],l={errorCallback(e,...t){s.push(e),o(e,...t)},transformFeedbackVaryings:r,transformFeedbackMode:i,callback:a,errors:s};{let n={};Array.isArray(e)?e.forEach((function(e,r){n[e]=t?t[r]:r})):n=e||{},l.attribLocations=n}return l}const ua=["VERTEX_SHADER","FRAGMENT_SHADER"],ha=(e=0)=>new Promise((t=>setTimeout(t,e)));function da(e,t,n){const r=e.createProgram(),{attribLocations:i,transformFeedbackVaryings:a,transformFeedbackMode:o}=ca(n);for(let n=0;n<t.length;++n){let i=t[n];if("string"==typeof i){const t=xi(i),a=t?t.text:i;let o=e[ua[n]];t&&t.type&&(o=((s=t.type).indexOf("frag")>=0?Pi:s.indexOf("vert")>=0?Ci:void 0)||o),i=e.createShader(o),e.shaderSource(i,sa(a).shaderSource),e.compileShader(i),e.attachShader(r,i)}}var s;Object.entries(i).forEach((([t,n])=>e.bindAttribLocation(r,n,t)));{let t=a;t&&(t.attribs&&(t=t.attribs),Array.isArray(t)||(t=Object.keys(t)),e.transformFeedbackVaryings(r,t,o||Li))}return e.linkProgram(r),r}function fa(e,t,n,r,i){const a=ca(n,r,i),o=new Set(t),s=da(e,t,a);function l(e,t){const n=va(e,t,a.errorCallback);return n&&function(e,t,n){const r=e.getAttachedShaders(t);for(const t of r)n.has(t)&&e.deleteShader(t);e.deleteProgram(t)}(e,t,o),n}if(!a.callback)return l(e,s)?void 0:s;_a(e,s).then((()=>{const t=l(e,s);a.callback(t,t?void 0:s)}))}function pa(e){return function(t,n,...r){return new Promise(((i,a)=>{const o=ca(...r);o.callback=(e,t)=>{e?a(e):i(t)},e(t,n,o)}))}}const ma=pa(fa),ga=pa(ja);async function _a(e,t){const n=e.getExtension("KHR_parallel_shader_compile"),r=n?(e,t)=>e.getProgramParameter(t,n.COMPLETION_STATUS_KHR):()=>!0;let i=0;do{await ha(i),i=1e3/60}while(!r(e,t))}function va(e,t,n){if(n=n||_i,!e.getProgramParameter(t,Ri)){const r=e.getProgramInfoLog(t);return n(`Error in program linking: ${r}`),`${r}\n${e.getAttachedShaders(t).map((t=>function(e,t,n,r){if(r=r||_i,!e.getShaderParameter(n,wi)){const i=e.getShaderInfoLog(n),{lineOffset:a,shaderSource:o}=sa(e.getShaderSource(n)),s=`${function(e,t="",n=0){const r=[...t.matchAll(aa)],i=new Map(r.map(((e,n)=>{const i=parseInt(e[1]),a=r[n+1],o=a?a.index:t.length;return[i-1,t.substring(e.index,o)]})));return e.split("\n").map(((e,t)=>{const r=i.get(t);return`${t+1+n}: ${e}${r?`\n\n^^^ ${r}`:""}`})).join("\n")}(o,i,a)}\nError compiling ${yt(e,t)}: ${i}`;return r(s),s}return""}(e,e.getShaderParameter(t,e.SHADER_TYPE),t,n))).filter((e=>e)).join("\n")}`}}function xa(e,t,n,r,i){const a=ca(n,r,i),o=[];for(const e of t){const t=xi(e);if(!t)return la(a,`unknown script element: ${e}`);o.push(t.text)}return fa(e,o,a)}function ya(e,t,n,r,i){return fa(e,t,n,r,i)}function Ma(e){const t=e.name;return t.startsWith("gl_")||t.startsWith("webgl_")}const ba=/(\.|\[|]|\w+)/g,Ea=e=>e>="0"&&e<="9";function Sa(e,t,n,r){const i=e.split(ba).filter((e=>""!==e));let a=0,o="";for(;;){const e=i[a++];o+=e;const s=Ea(e[0]),l=s?parseInt(e):e;if(s&&(o+=i[a++]),a===i.length){n[l]=t;break}{const e=i[a++],t="["===e,s=n[l]||(t?[]:{});n[l]=s,n=s,r[o]=r[o]||function(e){return function(t){Oa(e,t)}}(s),o+=e}}}function Ta(e,t){let n=0;function r(t,r,i){const a=r.name.endsWith("[0]"),o=r.type,s=ji[o];if(!s)throw new Error(`unknown type: 0x${o.toString(16)}`);let l;if(s.bindPoint){const t=n;n+=r.size,l=a?s.arraySetter(e,o,t,i,r.size):s.setter(e,o,t,i,r.size)}else l=s.arraySetter&&a?s.arraySetter(e,i):s.setter(e,i);return l.location=i,l}const i={},a={},o=e.getProgramParameter(t,Ui);for(let n=0;n<o;++n){const o=e.getActiveUniform(t,n);if(Ma(o))continue;let s=o.name;s.endsWith("[0]")&&(s=s.substr(0,s.length-3));const l=e.getUniformLocation(t,o.name);if(l){const e=r(0,o,l);i[s]=e,Sa(s,e,a,i)}}return i}function Aa(e,t){const n={},r=e.getProgramParameter(t,Di);for(let i=0;i<r;++i){const r=e.getTransformFeedbackVarying(t,i);n[r.name]={index:i,type:r.type,size:r.size}}return n}function wa(e,t,n){t.transformFeedbackInfo&&(t=t.transformFeedbackInfo),n.attribs&&(n=n.attribs);for(const r in n){const i=t[r];if(i){const t=n[r];t.offset?e.bindBufferRange(Ti,i.index,t.buffer,t.offset,t.size):e.bindBufferBase(Ti,i.index,t.buffer)}}}function Ra(e,t,n){const r=e.createTransformFeedback();return e.bindTransformFeedback(Ai,r),e.useProgram(t.program),wa(e,t,n),e.bindTransformFeedback(Ai,null),r}function Pa(e,t){const n=e.getProgramParameter(t,Ui),r=[],i=[];for(let a=0;a<n;++a){i.push(a),r.push({});const n=e.getActiveUniform(t,a);r[a].name=n.name}[["UNIFORM_TYPE","type"],["UNIFORM_SIZE","size"],["UNIFORM_BLOCK_INDEX","blockNdx"],["UNIFORM_OFFSET","offset"]].forEach((function(n){const a=n[0],o=n[1];e.getActiveUniforms(t,i,e[a]).forEach((function(e,t){r[t][o]=e}))}));const a={},o=e.getProgramParameter(t,Ni);for(let n=0;n<o;++n){const r=e.getActiveUniformBlockName(t,n),i={index:e.getUniformBlockIndex(t,r),usedByVertexShader:e.getActiveUniformBlockParameter(t,n,Fi),usedByFragmentShader:e.getActiveUniformBlockParameter(t,n,Oi),size:e.getActiveUniformBlockParameter(t,n,Bi),uniformIndices:e.getActiveUniformBlockParameter(t,n,zi)};i.used=i.usedByVertexShader||i.usedByFragmentShader,a[r]=i}return{blockSpecs:a,uniformData:r}}const Ca=/\[\d+\]\.$/,La=(e,t)=>((e+(t-1))/t|0)*t;function Ua(e,t,n,r){const i=n.blockSpecs,a=n.uniformData,o=i[r];if(!o)return vi("no uniform block object named:",r),{name:r,uniforms:{}};const s=new ArrayBuffer(o.size),l=e.createBuffer(),c=o.index;e.bindBuffer(Si,l),e.uniformBlockBinding(t,o.index,c);let u=r+".";Ca.test(u)&&(u=u.replace(Ca,"."));const h={},d={},f={};return o.uniformIndices.forEach((function(e){const t=a[e];let n=t.name;n.startsWith(u)&&(n=n.substr(u.length));const r=n.endsWith("[0]");r&&(n=n.substr(0,n.length-3));const i=ji[t.type],o=i.Type,l=r?La(i.size,16)*t.size:i.size*t.size,c=new o(s,t.offset,l/o.BYTES_PER_ELEMENT);h[n]=c;const p=function(e,t,n,r){if(t||n){r=r||1;const t=e.length/4;return function(n){let i=0,a=0;for(let o=0;o<t;++o){for(let t=0;t<r;++t)e[i++]=n[a++];i+=4-r}}}return function(t){t.length?e.set(t):e[0]=t}}(c,r,i.rows,i.cols);d[n]=p,Sa(n,p,f,d)})),{name:r,array:s,asFloat:new Float32Array(s),buffer:l,uniforms:h,setters:d}}function Ia(e,t,n){return Ua(e,t.program,t.uniformBlockSpec,n)}function Da(e,t,n){const r=(t.uniformBlockSpec||t).blockSpecs[n.name];if(r){const t=r.index;return e.bindBufferRange(Si,t,n.buffer,n.offset||0,n.array.byteLength),!0}return!1}function Na(e,t,n){Da(e,t,n)&&e.bufferData(Si,n.array,Mi)}function Fa(e,t){const n=e.setters;for(const e in t){const r=n[e];r&&r(t[e])}}function Oa(e,t){for(const n in t){const r=e[n];"function"==typeof r?r(t[n]):Oa(e[n],t[n])}}function Ba(e,...t){const n=e.uniformSetters||e,r=t.length;for(let e=0;e<r;++e){const r=t[e];if(Array.isArray(r)){const e=r.length;for(let t=0;t<e;++t)Ba(n,r[t])}else for(const e in r){const t=n[e];t&&t(r[e])}}}const za=Ba;function Va(e,t){const n={},r=e.getProgramParameter(t,Ii);for(let i=0;i<r;++i){const r=e.getActiveAttrib(t,i);if(Ma(r))continue;const a=e.getAttribLocation(t,r.name),o=ia[r.type],s=o.setter(e,a,o);s.location=a,n[r.name]=s}return n}function Ha(e,t){for(const n in t){const r=e[n];r&&r(t[n])}}function Ga(e,t,n){n.vertexArrayObject?e.bindVertexArray(n.vertexArrayObject):(Ha(t.attribSetters||t,n.attribs),n.indices&&e.bindBuffer(Ei,n.indices))}function ka(e,t){const n={program:t,uniformSetters:Ta(e,t),attribSetters:Va(e,t)};return vt(e)&&(n.uniformBlockSpec=Pa(e,t),n.transformFeedbackInfo=Aa(e,t)),n}const Wa=/\s|{|}|;/;function ja(e,t,n,r,i){const a=ca(n,r,i),o=[];if(t=t.map((function(e){if(!Wa.test(e)){const t=xi(e);if(t)e=t.text;else{const t=`no element with id: ${e}`;a.errorCallback(t),o.push(t)}}return e})),o.length)return la(a,"");const s=a.callback;s&&(a.callback=(t,n)=>{s(t,t?void 0:ka(e,n))});const l=ya(e,t,a);return l?ka(e,l):null}function Xa(e,t,n,r,i){for(const[a,o]of Object.entries(t)){const s={...i},l=n[a];Array.isArray(l)||Object.assign(s,l);const c=va(e,o,s.errorCallback);if(c){for(const n of Object.values(t)){const t=e.getAttachedShaders(n);e.deleteProgram(n);for(const n of t)r.has(n)||e.deleteShader(n)}return c}}}function qa(e,t,n={}){const r=new Set,i=Object.fromEntries(Object.entries(t).map((([t,i])=>{const a={...n},o=Array.isArray(i)?i:i.shaders;return Array.isArray(i)||Object.assign(a,i),o.forEach(r.add,r),[t,da(e,o,a)]})));if(!n.callback)return Xa(e,i,t,r,n)?void 0:i;(async function(e,t){for(const n of Object.values(t))await _a(e,n)})(e,i).then((()=>{const a=Xa(e,i,t,r,n);n.callback(a,a?void 0:i)}))}function Ya(e,t,n){function r(e,t){return Object.fromEntries(Object.entries(t).map((([t,n])=>[t,ka(e,n)])))}const i=(n=ca(n)).callback;i&&(n.callback=(t,n)=>{i(t,t?void 0:r(e,n))});const a=qa(e,t,n);if(!i&&a)return r(e,a)}const Ka=pa(qa),Za=pa(Ya);var Ja=Object.freeze({__proto__:null,createAttributeSetters:Va,createProgram:fa,createProgramAsync:ma,createPrograms:qa,createProgramsAsync:Ka,createProgramFromScripts:xa,createProgramFromSources:ya,createProgramInfo:ja,createProgramInfoAsync:ga,createProgramInfos:Ya,createProgramInfosAsync:Za,createProgramInfoFromProgram:ka,createUniformSetters:Ta,createUniformBlockSpecFromProgram:Pa,createUniformBlockInfoFromProgram:Ua,createUniformBlockInfo:Ia,createTransformFeedback:Ra,createTransformFeedbackInfo:Aa,bindTransformFeedbackInfo:wa,setAttributes:Ha,setBuffersAndAttributes:Ga,setUniforms:Ba,setUniformsAndBindTextures:za,setUniformBlock:Na,setBlockUniforms:Fa,bindUniformBlock:Da});const $a=4,Qa=5123;function eo(e,t,n,r,i,a){n=void 0===n?$a:n;const o=t.indices,s=t.elementType,l=void 0===r?t.numElements:r;i=void 0===i?0:i,s||o?void 0!==a?e.drawElementsInstanced(n,l,void 0===s?Qa:t.elementType,i,a):e.drawElements(n,l,void 0===s?Qa:t.elementType,i):void 0!==a?e.drawArraysInstanced(n,i,l,a):e.drawArrays(n,i,l)}function to(e,t){let n=null,r=null;t.forEach((function(t){if(!1===t.active)return;const i=t.programInfo,a=t.vertexArrayInfo||t.bufferInfo;let o=!1;const s=void 0===t.type?$a:t.type;i!==n&&(n=i,e.useProgram(i.program),o=!0),(o||a!==r)&&(r&&r.vertexArrayObject&&!a.vertexArrayObject&&e.bindVertexArray(null),r=a,Ga(e,i,a)),Ba(i,t.uniforms),eo(e,a,s,t.count,t.offset,t.instanceCount)})),r&&r.vertexArrayObject&&e.bindVertexArray(null)}var no=Object.freeze({__proto__:null,drawBufferInfo:eo,drawObjectList:to});const ro=36160,io=36161,ao=3553,oo=36064,so=36096,lo=33306,co=33071,uo=9729,ho=[{format:6408,type:5121,min:uo,wrap:co},{format:34041}],fo={};fo[34041]=lo,fo[6401]=36128,fo[36168]=36128,fo[6402]=so,fo[33189]=so,fo[33190]=so,fo[36012]=so,fo[35056]=lo,fo[36013]=lo;const po={32854:!0,32855:!0,36194:!0,34041:!0,33189:!0,6401:!0,36168:!0},mo=32;function go(e,t,n,r){const i=ro,a=e.createFramebuffer();e.bindFramebuffer(i,a),n=n||e.drawingBufferWidth,r=r||e.drawingBufferHeight;const o=[],s={framebuffer:a,attachments:[],width:n,height:r};return(t=t||ho).forEach((function(t,a){let l=t.attachment;const c=t.samples,u=t.format;let h=t.attachmentPoint||function(e,t){return fo[e]||fo[t]}(u,t.internalFormat);if(h||(h=oo+a),function(e){return e>=oo&&e<oo+mo}(h)&&o.push(h),!l)if(void 0!==c||function(e){return po[e]}(u))l=e.createRenderbuffer(),e.bindRenderbuffer(io,l),c>1?e.renderbufferStorageMultisample(io,c,u,n,r):e.renderbufferStorage(io,u,n,r);else{const i=Object.assign({},t);i.width=n,i.height=r,void 0===i.auto&&(i.auto=!1,i.min=i.min||i.minMag||uo,i.mag=i.mag||i.minMag||uo,i.wrapS=i.wrapS||i.wrap||co,i.wrapT=i.wrapT||i.wrap||co),l=fi(e,i)}if(z(0,l))e.framebufferRenderbuffer(i,h,io,l);else{if(!V(0,l))throw new Error("unknown attachment type");void 0!==t.layer?e.framebufferTextureLayer(i,h,l,t.level||0,t.layer):e.framebufferTexture2D(i,h,t.target||ao,l,t.level||0)}s.attachments.push(l)})),e.drawBuffers&&e.drawBuffers(o),s}function _o(e,t,n,r,i){r=r||e.drawingBufferWidth,i=i||e.drawingBufferHeight,t.width=r,t.height=i,(n=n||ho).forEach((function(n,a){const o=t.attachments[a],s=n.format,l=n.samples;if(void 0!==l||z(0,o))e.bindRenderbuffer(io,o),l>1?e.renderbufferStorageMultisample(io,l,s,r,i):e.renderbufferStorage(io,s,r,i);else{if(!V(0,o))throw new Error("unknown attachment type");pi(e,o,n,r,i)}}))}function vo(e,t,n){n=n||ro,t?(e.bindFramebuffer(n,t.framebuffer),e.viewport(0,0,t.width,t.height)):(e.bindFramebuffer(n,null),e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight))}var xo=Object.freeze({__proto__:null,bindFramebufferInfo:vo,createFramebufferInfo:go,resizeFramebufferInfo:_o});const yo=34963;function Mo(e,t,n){const r=e.createVertexArray();return e.bindVertexArray(r),t.length||(t=[t]),t.forEach((function(t){Ga(e,t,n)})),e.bindVertexArray(null),{numElements:n.numElements,elementType:n.elementType,vertexArrayObject:r}}function bo(e,t,n,r){const i=e.createVertexArray();return e.bindVertexArray(i),Ha(t,n),r&&e.bindBuffer(yo,r),e.bindVertexArray(null),i}function Eo(e,t,n){return bo(e,t.attribSetters||t,n.attribs,n.indices)}var So=Object.freeze({__proto__:null,createVertexArrayInfo:Mo,createVAOAndSetAttributes:bo,createVAOFromBufferInfo:Eo});const To={addExtensionsToContext:!0};function Ao(e){D(e,To),ee(e),qr(e)}const wo=/^(.*?)_/;function Ro(e,t){yt(e,0);const n=e.getExtension(t);if(n){const r={},i=wo.exec(t)[1],a="_"+i;for(const t in n){const o=n[t],s="function"==typeof o,l=s?i:a;let c=t;t.endsWith(l)&&(c=t.substring(0,t.length-l.length)),void 0!==e[c]?s||e[c]===o||F(c,e[c],o,t):s?e[c]=function(e){return function(){return e.apply(n,arguments)}}(o):(e[c]=o,r[c]=o)}r.constructor={name:n.constructor.name},yt(r,0)}return n}const Po=["ANGLE_instanced_arrays","EXT_blend_minmax","EXT_color_buffer_float","EXT_color_buffer_half_float","EXT_disjoint_timer_query","EXT_disjoint_timer_query_webgl2","EXT_frag_depth","EXT_sRGB","EXT_shader_texture_lod","EXT_texture_filter_anisotropic","OES_element_index_uint","OES_standard_derivatives","OES_texture_float","OES_texture_float_linear","OES_texture_half_float","OES_texture_half_float_linear","OES_vertex_array_object","WEBGL_color_buffer_float","WEBGL_compressed_texture_atc","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","WEBGL_depth_texture","WEBGL_draw_buffers"];function Co(e){for(let t=0;t<Po.length;++t)Ro(e,Po[t])}function Lo(e,t){const n=function(e,t){const n=["webgl","experimental-webgl"];let r=null;for(let i=0;i<n.length;++i)if(r=e.getContext(n[i],t),r){To.addExtensionsToContext&&Co(r);break}return r}(e,t);return n}function Uo(e,t){const n=function(e,t){const n=["webgl2","webgl","experimental-webgl"];let r=null;for(let i=0;i<n.length;++i)if(r=e.getContext(n[i],t),r){To.addExtensionsToContext&&Co(r);break}return r}(e,t);return n}function Io(e,t){t=t||1,t=Math.max(0,t);const n=e.clientWidth*t|0,r=e.clientHeight*t|0;return(e.width!==n||e.height!==r)&&(e.width=n,e.height=r,!0)}},477:(e,t,n)=>{n.d(t,{F5T:()=>fn,FM8:()=>_e,Ilk:()=>un,KI_:()=>q,Kj0:()=>Xn,Pa4:()=>je,UY4:()=>io,Wl3:()=>s,ZAu:()=>Va,Zp0:()=>Uo,a$l:()=>yn,aNw:()=>Ao,dpR:()=>Lo,ejS:()=>ro,hH6:()=>Po,nls:()=>Ya,rpg:()=>M,tEQ:()=>To,u9r:()=>Rn,woe:()=>co,xoR:()=>ho});const r="158",i=1,a=2,o=3,s=0,l=100,c=0,u=1,h=2,d=0,f=1,p=2,m=3,g=4,_=5,v=301,x=302,y=306,M=1e3,b=1001,E=1002,S=1003,T=1005,A=1006,w=1008,R=1009,P=1012,C=1014,L=1015,U=1016,I=1020,D=1023,N=1026,F=1027,O=33776,B=33777,z=33778,V=33779,H=36492,G=2300,k=2301,W=2302,j=3001,X="",q="srgb",Y="srgb-linear",K="display-p3",Z="display-p3-linear",J="linear",$="srgb",Q="rec709",ee="p3",te=7680,ne="300 es",re=1035,ie=2e3,ae=2001;class oe{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,r=n.length;t<r;t++)n[t].call(this,e);e.target=null}}}const se=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],le=Math.PI/180,ce=180/Math.PI;function ue(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(se[255&e]+se[e>>8&255]+se[e>>16&255]+se[e>>24&255]+"-"+se[255&t]+se[t>>8&255]+"-"+se[t>>16&15|64]+se[t>>24&255]+"-"+se[63&n|128]+se[n>>8&255]+"-"+se[n>>16&255]+se[n>>24&255]+se[255&r]+se[r>>8&255]+se[r>>16&255]+se[r>>24&255]).toLowerCase()}function he(e,t,n){return Math.max(t,Math.min(n,e))}function de(e,t,n){return(1-n)*e+n*t}function fe(e){return 0==(e&e-1)&&0!==e}function pe(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function me(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function ge(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}class _e{constructor(e=0,t=0){_e.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(he(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ve{constructor(e,t,n,r,i,a,o,s,l){ve.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,n,r,i,a,o,s,l)}set(e,t,n,r,i,a,o,s,l){const c=this.elements;return c[0]=e,c[1]=r,c[2]=o,c[3]=t,c[4]=i,c[5]=s,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[3],s=n[6],l=n[1],c=n[4],u=n[7],h=n[2],d=n[5],f=n[8],p=r[0],m=r[3],g=r[6],_=r[1],v=r[4],x=r[7],y=r[2],M=r[5],b=r[8];return i[0]=a*p+o*_+s*y,i[3]=a*m+o*v+s*M,i[6]=a*g+o*x+s*b,i[1]=l*p+c*_+u*y,i[4]=l*m+c*v+u*M,i[7]=l*g+c*x+u*b,i[2]=h*p+d*_+f*y,i[5]=h*m+d*v+f*M,i[8]=h*g+d*x+f*b,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8];return t*a*c-t*o*l-n*i*c+n*o*s+r*i*l-r*a*s}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8],u=c*a-o*l,h=o*s-c*i,d=l*i-a*s,f=t*u+n*h+r*d;if(0===f)return this.set(0,0,0,0,0,0,0,0,0);const p=1/f;return e[0]=u*p,e[1]=(r*l-c*n)*p,e[2]=(o*n-r*a)*p,e[3]=h*p,e[4]=(c*t-r*s)*p,e[5]=(r*i-o*t)*p,e[6]=d*p,e[7]=(n*s-l*t)*p,e[8]=(a*t-n*i)*p,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,i,a,o){const s=Math.cos(i),l=Math.sin(i);return this.set(n*s,n*l,-n*(s*a+l*o)+a+e,-r*l,r*s,-r*(-l*a+s*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(xe.makeScale(e,t)),this}rotate(e){return this.premultiply(xe.makeRotation(-e)),this}translate(e,t){return this.premultiply(xe.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}const xe=new ve;function ye(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function Me(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function be(){const e=Me("canvas");return e.style.display="block",e}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const Ee={};function Se(e){e in Ee||(Ee[e]=!0,console.warn(e))}const Te=(new ve).set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Ae=(new ve).set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),we={[Y]:{transfer:J,primaries:Q,toReference:e=>e,fromReference:e=>e},[q]:{transfer:$,primaries:Q,toReference:e=>e.convertSRGBToLinear(),fromReference:e=>e.convertLinearToSRGB()},[Z]:{transfer:J,primaries:ee,toReference:e=>e.applyMatrix3(Ae),fromReference:e=>e.applyMatrix3(Te)},[K]:{transfer:$,primaries:ee,toReference:e=>e.convertSRGBToLinear().applyMatrix3(Ae),fromReference:e=>e.applyMatrix3(Te).convertLinearToSRGB()}},Re=new Set([Y,Z]),Pe={enabled:!0,_workingColorSpace:Y,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(e){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!e},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(e){if(!Re.has(e))throw new Error(`Unsupported working color space, "${e}".`);this._workingColorSpace=e},convert:function(e,t,n){if(!1===this.enabled||t===n||!t||!n)return e;const r=we[t].toReference;return(0,we[n].fromReference)(r(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this._workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this._workingColorSpace)},getPrimaries:function(e){return we[e].primaries},getTransfer:function(e){return e===X?J:we[e].transfer}};function Ce(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Le(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}let Ue;class Ie{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Ue&&(Ue=Me("canvas")),Ue.width=e.width,Ue.height=e.height;const n=Ue.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ue}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=Me("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),i=r.data;for(let e=0;e<i.length;e++)i[e]=255*Ce(i[e]/255);return n.putImageData(r,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*Ce(t[e]/255)):t[e]=Ce(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let De=0;class Ne{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:De++}),this.uuid=ue(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(null!==r){let e;if(Array.isArray(r)){e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(Fe(r[t].image)):e.push(Fe(r[t]))}else e=Fe(r);n.url=e}return t||(e.images[this.uuid]=n),n}}function Fe(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Ie.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Oe=0;class Be extends oe{constructor(e=Be.DEFAULT_IMAGE,t=Be.DEFAULT_MAPPING,n=1001,r=1001,i=1006,a=1008,o=1023,s=1009,l=Be.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Oe++}),this.uuid=ue(),this.name="",this.source=new Ne(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=s,this.offset=new _e(0,0),this.repeat=new _e(1,1),this.center=new _e(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ve,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof c?this.colorSpace=c:(Se("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=c===j?q:X),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case M:e.x=e.x-Math.floor(e.x);break;case b:e.x=e.x<0?0:1;break;case E:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case M:e.y=e.y-Math.floor(e.y);break;case b:e.y=e.y<0?0:1;break;case E:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Se("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===q?j:3e3}set encoding(e){Se("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===j?q:X}}Be.DEFAULT_IMAGE=null,Be.DEFAULT_MAPPING=300,Be.DEFAULT_ANISOTROPY=1;class ze{constructor(e=0,t=0,n=0,r=1){ze.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,i;const a=.01,o=.1,s=e.elements,l=s[0],c=s[4],u=s[8],h=s[1],d=s[5],f=s[9],p=s[2],m=s[6],g=s[10];if(Math.abs(c-h)<a&&Math.abs(u-p)<a&&Math.abs(f-m)<a){if(Math.abs(c+h)<o&&Math.abs(u+p)<o&&Math.abs(f+m)<o&&Math.abs(l+d+g-3)<o)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,s=(d+1)/2,_=(g+1)/2,v=(c+h)/4,x=(u+p)/4,y=(f+m)/4;return e>s&&e>_?e<a?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(e),r=v/n,i=x/n):s>_?s<a?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(s),n=v/r,i=y/r):_<a?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(_),n=x/i,r=y/i),this.set(n,r,i,t),this}let _=Math.sqrt((m-f)*(m-f)+(u-p)*(u-p)+(h-c)*(h-c));return Math.abs(_)<.001&&(_=1),this.x=(m-f)/_,this.y=(u-p)/_,this.z=(h-c)/_,this.w=Math.acos((l+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ve extends oe{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new ze(0,0,e,t),this.scissorTest=!1,this.viewport=new ze(0,0,e,t);const r={width:e,height:t,depth:1};void 0!==n.encoding&&(Se("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===j?q:X),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:A,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new Be(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Ne(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class He extends Ve{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Ge extends Be{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=S,this.minFilter=S,this.wrapR=b,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ke extends Be{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=S,this.minFilter=S,this.wrapR=b,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class We{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,i,a,o){let s=n[r+0],l=n[r+1],c=n[r+2],u=n[r+3];const h=i[a+0],d=i[a+1],f=i[a+2],p=i[a+3];if(0===o)return e[t+0]=s,e[t+1]=l,e[t+2]=c,void(e[t+3]=u);if(1===o)return e[t+0]=h,e[t+1]=d,e[t+2]=f,void(e[t+3]=p);if(u!==p||s!==h||l!==d||c!==f){let e=1-o;const t=s*h+l*d+c*f+u*p,n=t>=0?1:-1,r=1-t*t;if(r>Number.EPSILON){const i=Math.sqrt(r),a=Math.atan2(i,t*n);e=Math.sin(e*a)/i,o=Math.sin(o*a)/i}const i=o*n;if(s=s*e+h*i,l=l*e+d*i,c=c*e+f*i,u=u*e+p*i,e===1-o){const e=1/Math.sqrt(s*s+l*l+c*c+u*u);s*=e,l*=e,c*=e,u*=e}}e[t]=s,e[t+1]=l,e[t+2]=c,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,r,i,a){const o=n[r],s=n[r+1],l=n[r+2],c=n[r+3],u=i[a],h=i[a+1],d=i[a+2],f=i[a+3];return e[t]=o*f+c*u+s*d-l*h,e[t+1]=s*f+c*h+l*u-o*d,e[t+2]=l*f+c*d+o*h-s*u,e[t+3]=c*f-o*u-s*h-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,r=e._y,i=e._z,a=e._order,o=Math.cos,s=Math.sin,l=o(n/2),c=o(r/2),u=o(i/2),h=s(n/2),d=s(r/2),f=s(i/2);switch(a){case"XYZ":this._x=h*c*u+l*d*f,this._y=l*d*u-h*c*f,this._z=l*c*f+h*d*u,this._w=l*c*u-h*d*f;break;case"YXZ":this._x=h*c*u+l*d*f,this._y=l*d*u-h*c*f,this._z=l*c*f-h*d*u,this._w=l*c*u+h*d*f;break;case"ZXY":this._x=h*c*u-l*d*f,this._y=l*d*u+h*c*f,this._z=l*c*f+h*d*u,this._w=l*c*u-h*d*f;break;case"ZYX":this._x=h*c*u-l*d*f,this._y=l*d*u+h*c*f,this._z=l*c*f-h*d*u,this._w=l*c*u+h*d*f;break;case"YZX":this._x=h*c*u+l*d*f,this._y=l*d*u+h*c*f,this._z=l*c*f-h*d*u,this._w=l*c*u-h*d*f;break;case"XZY":this._x=h*c*u-l*d*f,this._y=l*d*u-h*c*f,this._z=l*c*f+h*d*u,this._w=l*c*u+h*d*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],i=t[8],a=t[1],o=t[5],s=t[9],l=t[2],c=t[6],u=t[10],h=n+o+u;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(c-s)*e,this._y=(i-l)*e,this._z=(a-r)*e}else if(n>o&&n>u){const e=2*Math.sqrt(1+n-o-u);this._w=(c-s)/e,this._x=.25*e,this._y=(r+a)/e,this._z=(i+l)/e}else if(o>u){const e=2*Math.sqrt(1+o-n-u);this._w=(i-l)/e,this._x=(r+a)/e,this._y=.25*e,this._z=(s+c)/e}else{const e=2*Math.sqrt(1+u-n-o);this._w=(a-r)/e,this._x=(i+l)/e,this._y=(s+c)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(he(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,i=e._z,a=e._w,o=t._x,s=t._y,l=t._z,c=t._w;return this._x=n*c+a*o+r*l-i*s,this._y=r*c+a*s+i*o-n*l,this._z=i*c+a*l+n*s-r*o,this._w=a*c-n*o-r*s-i*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,r=this._y,i=this._z,a=this._w;let o=a*e._w+n*e._x+r*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;const s=1-o*o;if(s<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*r+t*this._y,this._z=e*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(s),c=Math.atan2(l,o),u=Math.sin((1-t)*c)/l,h=Math.sin(t*c)/l;return this._w=a*u+this._w*h,this._x=n*u+this._x*h,this._y=r*u+this._y*h,this._z=i*u+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(i),n*Math.cos(i),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class je{constructor(e=0,t=0,n=0){je.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(qe.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(qe.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,o=e.z,s=e.w,l=2*(a*r-o*n),c=2*(o*t-i*r),u=2*(i*n-a*t);return this.x=t+s*l+a*u-o*c,this.y=n+s*c+o*l-i*u,this.z=r+s*u+i*c-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Xe.copy(this).projectOnVector(e),this.sub(Xe)}reflect(e){return this.sub(Xe.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(he(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Xe=new je,qe=new We;class Ye{constructor(e=new je(1/0,1/0,1/0),t=new je(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Ze.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Ze.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ze.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n){const r=n.getAttribute("position");if(!0===t&&void 0!==r&&!0!==e.isInstancedMesh)for(let t=0,n=r.count;t<n;t++)!0===e.isMesh?e.getVertexPosition(t,Ze):Ze.fromBufferAttribute(r,t),Ze.applyMatrix4(e.matrixWorld),this.expandByPoint(Ze);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),Je.copy(e.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),Je.copy(n.boundingBox)),Je.applyMatrix4(e.matrixWorld),this.union(Je)}const r=e.children;for(let e=0,n=r.length;e<n;e++)this.expandByObject(r[e],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ze),Ze.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(it),at.subVectors(this.max,it),$e.subVectors(e.a,it),Qe.subVectors(e.b,it),et.subVectors(e.c,it),tt.subVectors(Qe,$e),nt.subVectors(et,Qe),rt.subVectors($e,et);let t=[0,-tt.z,tt.y,0,-nt.z,nt.y,0,-rt.z,rt.y,tt.z,0,-tt.x,nt.z,0,-nt.x,rt.z,0,-rt.x,-tt.y,tt.x,0,-nt.y,nt.x,0,-rt.y,rt.x,0];return!!lt(t,$e,Qe,et,at)&&(t=[1,0,0,0,1,0,0,0,1],!!lt(t,$e,Qe,et,at)&&(ot.crossVectors(tt,nt),t=[ot.x,ot.y,ot.z],lt(t,$e,Qe,et,at)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ze).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(Ze).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Ke[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ke[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ke[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ke[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ke[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ke[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ke[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ke[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ke)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ke=[new je,new je,new je,new je,new je,new je,new je,new je],Ze=new je,Je=new Ye,$e=new je,Qe=new je,et=new je,tt=new je,nt=new je,rt=new je,it=new je,at=new je,ot=new je,st=new je;function lt(e,t,n,r,i){for(let a=0,o=e.length-3;a<=o;a+=3){st.fromArray(e,a);const o=i.x*Math.abs(st.x)+i.y*Math.abs(st.y)+i.z*Math.abs(st.z),s=t.dot(st),l=n.dot(st),c=r.dot(st);if(Math.max(-Math.max(s,l,c),Math.min(s,l,c))>o)return!1}return!0}const ct=new Ye,ut=new je,ht=new je;class dt{constructor(e=new je,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):ct.setFromPoints(e).getCenter(n);let r=0;for(let t=0,i=e.length;t<i;t++)r=Math.max(r,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ut.subVectors(e,this.center);const t=ut.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.addScaledVector(ut,n/e),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(ht.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ut.copy(e.center).add(ht)),this.expandByPoint(ut.copy(e.center).sub(ht))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const ft=new je,pt=new je,mt=new je,gt=new je,_t=new je,vt=new je,xt=new je;class yt{constructor(e=new je,t=new je(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ft)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ft.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ft.copy(this.origin).addScaledVector(this.direction,t),ft.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){pt.copy(e).add(t).multiplyScalar(.5),mt.copy(t).sub(e).normalize(),gt.copy(this.origin).sub(pt);const i=.5*e.distanceTo(t),a=-this.direction.dot(mt),o=gt.dot(this.direction),s=-gt.dot(mt),l=gt.lengthSq(),c=Math.abs(1-a*a);let u,h,d,f;if(c>0)if(u=a*s-o,h=a*o-s,f=i*c,u>=0)if(h>=-f)if(h<=f){const e=1/c;u*=e,h*=e,d=u*(u+a*h+2*o)+h*(a*u+h+2*s)+l}else h=i,u=Math.max(0,-(a*h+o)),d=-u*u+h*(h+2*s)+l;else h=-i,u=Math.max(0,-(a*h+o)),d=-u*u+h*(h+2*s)+l;else h<=-f?(u=Math.max(0,-(-a*i+o)),h=u>0?-i:Math.min(Math.max(-i,-s),i),d=-u*u+h*(h+2*s)+l):h<=f?(u=0,h=Math.min(Math.max(-i,-s),i),d=h*(h+2*s)+l):(u=Math.max(0,-(a*i+o)),h=u>0?i:Math.min(Math.max(-i,-s),i),d=-u*u+h*(h+2*s)+l);else h=a>0?-i:i,u=Math.max(0,-(a*h+o)),d=-u*u+h*(h+2*s)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),r&&r.copy(pt).addScaledVector(mt,h),d}intersectSphere(e,t){ft.subVectors(e.center,this.origin);const n=ft.dot(this.direction),r=ft.dot(ft)-n*n,i=e.radius*e.radius;if(r>i)return null;const a=Math.sqrt(i-r),o=n-a,s=n+a;return s<0?null:o<0?this.at(s,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,i,a,o,s;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,r=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,r=(e.min.x-h.x)*l),c>=0?(i=(e.min.y-h.y)*c,a=(e.max.y-h.y)*c):(i=(e.max.y-h.y)*c,a=(e.min.y-h.y)*c),n>a||i>r?null:((i>n||isNaN(n))&&(n=i),(a<r||isNaN(r))&&(r=a),u>=0?(o=(e.min.z-h.z)*u,s=(e.max.z-h.z)*u):(o=(e.max.z-h.z)*u,s=(e.min.z-h.z)*u),n>s||o>r?null:((o>n||n!=n)&&(n=o),(s<r||r!=r)&&(r=s),r<0?null:this.at(n>=0?n:r,t)))}intersectsBox(e){return null!==this.intersectBox(e,ft)}intersectTriangle(e,t,n,r,i){_t.subVectors(t,e),vt.subVectors(n,e),xt.crossVectors(_t,vt);let a,o=this.direction.dot(xt);if(o>0){if(r)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}gt.subVectors(this.origin,e);const s=a*this.direction.dot(vt.crossVectors(gt,vt));if(s<0)return null;const l=a*this.direction.dot(_t.cross(gt));if(l<0)return null;if(s+l>o)return null;const c=-a*gt.dot(xt);return c<0?null:this.at(c/o,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Mt{constructor(e,t,n,r,i,a,o,s,l,c,u,h,d,f,p,m){Mt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,n,r,i,a,o,s,l,c,u,h,d,f,p,m)}set(e,t,n,r,i,a,o,s,l,c,u,h,d,f,p,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=o,g[13]=s,g[2]=l,g[6]=c,g[10]=u,g[14]=h,g[3]=d,g[7]=f,g[11]=p,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Mt).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/bt.setFromMatrixColumn(e,0).length(),i=1/bt.setFromMatrixColumn(e,1).length(),a=1/bt.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(r),l=Math.sin(r),c=Math.cos(i),u=Math.sin(i);if("XYZ"===e.order){const e=a*c,n=a*u,r=o*c,i=o*u;t[0]=s*c,t[4]=-s*u,t[8]=l,t[1]=n+r*l,t[5]=e-i*l,t[9]=-o*s,t[2]=i-e*l,t[6]=r+n*l,t[10]=a*s}else if("YXZ"===e.order){const e=s*c,n=s*u,r=l*c,i=l*u;t[0]=e+i*o,t[4]=r*o-n,t[8]=a*l,t[1]=a*u,t[5]=a*c,t[9]=-o,t[2]=n*o-r,t[6]=i+e*o,t[10]=a*s}else if("ZXY"===e.order){const e=s*c,n=s*u,r=l*c,i=l*u;t[0]=e-i*o,t[4]=-a*u,t[8]=r+n*o,t[1]=n+r*o,t[5]=a*c,t[9]=i-e*o,t[2]=-a*l,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){const e=a*c,n=a*u,r=o*c,i=o*u;t[0]=s*c,t[4]=r*l-n,t[8]=e*l+i,t[1]=s*u,t[5]=i*l+e,t[9]=n*l-r,t[2]=-l,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){const e=a*s,n=a*l,r=o*s,i=o*l;t[0]=s*c,t[4]=i-e*u,t[8]=r*u+n,t[1]=u,t[5]=a*c,t[9]=-o*c,t[2]=-l*c,t[6]=n*u+r,t[10]=e-i*u}else if("XZY"===e.order){const e=a*s,n=a*l,r=o*s,i=o*l;t[0]=s*c,t[4]=-u,t[8]=l*c,t[1]=e*u+i,t[5]=a*c,t[9]=n*u-r,t[2]=r*u-n,t[6]=o*c,t[10]=i*u+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(St,e,Tt)}lookAt(e,t,n){const r=this.elements;return Rt.subVectors(e,t),0===Rt.lengthSq()&&(Rt.z=1),Rt.normalize(),At.crossVectors(n,Rt),0===At.lengthSq()&&(1===Math.abs(n.z)?Rt.x+=1e-4:Rt.z+=1e-4,Rt.normalize(),At.crossVectors(n,Rt)),At.normalize(),wt.crossVectors(Rt,At),r[0]=At.x,r[4]=wt.x,r[8]=Rt.x,r[1]=At.y,r[5]=wt.y,r[9]=Rt.y,r[2]=At.z,r[6]=wt.z,r[10]=Rt.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[4],s=n[8],l=n[12],c=n[1],u=n[5],h=n[9],d=n[13],f=n[2],p=n[6],m=n[10],g=n[14],_=n[3],v=n[7],x=n[11],y=n[15],M=r[0],b=r[4],E=r[8],S=r[12],T=r[1],A=r[5],w=r[9],R=r[13],P=r[2],C=r[6],L=r[10],U=r[14],I=r[3],D=r[7],N=r[11],F=r[15];return i[0]=a*M+o*T+s*P+l*I,i[4]=a*b+o*A+s*C+l*D,i[8]=a*E+o*w+s*L+l*N,i[12]=a*S+o*R+s*U+l*F,i[1]=c*M+u*T+h*P+d*I,i[5]=c*b+u*A+h*C+d*D,i[9]=c*E+u*w+h*L+d*N,i[13]=c*S+u*R+h*U+d*F,i[2]=f*M+p*T+m*P+g*I,i[6]=f*b+p*A+m*C+g*D,i[10]=f*E+p*w+m*L+g*N,i[14]=f*S+p*R+m*U+g*F,i[3]=_*M+v*T+x*P+y*I,i[7]=_*b+v*A+x*C+y*D,i[11]=_*E+v*w+x*L+y*N,i[15]=_*S+v*R+x*U+y*F,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],o=e[5],s=e[9],l=e[13],c=e[2],u=e[6],h=e[10],d=e[14];return e[3]*(+i*s*u-r*l*u-i*o*h+n*l*h+r*o*d-n*s*d)+e[7]*(+t*s*d-t*l*h+i*a*h-r*a*d+r*l*c-i*s*c)+e[11]*(+t*l*u-t*o*d-i*a*u+n*a*d+i*o*c-n*l*c)+e[15]*(-r*o*c-t*s*u+t*o*h+r*a*u-n*a*h+n*s*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8],u=e[9],h=e[10],d=e[11],f=e[12],p=e[13],m=e[14],g=e[15],_=u*m*l-p*h*l+p*s*d-o*m*d-u*s*g+o*h*g,v=f*h*l-c*m*l-f*s*d+a*m*d+c*s*g-a*h*g,x=c*p*l-f*u*l+f*o*d-a*p*d-c*o*g+a*u*g,y=f*u*s-c*p*s-f*o*h+a*p*h+c*o*m-a*u*m,M=t*_+n*v+r*x+i*y;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/M;return e[0]=_*b,e[1]=(p*h*i-u*m*i-p*r*d+n*m*d+u*r*g-n*h*g)*b,e[2]=(o*m*i-p*s*i+p*r*l-n*m*l-o*r*g+n*s*g)*b,e[3]=(u*s*i-o*h*i-u*r*l+n*h*l+o*r*d-n*s*d)*b,e[4]=v*b,e[5]=(c*m*i-f*h*i+f*r*d-t*m*d-c*r*g+t*h*g)*b,e[6]=(f*s*i-a*m*i-f*r*l+t*m*l+a*r*g-t*s*g)*b,e[7]=(a*h*i-c*s*i+c*r*l-t*h*l-a*r*d+t*s*d)*b,e[8]=x*b,e[9]=(f*u*i-c*p*i-f*n*d+t*p*d+c*n*g-t*u*g)*b,e[10]=(a*p*i-f*o*i+f*n*l-t*p*l-a*n*g+t*o*g)*b,e[11]=(c*o*i-a*u*i-c*n*l+t*u*l+a*n*d-t*o*d)*b,e[12]=y*b,e[13]=(c*p*r-f*u*r+f*n*h-t*p*h-c*n*m+t*u*m)*b,e[14]=(f*o*r-a*p*r-f*n*s+t*p*s+a*n*m-t*o*m)*b,e[15]=(a*u*r-c*o*r+c*n*s-t*u*s-a*n*h+t*o*h)*b,this}scale(e){const t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,o=e.y,s=e.z,l=i*a,c=i*o;return this.set(l*a+n,l*o-r*s,l*s+r*o,0,l*o+r*s,c*o+n,c*s-r*a,0,l*s-r*o,c*s+r*a,i*s*s+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,i,a){return this.set(1,n,i,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,i=t._x,a=t._y,o=t._z,s=t._w,l=i+i,c=a+a,u=o+o,h=i*l,d=i*c,f=i*u,p=a*c,m=a*u,g=o*u,_=s*l,v=s*c,x=s*u,y=n.x,M=n.y,b=n.z;return r[0]=(1-(p+g))*y,r[1]=(d+x)*y,r[2]=(f-v)*y,r[3]=0,r[4]=(d-x)*M,r[5]=(1-(h+g))*M,r[6]=(m+_)*M,r[7]=0,r[8]=(f+v)*b,r[9]=(m-_)*b,r[10]=(1-(h+p))*b,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let i=bt.set(r[0],r[1],r[2]).length();const a=bt.set(r[4],r[5],r[6]).length(),o=bt.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],Et.copy(this);const s=1/i,l=1/a,c=1/o;return Et.elements[0]*=s,Et.elements[1]*=s,Et.elements[2]*=s,Et.elements[4]*=l,Et.elements[5]*=l,Et.elements[6]*=l,Et.elements[8]*=c,Et.elements[9]*=c,Et.elements[10]*=c,t.setFromRotationMatrix(Et),n.x=i,n.y=a,n.z=o,this}makePerspective(e,t,n,r,i,a,o=2e3){const s=this.elements,l=2*i/(t-e),c=2*i/(n-r),u=(t+e)/(t-e),h=(n+r)/(n-r);let d,f;if(o===ie)d=-(a+i)/(a-i),f=-2*a*i/(a-i);else{if(o!==ae)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);d=-a/(a-i),f=-a*i/(a-i)}return s[0]=l,s[4]=0,s[8]=u,s[12]=0,s[1]=0,s[5]=c,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=d,s[14]=f,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,r,i,a,o=2e3){const s=this.elements,l=1/(t-e),c=1/(n-r),u=1/(a-i),h=(t+e)*l,d=(n+r)*c;let f,p;if(o===ie)f=(a+i)*u,p=-2*u;else{if(o!==ae)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);f=i*u,p=-1*u}return s[0]=2*l,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-d,s[2]=0,s[6]=0,s[10]=p,s[14]=-f,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const bt=new je,Et=new Mt,St=new je(0,0,0),Tt=new je(1,1,1),At=new je,wt=new je,Rt=new je,Pt=new Mt,Ct=new We;class Lt{constructor(e=0,t=0,n=0,r=Lt.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,i=r[0],a=r[4],o=r[8],s=r[1],l=r[5],c=r[9],u=r[2],h=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(he(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-he(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(s,l)):(this._y=Math.atan2(-u,i),this._z=0);break;case"ZXY":this._x=Math.asin(he(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(s,i));break;case"ZYX":this._y=Math.asin(-he(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(s,i)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(he(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,i)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-he(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Pt.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Pt,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Ct.setFromEuler(this),this.setFromQuaternion(Ct,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Lt.DEFAULT_ORDER="XYZ";class Ut{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let It=0;const Dt=new je,Nt=new We,Ft=new Mt,Ot=new je,Bt=new je,zt=new je,Vt=new We,Ht=new je(1,0,0),Gt=new je(0,1,0),kt=new je(0,0,1),Wt={type:"added"},jt={type:"removed"};class Xt extends oe{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:It++}),this.uuid=ue(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Xt.DEFAULT_UP.clone();const e=new je,t=new Lt,n=new We,r=new je(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Mt},normalMatrix:{value:new ve}}),this.matrix=new Mt,this.matrixWorld=new Mt,this.matrixAutoUpdate=Xt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Xt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Ut,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Nt.setFromAxisAngle(e,t),this.quaternion.multiply(Nt),this}rotateOnWorldAxis(e,t){return Nt.setFromAxisAngle(e,t),this.quaternion.premultiply(Nt),this}rotateX(e){return this.rotateOnAxis(Ht,e)}rotateY(e){return this.rotateOnAxis(Gt,e)}rotateZ(e){return this.rotateOnAxis(kt,e)}translateOnAxis(e,t){return Dt.copy(e).applyQuaternion(this.quaternion),this.position.add(Dt.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Ht,e)}translateY(e){return this.translateOnAxis(Gt,e)}translateZ(e){return this.translateOnAxis(kt,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ft.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ot.copy(e):Ot.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Bt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ft.lookAt(Bt,Ot,this.up):Ft.lookAt(Ot,Bt,this.up),this.quaternion.setFromRotationMatrix(Ft),r&&(Ft.extractRotation(r.matrixWorld),Nt.setFromRotationMatrix(Ft),this.quaternion.premultiply(Nt.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Wt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(jt)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ft.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Ft.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ft),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let r=0,i=this.children.length;r<i;r++){const i=this.children[r].getObjectsByProperty(e,t);i.length>0&&(n=n.concat(i))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bt,e,zt),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bt,Vt,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++){const r=t[n];!0!==r.matrixWorldAutoUpdate&&!0!==e||r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++){const n=e[t];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};function i(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const r=n[t];i(e.shapes,r)}else i(e.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,r=this.material.length;n<r;n++)t.push(i(e.materials,this.material[n]));r.material=t}else r.material=i(e.materials,this.material);if(this.children.length>0){r.children=[];for(let t=0;t<this.children.length;t++)r.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];r.animations.push(i(e.animations,n))}}if(t){const t=a(e.geometries),r=a(e.materials),i=a(e.textures),o=a(e.images),s=a(e.shapes),l=a(e.skeletons),c=a(e.animations),u=a(e.nodes);t.length>0&&(n.geometries=t),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),o.length>0&&(n.images=o),s.length>0&&(n.shapes=s),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),u.length>0&&(n.nodes=u)}return n.object=r,n;function a(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}Xt.DEFAULT_UP=new je(0,1,0),Xt.DEFAULT_MATRIX_AUTO_UPDATE=!0,Xt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const qt=new je,Yt=new je,Kt=new je,Zt=new je,Jt=new je,$t=new je,Qt=new je,en=new je,tn=new je,nn=new je;let rn=!1;class an{constructor(e=new je,t=new je,n=new je){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),qt.subVectors(e,t),r.cross(qt);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(e,t,n,r,i){qt.subVectors(r,t),Yt.subVectors(n,t),Kt.subVectors(e,t);const a=qt.dot(qt),o=qt.dot(Yt),s=qt.dot(Kt),l=Yt.dot(Yt),c=Yt.dot(Kt),u=a*l-o*o;if(0===u)return i.set(-2,-1,-1);const h=1/u,d=(l*s-o*c)*h,f=(a*c-o*s)*h;return i.set(1-d-f,f,d)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,Zt),Zt.x>=0&&Zt.y>=0&&Zt.x+Zt.y<=1}static getUV(e,t,n,r,i,a,o,s){return!1===rn&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),rn=!0),this.getInterpolation(e,t,n,r,i,a,o,s)}static getInterpolation(e,t,n,r,i,a,o,s){return this.getBarycoord(e,t,n,r,Zt),s.setScalar(0),s.addScaledVector(i,Zt.x),s.addScaledVector(a,Zt.y),s.addScaledVector(o,Zt.z),s}static isFrontFacing(e,t,n,r){return qt.subVectors(n,t),Yt.subVectors(e,t),qt.cross(Yt).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return qt.subVectors(this.c,this.b),Yt.subVectors(this.a,this.b),.5*qt.cross(Yt).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return an.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return an.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,i){return!1===rn&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),rn=!0),an.getInterpolation(e,this.a,this.b,this.c,t,n,r,i)}getInterpolation(e,t,n,r,i){return an.getInterpolation(e,this.a,this.b,this.c,t,n,r,i)}containsPoint(e){return an.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return an.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,i=this.c;let a,o;Jt.subVectors(r,n),$t.subVectors(i,n),en.subVectors(e,n);const s=Jt.dot(en),l=$t.dot(en);if(s<=0&&l<=0)return t.copy(n);tn.subVectors(e,r);const c=Jt.dot(tn),u=$t.dot(tn);if(c>=0&&u<=c)return t.copy(r);const h=s*u-c*l;if(h<=0&&s>=0&&c<=0)return a=s/(s-c),t.copy(n).addScaledVector(Jt,a);nn.subVectors(e,i);const d=Jt.dot(nn),f=$t.dot(nn);if(f>=0&&d<=f)return t.copy(i);const p=d*l-s*f;if(p<=0&&l>=0&&f<=0)return o=l/(l-f),t.copy(n).addScaledVector($t,o);const m=c*f-d*u;if(m<=0&&u-c>=0&&d-f>=0)return Qt.subVectors(i,r),o=(u-c)/(u-c+(d-f)),t.copy(r).addScaledVector(Qt,o);const g=1/(m+p+h);return a=p*g,o=h*g,t.copy(n).addScaledVector(Jt,a).addScaledVector($t,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const on={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},sn={h:0,s:0,l:0},ln={h:0,s:0,l:0};function cn(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}class un{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(void 0===t&&void 0===n){const t=e;t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=q){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,Pe.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=Pe.workingColorSpace){return this.r=e,this.g=t,this.b=n,Pe.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=Pe.workingColorSpace){if(e=(e%(i=1)+i)%i,t=he(t,0,1),n=he(n,0,1),0===t)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,i=2*n-r;this.r=cn(i,r,e+1/3),this.g=cn(i,r,e),this.b=cn(i,r,e-1/3)}var i;return Pe.toWorkingColorSpace(this,r),this}setStyle(e,t=q){function n(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let i;const a=r[1],o=r[2];switch(a){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(i[4]),this.setRGB(Math.min(255,parseInt(i[1],10))/255,Math.min(255,parseInt(i[2],10))/255,Math.min(255,parseInt(i[3],10))/255,t);if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(i[4]),this.setRGB(Math.min(100,parseInt(i[1],10))/100,Math.min(100,parseInt(i[2],10))/100,Math.min(100,parseInt(i[3],10))/100,t);break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(i[4]),this.setHSL(parseFloat(i[1])/360,parseFloat(i[2])/100,parseFloat(i[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const n=r[1],i=n.length;if(3===i)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,t);if(6===i)return this.setHex(parseInt(n,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=q){const n=on[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ce(e.r),this.g=Ce(e.g),this.b=Ce(e.b),this}copyLinearToSRGB(e){return this.r=Le(e.r),this.g=Le(e.g),this.b=Le(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=q){return Pe.fromWorkingColorSpace(hn.copy(this),e),65536*Math.round(he(255*hn.r,0,255))+256*Math.round(he(255*hn.g,0,255))+Math.round(he(255*hn.b,0,255))}getHexString(e=q){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Pe.workingColorSpace){Pe.fromWorkingColorSpace(hn.copy(this),t);const n=hn.r,r=hn.g,i=hn.b,a=Math.max(n,r,i),o=Math.min(n,r,i);let s,l;const c=(o+a)/2;if(o===a)s=0,l=0;else{const e=a-o;switch(l=c<=.5?e/(a+o):e/(2-a-o),a){case n:s=(r-i)/e+(r<i?6:0);break;case r:s=(i-n)/e+2;break;case i:s=(n-r)/e+4}s/=6}return e.h=s,e.s=l,e.l=c,e}getRGB(e,t=Pe.workingColorSpace){return Pe.fromWorkingColorSpace(hn.copy(this),t),e.r=hn.r,e.g=hn.g,e.b=hn.b,e}getStyle(e=q){Pe.fromWorkingColorSpace(hn.copy(this),e);const t=hn.r,n=hn.g,r=hn.b;return e!==q?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*n)},${Math.round(255*r)})`}offsetHSL(e,t,n){return this.getHSL(sn),this.setHSL(sn.h+e,sn.s+t,sn.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(sn),e.getHSL(ln);const n=de(sn.h,ln.h,t),r=de(sn.s,ln.s,t),i=de(sn.l,ln.l,t);return this.setHSL(n,r,i),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,r=this.b,i=e.elements;return this.r=i[0]*t+i[3]*n+i[6]*r,this.g=i[1]*t+i[4]*n+i[7]*r,this.b=i[2]*t+i[5]*n+i[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const hn=new un;un.NAMES=on;let dn=0;class fn extends oe{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:dn++}),this.uuid=ue(),this.name="",this.type="Material",this.blending=1,this.side=s,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=l,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new un(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=te,this.stencilZFail=te,this.stencilZPass=te,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n:console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`)}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),this.side!==s&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),204!==this.blendSrc&&(n.blendSrc=this.blendSrc),205!==this.blendDst&&(n.blendDst=this.blendDst),this.blendEquation!==l&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==te&&(n.stencilFail=this.stencilFail),this.stencilZFail!==te&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==te&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){const t=r(e.textures),i=r(e.images);t.length>0&&(n.textures=t),i.length>0&&(n.images=i)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let r=0;r!==e;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class pn extends fn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new un(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=c,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const mn=new je,gn=new _e;class _n{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=n,this.usage=35044,this.updateRange={offset:0,count:-1},this.gpuType=L,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)gn.fromBufferAttribute(this,t),gn.applyMatrix3(e),this.setXY(t,gn.x,gn.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)mn.fromBufferAttribute(this,t),mn.applyMatrix3(e),this.setXYZ(t,mn.x,mn.y,mn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)mn.fromBufferAttribute(this,t),mn.applyMatrix4(e),this.setXYZ(t,mn.x,mn.y,mn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)mn.fromBufferAttribute(this,t),mn.applyNormalMatrix(e),this.setXYZ(t,mn.x,mn.y,mn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)mn.fromBufferAttribute(this,t),mn.transformDirection(e),this.setXYZ(t,mn.x,mn.y,mn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=me(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ge(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=me(t,this.array)),t}setX(e,t){return this.normalized&&(t=ge(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=me(t,this.array)),t}setY(e,t){return this.normalized&&(t=ge(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=me(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ge(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=me(t,this.array)),t}setW(e,t){return this.normalized&&(t=ge(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ge(t,this.array),n=ge(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=ge(t,this.array),n=ge(n,this.array),r=ge(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e*=this.itemSize,this.normalized&&(t=ge(t,this.array),n=ge(n,this.array),r=ge(r,this.array),i=ge(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}class vn extends _n{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class xn extends _n{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class yn extends _n{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Mn=0;const bn=new Mt,En=new Xt,Sn=new je,Tn=new Ye,An=new Ye,wn=new je;class Rn extends oe{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Mn++}),this.uuid=ue(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(ye(e)?xn:vn)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new ve).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return bn.makeRotationFromQuaternion(e),this.applyMatrix4(bn),this}rotateX(e){return bn.makeRotationX(e),this.applyMatrix4(bn),this}rotateY(e){return bn.makeRotationY(e),this.applyMatrix4(bn),this}rotateZ(e){return bn.makeRotationZ(e),this.applyMatrix4(bn),this}translate(e,t,n){return bn.makeTranslation(e,t,n),this.applyMatrix4(bn),this}scale(e,t,n){return bn.makeScale(e,t,n),this.applyMatrix4(bn),this}lookAt(e){return En.lookAt(e),En.updateMatrix(),this.applyMatrix4(En.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Sn).negate(),this.translate(Sn.x,Sn.y,Sn.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new yn(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ye);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new je(-1/0,-1/0,-1/0),new je(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Tn.setFromBufferAttribute(n),this.morphTargetsRelative?(wn.addVectors(this.boundingBox.min,Tn.min),this.boundingBox.expandByPoint(wn),wn.addVectors(this.boundingBox.max,Tn.max),this.boundingBox.expandByPoint(wn)):(this.boundingBox.expandByPoint(Tn.min),this.boundingBox.expandByPoint(Tn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new dt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new je,1/0);if(e){const n=this.boundingSphere.center;if(Tn.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];An.setFromBufferAttribute(n),this.morphTargetsRelative?(wn.addVectors(Tn.min,An.min),Tn.expandByPoint(wn),wn.addVectors(Tn.max,An.max),Tn.expandByPoint(wn)):(Tn.expandByPoint(An.min),Tn.expandByPoint(An.max))}Tn.getCenter(n);let r=0;for(let t=0,i=e.count;t<i;t++)wn.fromBufferAttribute(e,t),r=Math.max(r,n.distanceToSquared(wn));if(t)for(let i=0,a=t.length;i<a;i++){const a=t[i],o=this.morphTargetsRelative;for(let t=0,i=a.count;t<i;t++)wn.fromBufferAttribute(a,t),o&&(Sn.fromBufferAttribute(e,t),wn.add(Sn)),r=Math.max(r,n.distanceToSquared(wn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,r=t.position.array,i=t.normal.array,a=t.uv.array,o=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new _n(new Float32Array(4*o),4));const s=this.getAttribute("tangent").array,l=[],c=[];for(let e=0;e<o;e++)l[e]=new je,c[e]=new je;const u=new je,h=new je,d=new je,f=new _e,p=new _e,m=new _e,g=new je,_=new je;function v(e,t,n){u.fromArray(r,3*e),h.fromArray(r,3*t),d.fromArray(r,3*n),f.fromArray(a,2*e),p.fromArray(a,2*t),m.fromArray(a,2*n),h.sub(u),d.sub(u),p.sub(f),m.sub(f);const i=1/(p.x*m.y-m.x*p.y);isFinite(i)&&(g.copy(h).multiplyScalar(m.y).addScaledVector(d,-p.y).multiplyScalar(i),_.copy(d).multiplyScalar(p.x).addScaledVector(h,-m.x).multiplyScalar(i),l[e].add(g),l[t].add(g),l[n].add(g),c[e].add(_),c[t].add(_),c[n].add(_))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let e=0,t=x.length;e<t;++e){const t=x[e],r=t.start;for(let e=r,i=r+t.count;e<i;e+=3)v(n[e+0],n[e+1],n[e+2])}const y=new je,M=new je,b=new je,E=new je;function S(e){b.fromArray(i,3*e),E.copy(b);const t=l[e];y.copy(t),y.sub(b.multiplyScalar(b.dot(t))).normalize(),M.crossVectors(E,t);const n=M.dot(c[e])<0?-1:1;s[4*e]=y.x,s[4*e+1]=y.y,s[4*e+2]=y.z,s[4*e+3]=n}for(let e=0,t=x.length;e<t;++e){const t=x[e],r=t.start;for(let e=r,i=r+t.count;e<i;e+=3)S(n[e+0]),S(n[e+1]),S(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new _n(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const r=new je,i=new je,a=new je,o=new je,s=new je,l=new je,c=new je,u=new je;if(e)for(let h=0,d=e.count;h<d;h+=3){const d=e.getX(h+0),f=e.getX(h+1),p=e.getX(h+2);r.fromBufferAttribute(t,d),i.fromBufferAttribute(t,f),a.fromBufferAttribute(t,p),c.subVectors(a,i),u.subVectors(r,i),c.cross(u),o.fromBufferAttribute(n,d),s.fromBufferAttribute(n,f),l.fromBufferAttribute(n,p),o.add(c),s.add(c),l.add(c),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(f,s.x,s.y,s.z),n.setXYZ(p,l.x,l.y,l.z)}else for(let e=0,o=t.count;e<o;e+=3)r.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),c.subVectors(a,i),u.subVectors(r,i),c.cross(u),n.setXYZ(e+0,c.x,c.y,c.z),n.setXYZ(e+1,c.x,c.y,c.z),n.setXYZ(e+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)wn.fromBufferAttribute(e,t),wn.normalize(),e.setXYZ(t,wn.x,wn.y,wn.z)}toNonIndexed(){function e(e,t){const n=e.array,r=e.itemSize,i=e.normalized,a=new n.constructor(t.length*r);let o=0,s=0;for(let i=0,l=t.length;i<l;i++){o=e.isInterleavedBufferAttribute?t[i]*e.data.stride+e.offset:t[i]*r;for(let e=0;e<r;e++)a[s++]=n[o++]}return new _n(a,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Rn,n=this.index.array,r=this.attributes;for(const i in r){const a=e(r[i],n);t.setAttribute(i,a)}const i=this.morphAttributes;for(const r in i){const a=[],o=i[r];for(let t=0,r=o.length;t<r;t++){const r=e(o[t],n);a.push(r)}t.morphAttributes[r]=a}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let e=0,n=a.length;e<n;e++){const n=a[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const r=n[t];e.data.attributes[t]=r.toJSON(e.data)}const r={};let i=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],a=[];for(let t=0,r=n.length;t<r;t++){const r=n[t];a.push(r.toJSON(e.data))}a.length>0&&(r[t]=a,i=!0)}i&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const r=e.attributes;for(const e in r){const n=r[e];this.setAttribute(e,n.clone(t))}const i=e.morphAttributes;for(const e in i){const n=[],r=i[e];for(let e=0,i=r.length;e<i;e++)n.push(r[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let e=0,t=a.length;e<t;e++){const t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Pn=new Mt,Cn=new yt,Ln=new dt,Un=new je,In=new je,Dn=new je,Nn=new je,Fn=new je,On=new je,Bn=new _e,zn=new _e,Vn=new _e,Hn=new je,Gn=new je,kn=new je,Wn=new je,jn=new je;class Xn extends Xt{constructor(e=new Rn,t=new pn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){const n=this.geometry,r=n.attributes.position,i=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(r,e);const o=this.morphTargetInfluences;if(i&&o){On.set(0,0,0);for(let n=0,r=i.length;n<r;n++){const r=o[n],s=i[n];0!==r&&(Fn.fromBufferAttribute(s,e),a?On.addScaledVector(Fn,r):On.addScaledVector(Fn.sub(t),r))}t.add(On)}return t}raycast(e,t){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0!==r){if(null===n.boundingSphere&&n.computeBoundingSphere(),Ln.copy(n.boundingSphere),Ln.applyMatrix4(i),Cn.copy(e.ray).recast(e.near),!1===Ln.containsPoint(Cn.origin)){if(null===Cn.intersectSphere(Ln,Un))return;if(Cn.origin.distanceToSquared(Un)>(e.far-e.near)**2)return}Pn.copy(i).invert(),Cn.copy(e.ray).applyMatrix4(Pn),null!==n.boundingBox&&!1===Cn.intersectsBox(n.boundingBox)||this._computeIntersections(e,t,Cn)}}_computeIntersections(e,t,n){let r;const i=this.geometry,a=this.material,o=i.index,s=i.attributes.position,l=i.attributes.uv,c=i.attributes.uv1,u=i.attributes.normal,h=i.groups,d=i.drawRange;if(null!==o)if(Array.isArray(a))for(let i=0,s=h.length;i<s;i++){const s=h[i],f=a[s.materialIndex];for(let i=Math.max(s.start,d.start),a=Math.min(o.count,Math.min(s.start+s.count,d.start+d.count));i<a;i+=3)r=qn(this,f,e,n,l,c,u,o.getX(i),o.getX(i+1),o.getX(i+2)),r&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=s.materialIndex,t.push(r))}else for(let i=Math.max(0,d.start),s=Math.min(o.count,d.start+d.count);i<s;i+=3)r=qn(this,a,e,n,l,c,u,o.getX(i),o.getX(i+1),o.getX(i+2)),r&&(r.faceIndex=Math.floor(i/3),t.push(r));else if(void 0!==s)if(Array.isArray(a))for(let i=0,o=h.length;i<o;i++){const o=h[i],f=a[o.materialIndex];for(let i=Math.max(o.start,d.start),a=Math.min(s.count,Math.min(o.start+o.count,d.start+d.count));i<a;i+=3)r=qn(this,f,e,n,l,c,u,i,i+1,i+2),r&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=o.materialIndex,t.push(r))}else for(let i=Math.max(0,d.start),o=Math.min(s.count,d.start+d.count);i<o;i+=3)r=qn(this,a,e,n,l,c,u,i,i+1,i+2),r&&(r.faceIndex=Math.floor(i/3),t.push(r))}}function qn(e,t,n,r,i,a,o,l,c,u){e.getVertexPosition(l,In),e.getVertexPosition(c,Dn),e.getVertexPosition(u,Nn);const h=function(e,t,n,r,i,a,o,l){let c;if(c=1===t.side?r.intersectTriangle(o,a,i,!0,l):r.intersectTriangle(i,a,o,t.side===s,l),null===c)return null;jn.copy(l),jn.applyMatrix4(e.matrixWorld);const u=n.ray.origin.distanceTo(jn);return u<n.near||u>n.far?null:{distance:u,point:jn.clone(),object:e}}(e,t,n,r,In,Dn,Nn,Wn);if(h){i&&(Bn.fromBufferAttribute(i,l),zn.fromBufferAttribute(i,c),Vn.fromBufferAttribute(i,u),h.uv=an.getInterpolation(Wn,In,Dn,Nn,Bn,zn,Vn,new _e)),a&&(Bn.fromBufferAttribute(a,l),zn.fromBufferAttribute(a,c),Vn.fromBufferAttribute(a,u),h.uv1=an.getInterpolation(Wn,In,Dn,Nn,Bn,zn,Vn,new _e),h.uv2=h.uv1),o&&(Hn.fromBufferAttribute(o,l),Gn.fromBufferAttribute(o,c),kn.fromBufferAttribute(o,u),h.normal=an.getInterpolation(Wn,In,Dn,Nn,Hn,Gn,kn,new je),h.normal.dot(r.direction)>0&&h.normal.multiplyScalar(-1));const e={a:l,b:c,c:u,normal:new je,materialIndex:0};an.getNormal(In,Dn,Nn,e.normal),h.face=e}return h}class Yn extends Rn{constructor(e=1,t=1,n=1,r=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};const o=this;r=Math.floor(r),i=Math.floor(i),a=Math.floor(a);const s=[],l=[],c=[],u=[];let h=0,d=0;function f(e,t,n,r,i,a,f,p,m,g,_){const v=a/m,x=f/g,y=a/2,M=f/2,b=p/2,E=m+1,S=g+1;let T=0,A=0;const w=new je;for(let a=0;a<S;a++){const o=a*x-M;for(let s=0;s<E;s++){const h=s*v-y;w[e]=h*r,w[t]=o*i,w[n]=b,l.push(w.x,w.y,w.z),w[e]=0,w[t]=0,w[n]=p>0?1:-1,c.push(w.x,w.y,w.z),u.push(s/m),u.push(1-a/g),T+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){const n=h+t+E*e,r=h+t+E*(e+1),i=h+(t+1)+E*(e+1),a=h+(t+1)+E*e;s.push(n,r,a),s.push(r,i,a),A+=6}o.addGroup(d,A,_),d+=A,h+=T}f("z","y","x",-1,-1,n,t,e,a,i,0),f("z","y","x",1,-1,n,t,-e,a,i,1),f("x","z","y",1,1,e,n,t,r,a,2),f("x","z","y",1,-1,e,n,-t,r,a,3),f("x","y","z",1,-1,e,t,n,r,i,4),f("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(s),this.setAttribute("position",new yn(l,3)),this.setAttribute("normal",new yn(c,3)),this.setAttribute("uv",new yn(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Yn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Kn(e){const t={};for(const n in e){t[n]={};for(const r in e[n]){const i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][r]=null):t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}function Zn(e){const t={};for(let n=0;n<e.length;n++){const r=Kn(e[n]);for(const e in r)t[e]=r[e]}return t}function Jn(e){return null===e.getRenderTarget()?e.outputColorSpace:Pe.workingColorSpace}const $n={clone:Kn,merge:Zn};class Qn extends fn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Kn(e.uniforms),this.uniformsGroups=function(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class er extends Xt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Mt,this.projectionMatrix=new Mt,this.projectionMatrixInverse=new Mt,this.coordinateSystem=ie}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class tr extends er{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*ce*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*le*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*ce*Math.atan(Math.tan(.5*le*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*le*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,o=a.fullHeight;i+=a.offsetX*r/e,t-=a.offsetY*n/o,r*=a.width/e,n*=a.height/o}const o=this.filmOffset;0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const nr=-90;class rr extends Xt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new tr(nr,1,e,t);r.layers=this.layers,this.add(r);const i=new tr(nr,1,e,t);i.layers=this.layers,this.add(i);const a=new tr(nr,1,e,t);a.layers=this.layers,this.add(a);const o=new tr(nr,1,e,t);o.layers=this.layers,this.add(o);const s=new tr(nr,1,e,t);s.layers=this.layers,this.add(s);const l=new tr(nr,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,r,i,a,o,s]=t;for(const e of t)this.remove(e);if(e===ie)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),i.up.set(0,0,-1),i.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),s.up.set(0,1,0),s.lookAt(0,0,-1);else{if(e!==ae)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),i.up.set(0,0,1),i.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),s.up.set(0,-1,0),s.lookAt(0,0,-1)}for(const e of t)this.add(e),e.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,a,o,s,l,c]=this.children,u=e.getRenderTarget(),h=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),f=e.xr.enabled;e.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,i),e.setRenderTarget(n,1,r),e.render(t,a),e.setRenderTarget(n,2,r),e.render(t,o),e.setRenderTarget(n,3,r),e.render(t,s),e.setRenderTarget(n,4,r),e.render(t,l),n.texture.generateMipmaps=p,e.setRenderTarget(n,5,r),e.render(t,c),e.setRenderTarget(u,h,d),e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class ir extends Be{constructor(e,t,n,r,i,a,o,s,l,c){super(e=void 0!==e?e:[],t=void 0!==t?t:v,n,r,i,a,o,s,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class ar extends He{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];void 0!==t.encoding&&(Se("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===j?q:X),this.texture=new ir(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:A}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",i="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new Yn(5,5,5),o=new Qn({name:"CubemapFromEquirect",uniforms:Kn(n),vertexShader:r,fragmentShader:i,side:1,blending:0});o.uniforms.tEquirect.value=t;const s=new Xn(a,o),l=t.minFilter;return t.minFilter===w&&(t.minFilter=A),new rr(1,10,this).update(e,s),t.minFilter=l,s.geometry.dispose(),s.material.dispose(),this}clear(e,t,n,r){const i=e.getRenderTarget();for(let i=0;i<6;i++)e.setRenderTarget(this,i),e.clear(t,n,r);e.setRenderTarget(i)}}const or=new je,sr=new je,lr=new ve;class cr{constructor(e=new je(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=or.subVectors(n,t).cross(sr.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(or),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const i=-(e.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:t.copy(e.start).addScaledVector(n,i)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||lr.getNormalMatrix(e),r=this.coplanarPoint(or).applyMatrix4(e),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const ur=new dt,hr=new je;class dr{constructor(e=new cr,t=new cr,n=new cr,r=new cr,i=new cr,a=new cr){this.planes=[e,t,n,r,i,a]}set(e,t,n,r,i,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=2e3){const n=this.planes,r=e.elements,i=r[0],a=r[1],o=r[2],s=r[3],l=r[4],c=r[5],u=r[6],h=r[7],d=r[8],f=r[9],p=r[10],m=r[11],g=r[12],_=r[13],v=r[14],x=r[15];if(n[0].setComponents(s-i,h-l,m-d,x-g).normalize(),n[1].setComponents(s+i,h+l,m+d,x+g).normalize(),n[2].setComponents(s+a,h+c,m+f,x+_).normalize(),n[3].setComponents(s-a,h-c,m-f,x-_).normalize(),n[4].setComponents(s-o,h-u,m-p,x-v).normalize(),t===ie)n[5].setComponents(s+o,h+u,m+p,x+v).normalize();else{if(t!==ae)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);n[5].setComponents(o,u,p,v).normalize()}return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),ur.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),ur.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ur)}intersectsSprite(e){return ur.center.set(0,0,0),ur.radius=.7071067811865476,ur.applyMatrix4(e.matrixWorld),this.intersectsSphere(ur)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(hr.x=r.normal.x>0?e.max.x:e.min.x,hr.y=r.normal.y>0?e.max.y:e.min.y,hr.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(hr)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function fr(){let e=null,t=!1,n=null,r=null;function i(t,a){n(t,a),r=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==n&&(r=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function pr(e,t){const n=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=r.get(t);n&&(e.deleteBuffer(n.buffer),r.delete(t))},update:function(t,i){if(t.isGLBufferAttribute){const e=r.get(t);return void((!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const a=r.get(t);void 0===a?r.set(t,function(t,r){const i=t.array,a=t.usage,o=e.createBuffer();let s;if(e.bindBuffer(r,o),e.bufferData(r,i,a),t.onUploadCallback(),i instanceof Float32Array)s=e.FLOAT;else if(i instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");s=e.HALF_FLOAT}else s=e.UNSIGNED_SHORT;else if(i instanceof Int16Array)s=e.SHORT;else if(i instanceof Uint32Array)s=e.UNSIGNED_INT;else if(i instanceof Int32Array)s=e.INT;else if(i instanceof Int8Array)s=e.BYTE;else if(i instanceof Uint8Array)s=e.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);s=e.UNSIGNED_BYTE}return{buffer:o,type:s,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version}}(t,i)):a.version<t.version&&(function(t,r,i){const a=r.array,o=r.updateRange;e.bindBuffer(i,t),-1===o.count?e.bufferSubData(i,0,a):(n?e.bufferSubData(i,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):e.bufferSubData(i,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1),r.onUploadCallback()}(a.buffer,t,i),a.version=t.version)}}}class mr extends Rn{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const i=e/2,a=t/2,o=Math.floor(n),s=Math.floor(r),l=o+1,c=s+1,u=e/o,h=t/s,d=[],f=[],p=[],m=[];for(let e=0;e<c;e++){const t=e*h-a;for(let n=0;n<l;n++){const r=n*u-i;f.push(r,-t,0),p.push(0,0,1),m.push(n/o),m.push(1-e/s)}}for(let e=0;e<s;e++)for(let t=0;t<o;t++){const n=t+l*e,r=t+l*(e+1),i=t+1+l*(e+1),a=t+1+l*e;d.push(n,r,a),d.push(r,i,a)}this.setIndex(d),this.setAttribute("position",new yn(f,3)),this.setAttribute("normal",new yn(p,3)),this.setAttribute("uv",new yn(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new mr(e.width,e.height,e.widthSegments,e.heightSegments)}}const gr={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n\tvec3( 0.8224621, 0.177538, 0.0 ),\n\tvec3( 0.0331941, 0.9668058, 0.0 ),\n\tvec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.2249401, - 0.2249404, 0.0 ),\n\tvec3( - 0.0420569, 1.0420571, 0.0 ),\n\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn sRGBTransferOETF( value );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tanisotropyV /= material.anisotropy;\n\tmaterial.anisotropy = saturate( material.anisotropy );\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},_r={common:{diffuse:{value:new un(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ve},alphaMap:{value:null},alphaMapTransform:{value:new ve},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ve}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ve}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ve}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ve},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ve},normalScale:{value:new _e(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ve},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ve}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ve}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ve}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new un(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new un(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ve},alphaTest:{value:0},uvTransform:{value:new ve}},sprite:{diffuse:{value:new un(16777215)},opacity:{value:1},center:{value:new _e(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ve},alphaMap:{value:null},alphaMapTransform:{value:new ve},alphaTest:{value:0}}},vr={basic:{uniforms:Zn([_r.common,_r.specularmap,_r.envmap,_r.aomap,_r.lightmap,_r.fog]),vertexShader:gr.meshbasic_vert,fragmentShader:gr.meshbasic_frag},lambert:{uniforms:Zn([_r.common,_r.specularmap,_r.envmap,_r.aomap,_r.lightmap,_r.emissivemap,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.fog,_r.lights,{emissive:{value:new un(0)}}]),vertexShader:gr.meshlambert_vert,fragmentShader:gr.meshlambert_frag},phong:{uniforms:Zn([_r.common,_r.specularmap,_r.envmap,_r.aomap,_r.lightmap,_r.emissivemap,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.fog,_r.lights,{emissive:{value:new un(0)},specular:{value:new un(1118481)},shininess:{value:30}}]),vertexShader:gr.meshphong_vert,fragmentShader:gr.meshphong_frag},standard:{uniforms:Zn([_r.common,_r.envmap,_r.aomap,_r.lightmap,_r.emissivemap,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.roughnessmap,_r.metalnessmap,_r.fog,_r.lights,{emissive:{value:new un(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:gr.meshphysical_vert,fragmentShader:gr.meshphysical_frag},toon:{uniforms:Zn([_r.common,_r.aomap,_r.lightmap,_r.emissivemap,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.gradientmap,_r.fog,_r.lights,{emissive:{value:new un(0)}}]),vertexShader:gr.meshtoon_vert,fragmentShader:gr.meshtoon_frag},matcap:{uniforms:Zn([_r.common,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.fog,{matcap:{value:null}}]),vertexShader:gr.meshmatcap_vert,fragmentShader:gr.meshmatcap_frag},points:{uniforms:Zn([_r.points,_r.fog]),vertexShader:gr.points_vert,fragmentShader:gr.points_frag},dashed:{uniforms:Zn([_r.common,_r.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:gr.linedashed_vert,fragmentShader:gr.linedashed_frag},depth:{uniforms:Zn([_r.common,_r.displacementmap]),vertexShader:gr.depth_vert,fragmentShader:gr.depth_frag},normal:{uniforms:Zn([_r.common,_r.bumpmap,_r.normalmap,_r.displacementmap,{opacity:{value:1}}]),vertexShader:gr.meshnormal_vert,fragmentShader:gr.meshnormal_frag},sprite:{uniforms:Zn([_r.sprite,_r.fog]),vertexShader:gr.sprite_vert,fragmentShader:gr.sprite_frag},background:{uniforms:{uvTransform:{value:new ve},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:gr.background_vert,fragmentShader:gr.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:gr.backgroundCube_vert,fragmentShader:gr.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:gr.cube_vert,fragmentShader:gr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:gr.equirect_vert,fragmentShader:gr.equirect_frag},distanceRGBA:{uniforms:Zn([_r.common,_r.displacementmap,{referencePosition:{value:new je},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:gr.distanceRGBA_vert,fragmentShader:gr.distanceRGBA_frag},shadow:{uniforms:Zn([_r.lights,_r.fog,{color:{value:new un(0)},opacity:{value:1}}]),vertexShader:gr.shadow_vert,fragmentShader:gr.shadow_frag}};vr.physical={uniforms:Zn([vr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ve},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ve},clearcoatNormalScale:{value:new _e(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ve},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ve},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ve},sheen:{value:0},sheenColor:{value:new un(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ve},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ve},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ve},transmissionSamplerSize:{value:new _e},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ve},attenuationDistance:{value:0},attenuationColor:{value:new un(0)},specularColor:{value:new un(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ve},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ve},anisotropyVector:{value:new _e},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ve}}]),vertexShader:gr.meshphysical_vert,fragmentShader:gr.meshphysical_frag};const xr={r:0,b:0,g:0};function yr(e,t,n,r,i,a,o){const l=new un(0);let c,u,h=!0===a?0:1,d=null,f=0,p=null;function m(t,n){t.getRGB(xr,Jn(e)),r.buffers.color.setClear(xr.r,xr.g,xr.b,n,o)}return{getClearColor:function(){return l},setClearColor:function(e,t=1){l.set(e),h=t,m(l,h)},getClearAlpha:function(){return h},setClearAlpha:function(e){h=e,m(l,h)},render:function(a,g){let _=!1,v=!0===g.isScene?g.background:null;v&&v.isTexture&&(v=(g.backgroundBlurriness>0?n:t).get(v)),null===v?m(l,h):v&&v.isColor&&(m(v,1),_=!0);const x=e.xr.getEnvironmentBlendMode();"additive"===x?r.buffers.color.setClear(0,0,0,1,o):"alpha-blend"===x&&r.buffers.color.setClear(0,0,0,0,o),(e.autoClear||_)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),v&&(v.isCubeTexture||v.mapping===y)?(void 0===u&&(u=new Xn(new Yn(1,1,1),new Qn({name:"BackgroundCubeMaterial",uniforms:Kn(vr.backgroundCube.uniforms),vertexShader:vr.backgroundCube.vertexShader,fragmentShader:vr.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=v,u.material.uniforms.flipEnvMap.value=v.isCubeTexture&&!1===v.isRenderTargetTexture?-1:1,u.material.uniforms.backgroundBlurriness.value=g.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,u.material.toneMapped=Pe.getTransfer(v.colorSpace)!==$,d===v&&f===v.version&&p===e.toneMapping||(u.material.needsUpdate=!0,d=v,f=v.version,p=e.toneMapping),u.layers.enableAll(),a.unshift(u,u.geometry,u.material,0,0,null)):v&&v.isTexture&&(void 0===c&&(c=new Xn(new mr(2,2),new Qn({name:"BackgroundMaterial",uniforms:Kn(vr.background.uniforms),vertexShader:vr.background.vertexShader,fragmentShader:vr.background.fragmentShader,side:s,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=v,c.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,c.material.toneMapped=Pe.getTransfer(v.colorSpace)!==$,!0===v.matrixAutoUpdate&&v.updateMatrix(),c.material.uniforms.uvTransform.value.copy(v.matrix),d===v&&f===v.version&&p===e.toneMapping||(c.material.needsUpdate=!0,d=v,f=v.version,p=e.toneMapping),c.layers.enableAll(),a.unshift(c,c.geometry,c.material,0,0,null))}}}function Mr(e,t,n,r){const i=e.getParameter(e.MAX_VERTEX_ATTRIBS),a=r.isWebGL2?null:t.get("OES_vertex_array_object"),o=r.isWebGL2||null!==a,s={},l=f(null);let c=l,u=!1;function h(t){return r.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function d(t){return r.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function f(e){const t=[],n=[],r=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function p(){const e=c.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function m(e){g(e,0)}function g(n,i){const a=c.newAttributes,o=c.enabledAttributes,s=c.attributeDivisors;a[n]=1,0===o[n]&&(e.enableVertexAttribArray(n),o[n]=1),s[n]!==i&&((r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),s[n]=i)}function _(){const t=c.newAttributes,n=c.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==t[r]&&(e.disableVertexAttribArray(r),n[r]=0)}function v(t,n,r,i,a,o,s){!0===s?e.vertexAttribIPointer(t,n,r,a,o):e.vertexAttribPointer(t,n,r,i,a,o)}function x(){y(),u=!0,c!==l&&(c=l,h(c.object))}function y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,d,x,y){let M=!1;if(o){const t=function(t,n,i){const o=!0===i.wireframe;let l=s[t.id];void 0===l&&(l={},s[t.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let u=c[o];return void 0===u&&(u=f(r.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),c[o]=u),u}(x,d,l);c!==t&&(c=t,h(c.object)),M=function(e,t,n,r){const i=c.attributes,a=t.attributes;let o=0;const s=n.getAttributes();for(const t in s)if(s[t].location>=0){const n=i[t];let r=a[t];if(void 0===r&&("instanceMatrix"===t&&e.instanceMatrix&&(r=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(r=e.instanceColor)),void 0===n)return!0;if(n.attribute!==r)return!0;if(r&&n.data!==r.data)return!0;o++}return c.attributesNum!==o||c.index!==r}(i,x,d,y),M&&function(e,t,n,r){const i={},a=t.attributes;let o=0;const s=n.getAttributes();for(const t in s)if(s[t].location>=0){let n=a[t];void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor));const r={};r.attribute=n,n&&n.data&&(r.data=n.data),i[t]=r,o++}c.attributes=i,c.attributesNum=o,c.index=r}(i,x,d,y)}else{const e=!0===l.wireframe;c.geometry===x.id&&c.program===d.id&&c.wireframe===e||(c.geometry=x.id,c.program=d.id,c.wireframe=e,M=!0)}null!==y&&n.update(y,e.ELEMENT_ARRAY_BUFFER),(M||u)&&(u=!1,function(i,a,o,s){if(!1===r.isWebGL2&&(i.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();const l=s.attributes,c=o.getAttributes(),u=a.defaultAttributeValues;for(const t in c){const a=c[t];if(a.location>=0){let o=l[t];if(void 0===o&&("instanceMatrix"===t&&i.instanceMatrix&&(o=i.instanceMatrix),"instanceColor"===t&&i.instanceColor&&(o=i.instanceColor)),void 0!==o){const t=o.normalized,l=o.itemSize,c=n.get(o);if(void 0===c)continue;const u=c.buffer,h=c.type,d=c.bytesPerElement,f=!0===r.isWebGL2&&(h===e.INT||h===e.UNSIGNED_INT||1013===o.gpuType);if(o.isInterleavedBufferAttribute){const n=o.data,r=n.stride,c=o.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<a.locationSize;e++)g(a.location+e,n.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<a.locationSize;e++)m(a.location+e);e.bindBuffer(e.ARRAY_BUFFER,u);for(let e=0;e<a.locationSize;e++)v(a.location+e,l/a.locationSize,h,t,r*d,(c+l/a.locationSize*e)*d,f)}else{if(o.isInstancedBufferAttribute){for(let e=0;e<a.locationSize;e++)g(a.location+e,o.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let e=0;e<a.locationSize;e++)m(a.location+e);e.bindBuffer(e.ARRAY_BUFFER,u);for(let e=0;e<a.locationSize;e++)v(a.location+e,l/a.locationSize,h,t,l*d,l/a.locationSize*e*d,f)}}else if(void 0!==u){const n=u[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(a.location,n);break;case 3:e.vertexAttrib3fv(a.location,n);break;case 4:e.vertexAttrib4fv(a.location,n);break;default:e.vertexAttrib1fv(a.location,n)}}}}_()}(i,l,d,x),null!==y&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.get(y).buffer))},reset:x,resetDefaultState:y,dispose:function(){x();for(const e in s){const t=s[e];for(const e in t){const n=t[e];for(const e in n)d(n[e].object),delete n[e];delete t[e]}delete s[e]}},releaseStatesOfGeometry:function(e){if(void 0===s[e.id])return;const t=s[e.id];for(const e in t){const n=t[e];for(const e in n)d(n[e].object),delete n[e];delete t[e]}delete s[e.id]},releaseStatesOfProgram:function(e){for(const t in s){const n=s[t];if(void 0===n[e.id])continue;const r=n[e.id];for(const e in r)d(r[e].object),delete r[e];delete n[e.id]}},initAttributes:p,enableAttribute:m,disableUnusedAttributes:_}}function br(e,t,n,r){const i=r.isWebGL2;let a;this.setMode=function(e){a=e},this.render=function(t,r){e.drawArrays(a,t,r),n.update(r,a,1)},this.renderInstances=function(r,o,s){if(0===s)return;let l,c;if(i)l=e,c="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](a,r,o,s),n.update(o,a,s)}}function Er(e,t,n){let r;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===e.constructor.name;let o=void 0!==n.precision?n.precision:"highp";const s=i(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);const l=a||t.has("WEBGL_draw_buffers"),c=!0===n.logarithmicDepthBuffer,u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_TEXTURE_SIZE),f=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),p=e.getParameter(e.MAX_VERTEX_ATTRIBS),m=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),g=e.getParameter(e.MAX_VARYING_VECTORS),_=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),v=h>0,x=a||t.has("OES_texture_float");return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:f,maxAttributes:p,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:_,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:v&&x,maxSamples:a?e.getParameter(e.MAX_SAMPLES):0}}function Sr(e){const t=this;let n=null,r=0,i=!1,a=!1;const o=new cr,s=new ve,l={value:null,needsUpdate:!1};function c(e,n,r,i){const a=null!==e?e.length:0;let c=null;if(0!==a){if(c=l.value,!0!==i||null===c){const t=r+4*a,i=n.matrixWorldInverse;s.getNormalMatrix(i),(null===c||c.length<t)&&(c=new Float32Array(t));for(let t=0,n=r;t!==a;++t,n+=4)o.copy(e[t]).applyMatrix4(i,s),o.normal.toArray(c,n),c[n+3]=o.constant}l.value=c,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){const n=0!==e.length||t||0!==r||i;return i=t,r=e.length,n},this.beginShadows=function(){a=!0,c(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){n=c(e,t,0)},this.setState=function(o,s,u){const h=o.clippingPlanes,d=o.clipIntersection,f=o.clipShadows,p=e.get(o);if(!i||null===h||0===h.length||a&&!f)a?c(null):(l.value!==n&&(l.value=n,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0);else{const e=a?0:r,t=4*e;let i=p.clippingState||null;l.value=i,i=c(h,s,t,u);for(let e=0;e!==t;++e)i[e]=n[e];p.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function Tr(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=v:304===t&&(e.mapping=x),e}function r(e){const n=e.target;n.removeEventListener("dispose",r);const i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){const a=i.mapping;if(303===a||304===a){if(t.has(i))return n(t.get(i).texture,i.mapping);{const a=i.image;if(a&&a.height>0){const o=new ar(a.height/2);return o.fromEquirectangularTexture(e,i),t.set(i,o),i.addEventListener("dispose",r),n(o.texture,i.mapping)}return null}}}return i},dispose:function(){t=new WeakMap}}}class Ar extends er{constructor(e=-1,t=1,n=1,r=-1,i=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-e,a=n+e,o=r+t,s=r-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,a=i+e*this.view.width,o-=t*this.view.offsetY,s=o-t*this.view.height}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const wr=[.125,.215,.35,.446,.526,.582],Rr=new Ar,Pr=new un;let Cr=null,Lr=0,Ur=0;const Ir=(1+Math.sqrt(5))/2,Dr=1/Ir,Nr=[new je(1,1,1),new je(-1,1,1),new je(1,1,-1),new je(-1,1,-1),new je(0,Ir,Dr),new je(0,Ir,-Dr),new je(Dr,0,Ir),new je(-Dr,0,Ir),new je(Ir,Dr,0),new je(-Ir,Dr,0)];class Fr{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){Cr=this._renderer.getRenderTarget(),Lr=this._renderer.getActiveCubeFace(),Ur=this._renderer.getActiveMipmapLevel(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,n,r,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Vr(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=zr(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Cr,Lr,Ur),e.scissorTest=!1,Br(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===v||e.mapping===x?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Cr=this._renderer.getRenderTarget(),Lr=this._renderer.getActiveCubeFace(),Ur=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:A,minFilter:A,generateMipmaps:!1,type:U,format:D,colorSpace:Y,depthBuffer:!1},r=Or(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Or(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],r=[];let i=e;const a=e-4+1+wr.length;for(let o=0;o<a;o++){const a=Math.pow(2,i);n.push(a);let s=1/a;o>e-4?s=wr[o-e+4-1]:0===o&&(s=0),r.push(s);const l=1/(a-2),c=-l,u=1+l,h=[c,c,u,c,u,u,c,c,u,u,c,u],d=6,f=6,p=3,m=2,g=1,_=new Float32Array(p*f*d),v=new Float32Array(m*f*d),x=new Float32Array(g*f*d);for(let e=0;e<d;e++){const t=e%3*2/3-1,n=e>2?0:-1,r=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];_.set(r,p*f*e),v.set(h,m*f*e);const i=[e,e,e,e,e,e];x.set(i,g*f*e)}const y=new Rn;y.setAttribute("position",new _n(_,p)),y.setAttribute("uv",new _n(v,m)),y.setAttribute("faceIndex",new _n(x,g)),t.push(y),i>4&&i--}return{lodPlanes:t,sizeLods:n,sigmas:r}}(r)),this._blurMaterial=function(e,t,n){const r=new Float32Array(20),i=new je(0,1,0);return new Qn({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(r,e,t)}return r}_compileMaterial(e){const t=new Xn(this._lodPlanes[0],e);this._renderer.compile(t,Rr)}_sceneToCubeUV(e,t,n,r){const i=new tr(90,1,t,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,l=s.autoClear,c=s.toneMapping;s.getClearColor(Pr),s.toneMapping=d,s.autoClear=!1;const u=new pn({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),h=new Xn(new Yn,u);let f=!1;const p=e.background;p?p.isColor&&(u.color.copy(p),e.background=null,f=!0):(u.color.copy(Pr),f=!0);for(let t=0;t<6;t++){const n=t%3;0===n?(i.up.set(0,a[t],0),i.lookAt(o[t],0,0)):1===n?(i.up.set(0,0,a[t]),i.lookAt(0,o[t],0)):(i.up.set(0,a[t],0),i.lookAt(0,0,o[t]));const l=this._cubeSize;Br(r,n*l,t>2?l:0,l,l),s.setRenderTarget(r),f&&s.render(h,i),s.render(e,i)}h.geometry.dispose(),h.material.dispose(),s.toneMapping=c,s.autoClear=l,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===v||e.mapping===x;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=Vr()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=zr());const i=r?this._cubemapMaterial:this._equirectMaterial,a=new Xn(this._lodPlanes[0],i);i.uniforms.envMap.value=e;const o=this._cubeSize;Br(t,0,0,3*o,2*o),n.setRenderTarget(t),n.render(a,Rr)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),r=Nr[(t-1)%Nr.length];this._blur(e,t-1,t,n,r)}t.autoClear=n}_blur(e,t,n,r,i){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,r,"latitudinal",i),this._halfBlur(a,e,n,n,r,"longitudinal",i)}_halfBlur(e,t,n,r,i,a,o){const s=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Xn(this._lodPlanes[r],l),u=l.uniforms,h=this._sizeLods[n]-1,d=isFinite(i)?Math.PI/(2*h):2*Math.PI/39,f=i/d,p=isFinite(i)?1+Math.floor(3*f):20;p>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${p} samples when the maximum is set to 20`);const m=[];let g=0;for(let e=0;e<20;++e){const t=e/f,n=Math.exp(-t*t/2);m.push(n),0===e?g+=n:e<p&&(g+=2*n)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;u.envMap.value=e.texture,u.samples.value=p,u.weights.value=m,u.latitudinal.value="latitudinal"===a,o&&(u.poleAxis.value=o);const{_lodMax:_}=this;u.dTheta.value=d,u.mipInt.value=_-n;const v=this._sizeLods[r];Br(t,3*v*(r>_-4?r-_+4:0),4*(this._cubeSize-v),3*v,2*v),s.setRenderTarget(t),s.render(c,Rr)}}function Or(e,t,n){const r=new He(e,t,n);return r.texture.mapping=y,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function Br(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function zr(){return new Qn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Vr(){return new Qn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Hr(e){let t=new WeakMap,n=null;function r(e){const n=e.target;n.removeEventListener("dispose",r);const i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const a=i.mapping,o=303===a||304===a,s=a===v||a===x;if(o||s){if(i.isRenderTargetTexture&&!0===i.needsPMREMUpdate){i.needsPMREMUpdate=!1;let r=t.get(i);return null===n&&(n=new Fr(e)),r=o?n.fromEquirectangular(i,r):n.fromCubemap(i,r),t.set(i,r),r.texture}if(t.has(i))return t.get(i).texture;{const a=i.image;if(o&&a&&a.height>0||s&&a&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(a)){null===n&&(n=new Fr(e));const a=o?n.fromEquirectangular(i):n.fromCubemap(i);return t.set(i,a),i.addEventListener("dispose",r),a.texture}return null}}}return i},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Gr(e){const t={};function n(n){if(void 0!==t[n])return t[n];let r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return t[n]=r,r}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function kr(e,t,n,r){const i={},a=new WeakMap;function o(e){const s=e.target;null!==s.index&&t.remove(s.index);for(const e in s.attributes)t.remove(s.attributes[e]);for(const e in s.morphAttributes){const n=s.morphAttributes[e];for(let e=0,r=n.length;e<r;e++)t.remove(n[e])}s.removeEventListener("dispose",o),delete i[s.id];const l=a.get(s);l&&(t.remove(l),a.delete(s)),r.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,n.memory.geometries--}function s(e){const n=[],r=e.index,i=e.attributes.position;let o=0;if(null!==r){const e=r.array;o=r.version;for(let t=0,r=e.length;t<r;t+=3){const r=e[t+0],i=e[t+1],a=e[t+2];n.push(r,i,i,a,a,r)}}else{if(void 0===i)return;{const e=i.array;o=i.version;for(let t=0,r=e.length/3-1;t<r;t+=3){const e=t+0,r=t+1,i=t+2;n.push(e,r,r,i,i,e)}}}const s=new(ye(n)?xn:vn)(n,1);s.version=o;const l=a.get(e);l&&t.remove(l),a.set(e,s)}return{get:function(e,t){return!0===i[t.id]||(t.addEventListener("dispose",o),i[t.id]=!0,n.memory.geometries++),t},update:function(n){const r=n.attributes;for(const n in r)t.update(r[n],e.ARRAY_BUFFER);const i=n.morphAttributes;for(const n in i){const r=i[n];for(let n=0,i=r.length;n<i;n++)t.update(r[n],e.ARRAY_BUFFER)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&s(e)}else s(e);return a.get(e)}}}function Wr(e,t,n,r){const i=r.isWebGL2;let a,o,s;this.setMode=function(e){a=e},this.setIndex=function(e){o=e.type,s=e.bytesPerElement},this.render=function(t,r){e.drawElements(a,r,o,t*s),n.update(r,a,1)},this.renderInstances=function(r,l,c){if(0===c)return;let u,h;if(i)u=e,h="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===u)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[h](a,l,o,r*s,c),n.update(l,a,c)}}function jr(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(n,r,i){switch(t.calls++,r){case e.TRIANGLES:t.triangles+=i*(n/3);break;case e.LINES:t.lines+=i*(n/2);break;case e.LINE_STRIP:t.lines+=i*(n-1);break;case e.LINE_LOOP:t.lines+=i*n;break;case e.POINTS:t.points+=i*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function Xr(e,t){return e[0]-t[0]}function qr(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Yr(e,t,n){const r={},i=new Float32Array(8),a=new WeakMap,o=new ze,s=[];for(let e=0;e<8;e++)s[e]=[e,0];return{update:function(l,c,u){const h=l.morphTargetInfluences;if(!0===t.isWebGL2){const d=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,f=void 0!==d?d.length:0;let p=a.get(c);if(void 0===p||p.count!==f){void 0!==p&&p.texture.dispose();const _=void 0!==c.morphAttributes.position,v=void 0!==c.morphAttributes.normal,x=void 0!==c.morphAttributes.color,y=c.morphAttributes.position||[],M=c.morphAttributes.normal||[],b=c.morphAttributes.color||[];let E=0;!0===_&&(E=1),!0===v&&(E=2),!0===x&&(E=3);let S=c.attributes.position.count*E,T=1;S>t.maxTextureSize&&(T=Math.ceil(S/t.maxTextureSize),S=t.maxTextureSize);const A=new Float32Array(S*T*4*f),w=new Ge(A,S,T,f);w.type=L,w.needsUpdate=!0;const R=4*E;for(let C=0;C<f;C++){const U=y[C],I=M[C],D=b[C],N=S*T*4*C;for(let F=0;F<U.count;F++){const O=F*R;!0===_&&(o.fromBufferAttribute(U,F),A[N+O+0]=o.x,A[N+O+1]=o.y,A[N+O+2]=o.z,A[N+O+3]=0),!0===v&&(o.fromBufferAttribute(I,F),A[N+O+4]=o.x,A[N+O+5]=o.y,A[N+O+6]=o.z,A[N+O+7]=0),!0===x&&(o.fromBufferAttribute(D,F),A[N+O+8]=o.x,A[N+O+9]=o.y,A[N+O+10]=o.z,A[N+O+11]=4===D.itemSize?o.w:1)}}function P(){w.dispose(),a.delete(c),c.removeEventListener("dispose",P)}p={count:f,texture:w,size:new _e(S,T)},a.set(c,p),c.addEventListener("dispose",P)}let m=0;for(let B=0;B<h.length;B++)m+=h[B];const g=c.morphTargetsRelative?1:1-m;u.getUniforms().setValue(e,"morphTargetBaseInfluence",g),u.getUniforms().setValue(e,"morphTargetInfluences",h),u.getUniforms().setValue(e,"morphTargetsTexture",p.texture,n),u.getUniforms().setValue(e,"morphTargetsTextureSize",p.size)}else{const z=void 0===h?0:h.length;let V=r[c.id];if(void 0===V||V.length!==z){V=[];for(let j=0;j<z;j++)V[j]=[j,0];r[c.id]=V}for(let X=0;X<z;X++){const q=V[X];q[0]=X,q[1]=h[X]}V.sort(qr);for(let Y=0;Y<8;Y++)Y<z&&V[Y][1]?(s[Y][0]=V[Y][0],s[Y][1]=V[Y][1]):(s[Y][0]=Number.MAX_SAFE_INTEGER,s[Y][1]=0);s.sort(Xr);const H=c.morphAttributes.position,G=c.morphAttributes.normal;let k=0;for(let K=0;K<8;K++){const Z=s[K],J=Z[0],$=Z[1];J!==Number.MAX_SAFE_INTEGER&&$?(H&&c.getAttribute("morphTarget"+K)!==H[J]&&c.setAttribute("morphTarget"+K,H[J]),G&&c.getAttribute("morphNormal"+K)!==G[J]&&c.setAttribute("morphNormal"+K,G[J]),i[K]=$,k+=$):(H&&!0===c.hasAttribute("morphTarget"+K)&&c.deleteAttribute("morphTarget"+K),G&&!0===c.hasAttribute("morphNormal"+K)&&c.deleteAttribute("morphNormal"+K),i[K]=0)}const W=c.morphTargetsRelative?1:1-k;u.getUniforms().setValue(e,"morphTargetBaseInfluence",W),u.getUniforms().setValue(e,"morphTargetInfluences",i)}}}}function Kr(e,t,n,r){let i=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(o){const s=r.render.frame,l=o.geometry,c=t.get(o,l);if(i.get(c)!==s&&(t.update(c),i.set(c,s)),o.isInstancedMesh&&(!1===o.hasEventListener("dispose",a)&&o.addEventListener("dispose",a),i.get(o)!==s&&(n.update(o.instanceMatrix,e.ARRAY_BUFFER),null!==o.instanceColor&&n.update(o.instanceColor,e.ARRAY_BUFFER),i.set(o,s))),o.isSkinnedMesh){const e=o.skeleton;i.get(e)!==s&&(e.update(),i.set(e,s))}return c},dispose:function(){i=new WeakMap}}}const Zr=new Be,Jr=new Ge,$r=new ke,Qr=new ir,ei=[],ti=[],ni=new Float32Array(16),ri=new Float32Array(9),ii=new Float32Array(4);function ai(e,t,n){const r=e[0];if(r<=0||r>0)return e;const i=t*n;let a=ei[i];if(void 0===a&&(a=new Float32Array(i),ei[i]=a),0!==t){r.toArray(a,0);for(let r=1,i=0;r!==t;++r)i+=n,e[r].toArray(a,i)}return a}function oi(e,t){if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function si(e,t){for(let n=0,r=t.length;n<r;n++)e[n]=t[n]}function li(e,t){let n=ti[t];void 0===n&&(n=new Int32Array(t),ti[t]=n);for(let r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}function ci(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function ui(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(oi(n,t))return;e.uniform2fv(this.addr,t),si(n,t)}}function hi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(oi(n,t))return;e.uniform3fv(this.addr,t),si(n,t)}}function di(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(oi(n,t))return;e.uniform4fv(this.addr,t),si(n,t)}}function fi(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(oi(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),si(n,t)}else{if(oi(n,r))return;ii.set(r),e.uniformMatrix2fv(this.addr,!1,ii),si(n,r)}}function pi(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(oi(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),si(n,t)}else{if(oi(n,r))return;ri.set(r),e.uniformMatrix3fv(this.addr,!1,ri),si(n,r)}}function mi(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(oi(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),si(n,t)}else{if(oi(n,r))return;ni.set(r),e.uniformMatrix4fv(this.addr,!1,ni),si(n,r)}}function gi(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function _i(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(oi(n,t))return;e.uniform2iv(this.addr,t),si(n,t)}}function vi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(oi(n,t))return;e.uniform3iv(this.addr,t),si(n,t)}}function xi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(oi(n,t))return;e.uniform4iv(this.addr,t),si(n,t)}}function yi(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Mi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(oi(n,t))return;e.uniform2uiv(this.addr,t),si(n,t)}}function bi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(oi(n,t))return;e.uniform3uiv(this.addr,t),si(n,t)}}function Ei(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(oi(n,t))return;e.uniform4uiv(this.addr,t),si(n,t)}}function Si(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2D(t||Zr,i)}function Ti(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||$r,i)}function Ai(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(t||Qr,i)}function wi(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||Jr,i)}function Ri(e,t){e.uniform1fv(this.addr,t)}function Pi(e,t){const n=ai(t,this.size,2);e.uniform2fv(this.addr,n)}function Ci(e,t){const n=ai(t,this.size,3);e.uniform3fv(this.addr,n)}function Li(e,t){const n=ai(t,this.size,4);e.uniform4fv(this.addr,n)}function Ui(e,t){const n=ai(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Ii(e,t){const n=ai(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Di(e,t){const n=ai(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Ni(e,t){e.uniform1iv(this.addr,t)}function Fi(e,t){e.uniform2iv(this.addr,t)}function Oi(e,t){e.uniform3iv(this.addr,t)}function Bi(e,t){e.uniform4iv(this.addr,t)}function zi(e,t){e.uniform1uiv(this.addr,t)}function Vi(e,t){e.uniform2uiv(this.addr,t)}function Hi(e,t){e.uniform3uiv(this.addr,t)}function Gi(e,t){e.uniform4uiv(this.addr,t)}function ki(e,t,n){const r=this.cache,i=t.length,a=li(n,i);oi(r,a)||(e.uniform1iv(this.addr,a),si(r,a));for(let e=0;e!==i;++e)n.setTexture2D(t[e]||Zr,a[e])}function Wi(e,t,n){const r=this.cache,i=t.length,a=li(n,i);oi(r,a)||(e.uniform1iv(this.addr,a),si(r,a));for(let e=0;e!==i;++e)n.setTexture3D(t[e]||$r,a[e])}function ji(e,t,n){const r=this.cache,i=t.length,a=li(n,i);oi(r,a)||(e.uniform1iv(this.addr,a),si(r,a));for(let e=0;e!==i;++e)n.setTextureCube(t[e]||Qr,a[e])}function Xi(e,t,n){const r=this.cache,i=t.length,a=li(n,i);oi(r,a)||(e.uniform1iv(this.addr,a),si(r,a));for(let e=0;e!==i;++e)n.setTexture2DArray(t[e]||Jr,a[e])}class qi{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return ci;case 35664:return ui;case 35665:return hi;case 35666:return di;case 35674:return fi;case 35675:return pi;case 35676:return mi;case 5124:case 35670:return gi;case 35667:case 35671:return _i;case 35668:case 35672:return vi;case 35669:case 35673:return xi;case 5125:return yi;case 36294:return Mi;case 36295:return bi;case 36296:return Ei;case 35678:case 36198:case 36298:case 36306:case 35682:return Si;case 35679:case 36299:case 36307:return Ti;case 35680:case 36300:case 36308:case 36293:return Ai;case 36289:case 36303:case 36311:case 36292:return wi}}(t.type)}}class Yi{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Ri;case 35664:return Pi;case 35665:return Ci;case 35666:return Li;case 35674:return Ui;case 35675:return Ii;case 35676:return Di;case 5124:case 35670:return Ni;case 35667:case 35671:return Fi;case 35668:case 35672:return Oi;case 35669:case 35673:return Bi;case 5125:return zi;case 36294:return Vi;case 36295:return Hi;case 36296:return Gi;case 35678:case 36198:case 36298:case 36306:case 35682:return ki;case 35679:case 36299:case 36307:return Wi;case 35680:case 36300:case 36308:case 36293:return ji;case 36289:case 36303:case 36311:case 36292:return Xi}}(t.type)}}class Ki{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let i=0,a=r.length;i!==a;++i){const a=r[i];a.setValue(e,t[a.id],n)}}}const Zi=/(\w+)(\])?(\[|\.)?/g;function Ji(e,t){e.seq.push(t),e.map[t.id]=t}function $i(e,t,n){const r=e.name,i=r.length;for(Zi.lastIndex=0;;){const a=Zi.exec(r),o=Zi.lastIndex;let s=a[1];const l="]"===a[2],c=a[3];if(l&&(s|=0),void 0===c||"["===c&&o+2===i){Ji(n,void 0===c?new qi(s,e,t):new Yi(s,e,t));break}{let e=n.map[s];void 0===e&&(e=new Ki(s),Ji(n,e)),n=e}}}class Qi{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const n=e.getActiveUniform(t,r);$i(n,e.getUniformLocation(t,n.name),this)}}setValue(e,t,n,r){const i=this.map[t];void 0!==i&&i.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];void 0!==r&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let i=0,a=t.length;i!==a;++i){const a=t[i],o=n[a.id];!1!==o.needsUpdate&&a.setValue(e,o.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,i=e.length;r!==i;++r){const i=e[r];i.id in t&&n.push(i)}return n}}function ea(e,t,n){const r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}const ta=37297;let na=0;function ra(e,t,n){const r=e.getShaderParameter(t,e.COMPILE_STATUS),i=e.getShaderInfoLog(t).trim();if(r&&""===i)return"";const a=/ERROR: 0:(\d+)/.exec(i);if(a){const r=parseInt(a[1]);return n.toUpperCase()+"\n\n"+i+"\n\n"+function(e,t){const n=e.split("\n"),r=[],i=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let e=i;e<a;e++){const i=e+1;r.push(`${i===t?">":" "} ${i}: ${n[e]}`)}return r.join("\n")}(e.getShaderSource(t),r)}return i}function ia(e,t){const n=function(e){const t=Pe.getPrimaries(Pe.workingColorSpace),n=Pe.getPrimaries(e);let r;switch(t===n?r="":t===ee&&n===Q?r="LinearDisplayP3ToLinearSRGB":t===Q&&n===ee&&(r="LinearSRGBToLinearDisplayP3"),e){case Y:case Z:return[r,"LinearTransferOETF"];case q:case K:return[r,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),[r,"LinearTransferOETF"]}}(t);return`vec4 ${e}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}function aa(e,t){let n;switch(t){case f:n="Linear";break;case p:n="Reinhard";break;case m:n="OptimizedCineon";break;case g:n="ACESFilmic";break;case _:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function oa(e){return""!==e}function sa(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function la(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const ca=/^[ \t]*#include +<([\w\d./]+)>/gm;function ua(e){return e.replace(ca,da)}const ha=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function da(e,t){let n=gr[t];if(void 0===n){const e=ha.get(t);if(void 0===e)throw new Error("Can not resolve #include <"+t+">");n=gr[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e)}return ua(n)}const fa=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function pa(e){return e.replace(fa,ma)}function ma(e,t,n,r){let i="";for(let e=parseInt(t);e<parseInt(n);e++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function ga(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function _a(e,t,n,r){const s=e.getContext(),l=n.defines;let f=n.vertexShader,p=n.fragmentShader;const m=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===i?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===a?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===o&&(t="SHADOWMAP_TYPE_VSM"),t}(n),g=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case v:case x:t="ENVMAP_TYPE_CUBE";break;case y:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),_=function(e){let t="ENVMAP_MODE_REFLECTION";return e.envMap&&e.envMapMode===x&&(t="ENVMAP_MODE_REFRACTION"),t}(n),M=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case c:t="ENVMAP_BLENDING_MULTIPLY";break;case u:t="ENVMAP_BLENDING_MIX";break;case h:t="ENVMAP_BLENDING_ADD"}return t}(n),b=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t)-2,r=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:r,maxMip:n}}(n),E=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.normalMapTangentSpace||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(oa).join("\n")}(n),S=function(e){const t=[];for(const n in e){const r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(l),T=s.createProgram();let A,w,R=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(A=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,S].filter(oa).join("\n"),A.length>0&&(A+="\n"),w=[E,"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,S].filter(oa).join("\n"),w.length>0&&(w+="\n")):(A=[ga(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,S,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+_:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+m:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(oa).join("\n"),w=[E,ga(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,S,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+g:"",n.envMap?"#define "+_:"",n.envMap?"#define "+M:"",b?"#define CUBEUV_TEXEL_WIDTH "+b.texelWidth:"",b?"#define CUBEUV_TEXEL_HEIGHT "+b.texelHeight:"",b?"#define CUBEUV_MAX_MIP "+b.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+m:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==d?"#define TONE_MAPPING":"",n.toneMapping!==d?gr.tonemapping_pars_fragment:"",n.toneMapping!==d?aa("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",gr.colorspace_pars_fragment,ia("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(oa).join("\n")),f=ua(f),f=sa(f,n),f=la(f,n),p=ua(p),p=sa(p,n),p=la(p,n),f=pa(f),p=pa(p),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(R="#version 300 es\n",A=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+A,w=["precision mediump sampler2DArray;","#define varying in",n.glslVersion===ne?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===ne?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+w);const P=R+A+f,C=R+w+p,L=ea(s,s.VERTEX_SHADER,P),U=ea(s,s.FRAGMENT_SHADER,C);function I(t){if(e.debug.checkShaderErrors){const n=s.getProgramInfoLog(T).trim(),r=s.getShaderInfoLog(L).trim(),i=s.getShaderInfoLog(U).trim();let a=!0,o=!0;if(!1===s.getProgramParameter(T,s.LINK_STATUS))if(a=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(s,T,L,U);else{const e=ra(s,L,"vertex"),t=ra(s,U,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(T,s.VALIDATE_STATUS)+"\n\nProgram Info Log: "+n+"\n"+e+"\n"+t)}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):""!==r&&""!==i||(o=!1);o&&(t.diagnostics={runnable:a,programLog:n,vertexShader:{log:r,prefix:A},fragmentShader:{log:i,prefix:w}})}s.deleteShader(L),s.deleteShader(U),D=new Qi(s,T),N=function(e,t){const n={},r=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let i=0;i<r;i++){const r=e.getActiveAttrib(t,i),a=r.name;let o=1;r.type===e.FLOAT_MAT2&&(o=2),r.type===e.FLOAT_MAT3&&(o=3),r.type===e.FLOAT_MAT4&&(o=4),n[a]={type:r.type,location:e.getAttribLocation(t,a),locationSize:o}}return n}(s,T)}let D,N;s.attachShader(T,L),s.attachShader(T,U),void 0!==n.index0AttributeName?s.bindAttribLocation(T,0,n.index0AttributeName):!0===n.morphTargets&&s.bindAttribLocation(T,0,"position"),s.linkProgram(T),this.getUniforms=function(){return void 0===D&&I(this),D},this.getAttributes=function(){return void 0===N&&I(this),N};let F=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===F&&(F=s.getProgramParameter(T,ta)),F},this.destroy=function(){r.releaseStatesOfProgram(this),s.deleteProgram(T),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=na++,this.cacheKey=t,this.usedTimes=1,this.program=T,this.vertexShader=L,this.fragmentShader=U,this}let va=0;class xa{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),i=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(i)&&(a.add(i),i.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return void 0===n&&(n=new ya(e),t.set(e,n)),n}}class ya{constructor(e){this.id=va++,this.code=e,this.usedTimes=0}}function Ma(e,t,n,r,i,a,o){const s=new Ut,l=new xa,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,f=i.vertexTextures;let p=i.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(e){return 0===e?"uv":`uv${e}`}return{getParameters:function(a,s,c,_,v){const x=_.fog,M=v.geometry,b=a.isMeshStandardMaterial?_.environment:null,E=(a.isMeshStandardMaterial?n:t).get(a.envMap||b),S=E&&E.mapping===y?E.image.height:null,T=m[a.type];null!==a.precision&&(p=i.getMaxPrecision(a.precision),p!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead."));const A=M.morphAttributes.position||M.morphAttributes.normal||M.morphAttributes.color,w=void 0!==A?A.length:0;let R,P,C,L,U=0;if(void 0!==M.morphAttributes.position&&(U=1),void 0!==M.morphAttributes.normal&&(U=2),void 0!==M.morphAttributes.color&&(U=3),T){const e=vr[T];R=e.vertexShader,P=e.fragmentShader}else R=a.vertexShader,P=a.fragmentShader,l.update(a),C=l.getVertexShaderID(a),L=l.getFragmentShaderID(a);const I=e.getRenderTarget(),D=!0===v.isInstancedMesh,N=!!a.map,F=!!a.matcap,O=!!E,B=!!a.aoMap,z=!!a.lightMap,V=!!a.bumpMap,H=!!a.normalMap,G=!!a.displacementMap,k=!!a.emissiveMap,W=!!a.metalnessMap,j=!!a.roughnessMap,X=a.anisotropy>0,q=a.clearcoat>0,K=a.iridescence>0,Z=a.sheen>0,J=a.transmission>0,Q=X&&!!a.anisotropyMap,ee=q&&!!a.clearcoatMap,te=q&&!!a.clearcoatNormalMap,ne=q&&!!a.clearcoatRoughnessMap,re=K&&!!a.iridescenceMap,ie=K&&!!a.iridescenceThicknessMap,ae=Z&&!!a.sheenColorMap,oe=Z&&!!a.sheenRoughnessMap,se=!!a.specularMap,le=!!a.specularColorMap,ce=!!a.specularIntensityMap,ue=J&&!!a.transmissionMap,he=J&&!!a.thicknessMap,de=!!a.gradientMap,fe=!!a.alphaMap,pe=a.alphaTest>0,me=!!a.alphaHash,ge=!!a.extensions,_e=!!M.attributes.uv1,ve=!!M.attributes.uv2,xe=!!M.attributes.uv3;let ye=d;return a.toneMapped&&(null!==I&&!0!==I.isXRRenderTarget||(ye=e.toneMapping)),{isWebGL2:u,shaderID:T,shaderType:a.type,shaderName:a.name,vertexShader:R,fragmentShader:P,defines:a.defines,customVertexShaderID:C,customFragmentShaderID:L,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,instancing:D,instancingColor:D&&null!==v.instanceColor,supportsVertexTextures:f,outputColorSpace:null===I?e.outputColorSpace:!0===I.isXRRenderTarget?I.texture.colorSpace:Y,map:N,matcap:F,envMap:O,envMapMode:O&&E.mapping,envMapCubeUVHeight:S,aoMap:B,lightMap:z,bumpMap:V,normalMap:H,displacementMap:f&&G,emissiveMap:k,normalMapObjectSpace:H&&1===a.normalMapType,normalMapTangentSpace:H&&0===a.normalMapType,metalnessMap:W,roughnessMap:j,anisotropy:X,anisotropyMap:Q,clearcoat:q,clearcoatMap:ee,clearcoatNormalMap:te,clearcoatRoughnessMap:ne,iridescence:K,iridescenceMap:re,iridescenceThicknessMap:ie,sheen:Z,sheenColorMap:ae,sheenRoughnessMap:oe,specularMap:se,specularColorMap:le,specularIntensityMap:ce,transmission:J,transmissionMap:ue,thicknessMap:he,gradientMap:de,opaque:!1===a.transparent&&1===a.blending,alphaMap:fe,alphaTest:pe,alphaHash:me,combine:a.combine,mapUv:N&&g(a.map.channel),aoMapUv:B&&g(a.aoMap.channel),lightMapUv:z&&g(a.lightMap.channel),bumpMapUv:V&&g(a.bumpMap.channel),normalMapUv:H&&g(a.normalMap.channel),displacementMapUv:G&&g(a.displacementMap.channel),emissiveMapUv:k&&g(a.emissiveMap.channel),metalnessMapUv:W&&g(a.metalnessMap.channel),roughnessMapUv:j&&g(a.roughnessMap.channel),anisotropyMapUv:Q&&g(a.anisotropyMap.channel),clearcoatMapUv:ee&&g(a.clearcoatMap.channel),clearcoatNormalMapUv:te&&g(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ne&&g(a.clearcoatRoughnessMap.channel),iridescenceMapUv:re&&g(a.iridescenceMap.channel),iridescenceThicknessMapUv:ie&&g(a.iridescenceThicknessMap.channel),sheenColorMapUv:ae&&g(a.sheenColorMap.channel),sheenRoughnessMapUv:oe&&g(a.sheenRoughnessMap.channel),specularMapUv:se&&g(a.specularMap.channel),specularColorMapUv:le&&g(a.specularColorMap.channel),specularIntensityMapUv:ce&&g(a.specularIntensityMap.channel),transmissionMapUv:ue&&g(a.transmissionMap.channel),thicknessMapUv:he&&g(a.thicknessMap.channel),alphaMapUv:fe&&g(a.alphaMap.channel),vertexTangents:!!M.attributes.tangent&&(H||X),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!M.attributes.color&&4===M.attributes.color.itemSize,vertexUv1s:_e,vertexUv2s:ve,vertexUv3s:xe,pointsUvs:!0===v.isPoints&&!!M.attributes.uv&&(N||fe),fog:!!x,useFog:!0===a.fog,fogExp2:x&&x.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:h,skinning:!0===v.isSkinnedMesh,morphTargets:void 0!==M.morphAttributes.position,morphNormals:void 0!==M.morphAttributes.normal,morphColors:void 0!==M.morphAttributes.color,morphTargetsCount:w,morphTextureStride:U,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numSpotLightMaps:s.spotLightMap.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numSpotLightShadowsWithMaps:s.numSpotLightShadowsWithMaps,numLightProbes:s.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&c.length>0,shadowMapType:e.shadowMap.type,toneMapping:ye,useLegacyLights:e._useLegacyLights,decodeVideoTexture:N&&!0===a.map.isVideoTexture&&Pe.getTransfer(a.map.colorSpace)===$,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:ge&&!0===a.extensions.derivatives,extensionFragDepth:ge&&!0===a.extensions.fragDepth,extensionDrawBuffers:ge&&!0===a.extensions.drawBuffers,extensionShaderTextureLOD:ge&&!0===a.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||r.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:r.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(function(e,t){e.push(t.precision),e.push(t.outputColorSpace),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.mapUv),e.push(t.alphaMapUv),e.push(t.lightMapUv),e.push(t.aoMapUv),e.push(t.bumpMapUv),e.push(t.normalMapUv),e.push(t.displacementMapUv),e.push(t.emissiveMapUv),e.push(t.metalnessMapUv),e.push(t.roughnessMapUv),e.push(t.anisotropyMapUv),e.push(t.clearcoatMapUv),e.push(t.clearcoatNormalMapUv),e.push(t.clearcoatRoughnessMapUv),e.push(t.iridescenceMapUv),e.push(t.iridescenceThicknessMapUv),e.push(t.sheenColorMapUv),e.push(t.sheenRoughnessMapUv),e.push(t.specularMapUv),e.push(t.specularColorMapUv),e.push(t.specularIntensityMapUv),e.push(t.transmissionMapUv),e.push(t.thicknessMapUv),e.push(t.combine),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.numLightProbes),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){s.disableAll(),t.isWebGL2&&s.enable(0),t.supportsVertexTextures&&s.enable(1),t.instancing&&s.enable(2),t.instancingColor&&s.enable(3),t.matcap&&s.enable(4),t.envMap&&s.enable(5),t.normalMapObjectSpace&&s.enable(6),t.normalMapTangentSpace&&s.enable(7),t.clearcoat&&s.enable(8),t.iridescence&&s.enable(9),t.alphaTest&&s.enable(10),t.vertexColors&&s.enable(11),t.vertexAlphas&&s.enable(12),t.vertexUv1s&&s.enable(13),t.vertexUv2s&&s.enable(14),t.vertexUv3s&&s.enable(15),t.vertexTangents&&s.enable(16),t.anisotropy&&s.enable(17),t.alphaHash&&s.enable(18),e.push(s.mask),s.disableAll(),t.fog&&s.enable(0),t.useFog&&s.enable(1),t.flatShading&&s.enable(2),t.logarithmicDepthBuffer&&s.enable(3),t.skinning&&s.enable(4),t.morphTargets&&s.enable(5),t.morphNormals&&s.enable(6),t.morphColors&&s.enable(7),t.premultipliedAlpha&&s.enable(8),t.shadowMapEnabled&&s.enable(9),t.useLegacyLights&&s.enable(10),t.doubleSided&&s.enable(11),t.flipSided&&s.enable(12),t.useDepthPacking&&s.enable(13),t.dithering&&s.enable(14),t.transmission&&s.enable(15),t.sheen&&s.enable(16),t.opaque&&s.enable(17),t.pointsUvs&&s.enable(18),t.decodeVideoTexture&&s.enable(19),e.push(s.mask)}(n,t),n.push(e.outputColorSpace)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=m[e.type];let n;if(t){const e=vr[t];n=$n.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let r;for(let e=0,t=c.length;e<t;e++){const t=c[e];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new _a(e,n,t,a),c.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){const t=c.indexOf(e);c[t]=c[c.length-1],c.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:c,dispose:function(){l.dispose()}}}function ba(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}function Ea(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Sa(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ta(){const e=[];let t=0;const n=[],r=[],i=[];function a(n,r,i,a,o,s){let l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:r,material:i,groupOrder:a,renderOrder:n.renderOrder,z:o,group:s},e[t]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=i,l.groupOrder=a,l.renderOrder=n.renderOrder,l.z=o,l.group=s),t++,l}return{opaque:n,transmissive:r,transparent:i,init:function(){t=0,n.length=0,r.length=0,i.length=0},push:function(e,t,o,s,l,c){const u=a(e,t,o,s,l,c);o.transmission>0?r.push(u):!0===o.transparent?i.push(u):n.push(u)},unshift:function(e,t,o,s,l,c){const u=a(e,t,o,s,l,c);o.transmission>0?r.unshift(u):!0===o.transparent?i.unshift(u):n.unshift(u)},finish:function(){for(let n=t,r=e.length;n<r;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||Ea),r.length>1&&r.sort(t||Sa),i.length>1&&i.sort(t||Sa)}}}function Aa(){let e=new WeakMap;return{get:function(t,n){const r=e.get(t);let i;return void 0===r?(i=new Ta,e.set(t,[i])):n>=r.length?(i=new Ta,r.push(i)):i=r[n],i},dispose:function(){e=new WeakMap}}}function wa(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new je,color:new un};break;case"SpotLight":n={position:new je,direction:new je,color:new un,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new je,color:new un,distance:0,decay:0};break;case"HemisphereLight":n={direction:new je,skyColor:new un,groundColor:new un};break;case"RectAreaLight":n={color:new un,position:new je,halfWidth:new je,halfHeight:new je}}return e[t.id]=n,n}}}let Ra=0;function Pa(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function Ca(e,t){const n=new wa,r=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new _e};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new _e,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let e=0;e<9;e++)i.probe.push(new je);const a=new je,o=new Mt,s=new Mt;return{setup:function(a,o){let s=0,l=0,c=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let u=0,h=0,d=0,f=0,p=0,m=0,g=0,_=0,v=0,x=0,y=0;a.sort(Pa);const M=!0===o?Math.PI:1;for(let e=0,t=a.length;e<t;e++){const t=a[e],o=t.color,b=t.intensity,E=t.distance,S=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)s+=o.r*b*M,l+=o.g*b*M,c+=o.b*b*M;else if(t.isLightProbe){for(let e=0;e<9;e++)i.probe[e].addScaledVector(t.sh.coefficients[e],b);y++}else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*M),t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.directionalShadow[u]=n,i.directionalShadowMap[u]=S,i.directionalShadowMatrix[u]=t.shadow.matrix,m++}i.directional[u]=e,u++}else if(t.isSpotLight){const e=n.get(t);e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(o).multiplyScalar(b*M),e.distance=E,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,i.spot[d]=e;const a=t.shadow;if(t.map&&(i.spotLightMap[v]=t.map,v++,a.updateMatrices(t),t.castShadow&&x++),i.spotLightMatrix[d]=a.matrix,t.castShadow){const e=r.get(t);e.shadowBias=a.bias,e.shadowNormalBias=a.normalBias,e.shadowRadius=a.radius,e.shadowMapSize=a.mapSize,i.spotShadow[d]=e,i.spotShadowMap[d]=S,_++}d++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(o).multiplyScalar(b),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),i.rectArea[f]=e,f++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*M),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,i.pointShadow[h]=n,i.pointShadowMap[h]=S,i.pointShadowMatrix[h]=t.shadow.matrix,g++}i.point[h]=e,h++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(b*M),e.groundColor.copy(t.groundColor).multiplyScalar(b*M),i.hemi[p]=e,p++}}f>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=_r.LTC_FLOAT_1,i.rectAreaLTC2=_r.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=_r.LTC_HALF_1,i.rectAreaLTC2=_r.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=s,i.ambient[1]=l,i.ambient[2]=c;const b=i.hash;b.directionalLength===u&&b.pointLength===h&&b.spotLength===d&&b.rectAreaLength===f&&b.hemiLength===p&&b.numDirectionalShadows===m&&b.numPointShadows===g&&b.numSpotShadows===_&&b.numSpotMaps===v&&b.numLightProbes===y||(i.directional.length=u,i.spot.length=d,i.rectArea.length=f,i.point.length=h,i.hemi.length=p,i.directionalShadow.length=m,i.directionalShadowMap.length=m,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=m,i.pointShadowMatrix.length=g,i.spotLightMatrix.length=_+v-x,i.spotLightMap.length=v,i.numSpotLightShadowsWithMaps=x,i.numLightProbes=y,b.directionalLength=u,b.pointLength=h,b.spotLength=d,b.rectAreaLength=f,b.hemiLength=p,b.numDirectionalShadows=m,b.numPointShadows=g,b.numSpotShadows=_,b.numSpotMaps=v,b.numLightProbes=y,i.version=Ra++)},setupView:function(e,t){let n=0,r=0,l=0,c=0,u=0;const h=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=i.directional[n];e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(h),n++}else if(d.isSpotLight){const e=i.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(h),l++}else if(d.isRectAreaLight){const e=i.rectArea[c];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),s.identity(),o.copy(d.matrixWorld),o.premultiply(h),s.extractRotation(o),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(s),e.halfHeight.applyMatrix4(s),c++}else if(d.isPointLight){const e=i.point[r];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),r++}else if(d.isHemisphereLight){const e=i.hemi[u];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(h),u++}}},state:i}}function La(e,t){const n=new Ca(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(e){n.setup(r,e)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function Ua(e,t){let n=new WeakMap;return{get:function(r,i=0){const a=n.get(r);let o;return void 0===a?(o=new La(e,t),n.set(r,[o])):i>=a.length?(o=new La(e,t),a.push(o)):o=a[i],o},dispose:function(){n=new WeakMap}}}class Ia extends fn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Da extends fn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function Na(e,t,n){let r=new dr;const a=new _e,l=new _e,c=new ze,u=new Ia({depthPacking:3201}),h=new Da,d={},f=n.maxTextureSize,p={[s]:1,1:s,2:2},m=new Qn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new _e},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const _=new Rn;_.setAttribute("position",new _n(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new Xn(_,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=i;let y=this.type;function M(n,r){const i=t.update(v);m.defines.VSM_SAMPLES!==n.blurSamples&&(m.defines.VSM_SAMPLES=n.blurSamples,g.defines.VSM_SAMPLES=n.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new He(a.x,a.y)),m.uniforms.shadow_pass.value=n.map.texture,m.uniforms.resolution.value=n.mapSize,m.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(r,null,i,m,v,null),g.uniforms.shadow_pass.value=n.mapPass.texture,g.uniforms.resolution.value=n.mapSize,g.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(r,null,i,g,v,null)}function b(t,n,r,i){let a=null;const s=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==s)a=s;else if(a=!0===r.isPointLight?h:u,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const e=a.uuid,t=n.uuid;let r=d[e];void 0===r&&(r={},d[e]=r);let i=r[t];void 0===i&&(i=a.clone(),r[t]=i),a=i}return a.visible=n.visible,a.wireframe=n.wireframe,a.side=i===o?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:p[n.side],a.alphaMap=n.alphaMap,a.alphaTest=n.alphaTest,a.map=n.map,a.clipShadows=n.clipShadows,a.clippingPlanes=n.clippingPlanes,a.clipIntersection=n.clipIntersection,a.displacementMap=n.displacementMap,a.displacementScale=n.displacementScale,a.displacementBias=n.displacementBias,a.wireframeLinewidth=n.wireframeLinewidth,a.linewidth=n.linewidth,!0===r.isPointLight&&!0===a.isMeshDistanceMaterial&&(e.properties.get(a).light=r),a}function E(n,i,a,s,l){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&l===o)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const r=t.update(n),i=n.material;if(Array.isArray(i)){const t=r.groups;for(let o=0,c=t.length;o<c;o++){const c=t[o],u=i[c.materialIndex];if(u&&u.visible){const t=b(n,u,s,l);e.renderBufferDirect(a,null,r,t,n,c)}}}else if(i.visible){const t=b(n,i,s,l);e.renderBufferDirect(a,null,r,t,n,null)}}const c=n.children;for(let e=0,t=c.length;e<t;e++)E(c[e],i,a,s,l)}this.render=function(t,n,i){if(!1===x.enabled)return;if(!1===x.autoUpdate&&!1===x.needsUpdate)return;if(0===t.length)return;const s=e.getRenderTarget(),u=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const p=y!==o&&this.type===o,m=y===o&&this.type!==o;for(let s=0,u=t.length;s<u;s++){const u=t[s],h=u.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;a.copy(h.mapSize);const g=h.getFrameExtents();if(a.multiply(g),l.copy(h.mapSize),(a.x>f||a.y>f)&&(a.x>f&&(l.x=Math.floor(f/g.x),a.x=l.x*g.x,h.mapSize.x=l.x),a.y>f&&(l.y=Math.floor(f/g.y),a.y=l.y*g.y,h.mapSize.y=l.y)),null===h.map||!0===p||!0===m){const e=this.type!==o?{minFilter:S,magFilter:S}:{};null!==h.map&&h.map.dispose(),h.map=new He(a.x,a.y,e),h.map.texture.name=u.name+".shadowMap",h.camera.updateProjectionMatrix()}e.setRenderTarget(h.map),e.clear();const _=h.getViewportCount();for(let e=0;e<_;e++){const t=h.getViewport(e);c.set(l.x*t.x,l.y*t.y,l.x*t.z,l.y*t.w),d.viewport(c),h.updateMatrices(u,e),r=h.getFrustum(),E(n,i,h.camera,u,this.type)}!0!==h.isPointLightShadow&&this.type===o&&M(h,i),h.needsUpdate=!1}y=this.type,x.needsUpdate=!1,e.setRenderTarget(s,u,h)}}function Fa(e,t,n){const r=n.isWebGL2,i=new function(){let t=!1;const n=new ze;let r=null;const i=new ze(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,a,o,s){!0===s&&(t*=o,r*=o,a*=o),n.set(t,r,a,o),!1===i.equals(n)&&(e.clearColor(t,r,a,o),i.copy(n))},reset:function(){t=!1,r=null,i.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,r=null,i=null;return{setTest:function(t){t?k(e.DEPTH_TEST):W(e.DEPTH_TEST)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}},o=new function(){let t=!1,n=null,r=null,i=null,a=null,o=null,s=null,l=null,c=null;return{setTest:function(n){t||(n?k(e.STENCIL_TEST):W(e.STENCIL_TEST))},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,o){r===t&&i===n&&a===o||(e.stencilFunc(t,n,o),r=t,i=n,a=o)},setOp:function(t,n,r){o===t&&s===n&&l===r||(e.stencilOp(t,n,r),o=t,s=n,l=r)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,n=null,r=null,i=null,a=null,o=null,s=null,l=null,c=null}}},s=new WeakMap,c=new WeakMap;let u={},h={},d=new WeakMap,f=[],p=null,m=!1,g=null,_=null,v=null,x=null,y=null,M=null,b=null,E=new un(0,0,0),S=0,T=!1,A=null,w=null,R=null,P=null,C=null;const L=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let U=!1,I=0;const D=e.getParameter(e.VERSION);-1!==D.indexOf("WebGL")?(I=parseFloat(/^WebGL (\d)/.exec(D)[1]),U=I>=1):-1!==D.indexOf("OpenGL ES")&&(I=parseFloat(/^OpenGL ES (\d)/.exec(D)[1]),U=I>=2);let N=null,F={};const O=e.getParameter(e.SCISSOR_BOX),B=e.getParameter(e.VIEWPORT),z=(new ze).fromArray(O),V=(new ze).fromArray(B);function H(t,n,i,a){const o=new Uint8Array(4),s=e.createTexture();e.bindTexture(t,s),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let s=0;s<i;s++)!r||t!==e.TEXTURE_3D&&t!==e.TEXTURE_2D_ARRAY?e.texImage2D(n+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,o):e.texImage3D(n,0,e.RGBA,1,1,a,0,e.RGBA,e.UNSIGNED_BYTE,o);return s}const G={};function k(t){!0!==u[t]&&(e.enable(t),u[t]=!0)}function W(t){!1!==u[t]&&(e.disable(t),u[t]=!1)}G[e.TEXTURE_2D]=H(e.TEXTURE_2D,e.TEXTURE_2D,1),G[e.TEXTURE_CUBE_MAP]=H(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),r&&(G[e.TEXTURE_2D_ARRAY]=H(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),G[e.TEXTURE_3D]=H(e.TEXTURE_3D,e.TEXTURE_3D,1,1)),i.setClear(0,0,0,1),a.setClear(1),o.setClear(0),k(e.DEPTH_TEST),a.setFunc(3),Y(!1),K(1),k(e.CULL_FACE),q(0);const j={[l]:e.FUNC_ADD,101:e.FUNC_SUBTRACT,102:e.FUNC_REVERSE_SUBTRACT};if(r)j[103]=e.MIN,j[104]=e.MAX;else{const e=t.get("EXT_blend_minmax");null!==e&&(j[103]=e.MIN_EXT,j[104]=e.MAX_EXT)}const X={200:e.ZERO,201:e.ONE,202:e.SRC_COLOR,204:e.SRC_ALPHA,210:e.SRC_ALPHA_SATURATE,208:e.DST_COLOR,206:e.DST_ALPHA,203:e.ONE_MINUS_SRC_COLOR,205:e.ONE_MINUS_SRC_ALPHA,209:e.ONE_MINUS_DST_COLOR,207:e.ONE_MINUS_DST_ALPHA,211:e.CONSTANT_COLOR,212:e.ONE_MINUS_CONSTANT_COLOR,213:e.CONSTANT_ALPHA,214:e.ONE_MINUS_CONSTANT_ALPHA};function q(t,n,r,i,a,o,s,c,u,h){if(0!==t){if(!1===m&&(k(e.BLEND),m=!0),5===t)a=a||n,o=o||r,s=s||i,n===_&&a===y||(e.blendEquationSeparate(j[n],j[a]),_=n,y=a),r===v&&i===x&&o===M&&s===b||(e.blendFuncSeparate(X[r],X[i],X[o],X[s]),v=r,x=i,M=o,b=s),!1!==c.equals(E)&&u===S||(e.blendColor(c.r,c.g,c.b,u),E.copy(c),S=u),g=t,T=!1;else if(t!==g||h!==T){if(_===l&&y===l||(e.blendEquation(e.FUNC_ADD),_=l,y=l),h)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}v=null,x=null,M=null,b=null,E.set(0,0,0),S=0,g=t,T=h}}else!0===m&&(W(e.BLEND),m=!1)}function Y(t){A!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),A=t)}function K(t){0!==t?(k(e.CULL_FACE),t!==w&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):W(e.CULL_FACE),w=t}function Z(t,n,r){t?(k(e.POLYGON_OFFSET_FILL),P===n&&C===r||(e.polygonOffset(n,r),P=n,C=r)):W(e.POLYGON_OFFSET_FILL)}return{buffers:{color:i,depth:a,stencil:o},enable:k,disable:W,bindFramebuffer:function(t,n){return h[t]!==n&&(e.bindFramebuffer(t,n),h[t]=n,r&&(t===e.DRAW_FRAMEBUFFER&&(h[e.FRAMEBUFFER]=n),t===e.FRAMEBUFFER&&(h[e.DRAW_FRAMEBUFFER]=n)),!0)},drawBuffers:function(r,i){let a=f,o=!1;if(r)if(a=d.get(i),void 0===a&&(a=[],d.set(i,a)),r.isWebGLMultipleRenderTargets){const t=r.texture;if(a.length!==t.length||a[0]!==e.COLOR_ATTACHMENT0){for(let n=0,r=t.length;n<r;n++)a[n]=e.COLOR_ATTACHMENT0+n;a.length=t.length,o=!0}}else a[0]!==e.COLOR_ATTACHMENT0&&(a[0]=e.COLOR_ATTACHMENT0,o=!0);else a[0]!==e.BACK&&(a[0]=e.BACK,o=!0);o&&(n.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return p!==t&&(e.useProgram(t),p=t,!0)},setBlending:q,setMaterial:function(t,n){2===t.side?W(e.CULL_FACE):k(e.CULL_FACE);let r=1===t.side;n&&(r=!r),Y(r),1===t.blending&&!1===t.transparent?q(0):q(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.blendColor,t.blendAlpha,t.premultipliedAlpha),a.setFunc(t.depthFunc),a.setTest(t.depthTest),a.setMask(t.depthWrite),i.setMask(t.colorWrite);const s=t.stencilWrite;o.setTest(s),s&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Z(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?k(e.SAMPLE_ALPHA_TO_COVERAGE):W(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:Y,setCullFace:K,setLineWidth:function(t){t!==R&&(U&&e.lineWidth(t),R=t)},setPolygonOffset:Z,setScissorTest:function(t){t?k(e.SCISSOR_TEST):W(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+L-1),N!==t&&(e.activeTexture(t),N=t)},bindTexture:function(t,n,r){void 0===r&&(r=null===N?e.TEXTURE0+L-1:N);let i=F[r];void 0===i&&(i={type:void 0,texture:void 0},F[r]=i),i.type===t&&i.texture===n||(N!==r&&(e.activeTexture(r),N=r),e.bindTexture(t,n||G[t]),i.type=t,i.texture=n)},unbindTexture:function(){const t=F[N];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,n){let r=c.get(n);void 0===r&&(r=new WeakMap,c.set(n,r));let i=r.get(t);void 0===i&&(i=e.getUniformBlockIndex(n,t.name),r.set(t,i))},uniformBlockBinding:function(t,n){const r=c.get(n).get(t);s.get(n)!==r&&(e.uniformBlockBinding(n,r,t.__bindingPointIndex),s.set(n,r))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===z.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),z.copy(t))},viewport:function(t){!1===V.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),V.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),!0===r&&(e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),u={},N=null,F={},h={},d=new WeakMap,f=[],p=null,m=!1,g=null,_=null,v=null,x=null,y=null,M=null,b=null,E=new un(0,0,0),S=0,T=!1,A=null,w=null,R=null,P=null,C=null,z.set(0,0,e.canvas.width,e.canvas.height),V.set(0,0,e.canvas.width,e.canvas.height),i.reset(),a.reset(),o.reset()}}}function Oa(e,t,n,r,i,a,o){const s=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,f="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let m;const g=new WeakMap;let _=!1;try{_="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function v(e,t){return _?new OffscreenCanvas(e,t):Me("canvas")}function x(e,t,n,r){let i=1;if((e.width>r||e.height>r)&&(i=r/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const r=t?pe:Math.floor,a=r(i*e.width),o=r(i*e.height);void 0===m&&(m=v(a,o));const s=n?v(a,o):m;return s.width=a,s.height=o,s.getContext("2d").drawImage(e,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+o+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function y(e){return fe(e.width)&&fe(e.height)}function O(e,t){return e.generateMipmaps&&t&&e.minFilter!==S&&e.minFilter!==A}function B(t){e.generateMipmap(t)}function z(n,r,i,a,o=!1){if(!1===s)return r;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=r;if(r===e.RED&&(i===e.FLOAT&&(l=e.R32F),i===e.HALF_FLOAT&&(l=e.R16F),i===e.UNSIGNED_BYTE&&(l=e.R8)),r===e.RED_INTEGER&&(i===e.UNSIGNED_BYTE&&(l=e.R8UI),i===e.UNSIGNED_SHORT&&(l=e.R16UI),i===e.UNSIGNED_INT&&(l=e.R32UI),i===e.BYTE&&(l=e.R8I),i===e.SHORT&&(l=e.R16I),i===e.INT&&(l=e.R32I)),r===e.RG&&(i===e.FLOAT&&(l=e.RG32F),i===e.HALF_FLOAT&&(l=e.RG16F),i===e.UNSIGNED_BYTE&&(l=e.RG8)),r===e.RGBA){const t=o?J:Pe.getTransfer(a);i===e.FLOAT&&(l=e.RGBA32F),i===e.HALF_FLOAT&&(l=e.RGBA16F),i===e.UNSIGNED_BYTE&&(l=t===$?e.SRGB8_ALPHA8:e.RGBA8),i===e.UNSIGNED_SHORT_4_4_4_4&&(l=e.RGBA4),i===e.UNSIGNED_SHORT_5_5_5_1&&(l=e.RGB5_A1)}return l!==e.R16F&&l!==e.R32F&&l!==e.RG16F&&l!==e.RG32F&&l!==e.RGBA16F&&l!==e.RGBA32F||t.get("EXT_color_buffer_float"),l}function V(e,t,n){return!0===O(e,n)||e.isFramebufferTexture&&e.minFilter!==S&&e.minFilter!==A?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function H(t){return t===S||1004===t||t===T?e.NEAREST:e.LINEAR}function G(e){const t=e.target;t.removeEventListener("dispose",G),function(e){const t=r.get(e);if(void 0===t.__webglInit)return;const n=e.source,i=g.get(n);if(i){const r=i[t.__cacheKey];r.usedTimes--,0===r.usedTimes&&W(e),0===Object.keys(i).length&&g.delete(n)}r.remove(e)}(t),t.isVideoTexture&&p.delete(t)}function k(t){const n=t.target;n.removeEventListener("dispose",k),function(t){const n=t.texture,i=r.get(t),a=r.get(n);if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),o.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++){if(Array.isArray(i.__webglFramebuffer[t]))for(let n=0;n<i.__webglFramebuffer[t].length;n++)e.deleteFramebuffer(i.__webglFramebuffer[t][n]);else e.deleteFramebuffer(i.__webglFramebuffer[t]);i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[t])}else{if(Array.isArray(i.__webglFramebuffer))for(let t=0;t<i.__webglFramebuffer.length;t++)e.deleteFramebuffer(i.__webglFramebuffer[t]);else e.deleteFramebuffer(i.__webglFramebuffer);if(i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let t=0;t<i.__webglColorRenderbuffer.length;t++)i.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(i.__webglColorRenderbuffer[t]);i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let t=0,i=n.length;t<i;t++){const i=r.get(n[t]);i.__webglTexture&&(e.deleteTexture(i.__webglTexture),o.memory.textures--),r.remove(n[t])}r.remove(n),r.remove(t)}(n)}function W(t){const n=r.get(t);e.deleteTexture(n.__webglTexture);const i=t.source;delete g.get(i)[n.__cacheKey],o.memory.textures--}let j=0;function q(t,i){const a=r.get(t);if(t.isVideoTexture&&function(e){const t=o.render.frame;p.get(e)!==t&&(p.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&a.__version!==t.version){const e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==e.complete)return void ne(a,t,i);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(e.TEXTURE_2D,a.__webglTexture,e.TEXTURE0+i)}const K={[M]:e.REPEAT,[b]:e.CLAMP_TO_EDGE,[E]:e.MIRRORED_REPEAT},Z={[S]:e.NEAREST,1004:e.NEAREST_MIPMAP_NEAREST,[T]:e.NEAREST_MIPMAP_LINEAR,[A]:e.LINEAR,1007:e.LINEAR_MIPMAP_NEAREST,[w]:e.LINEAR_MIPMAP_LINEAR},Q={512:e.NEVER,519:e.ALWAYS,513:e.LESS,515:e.LEQUAL,514:e.EQUAL,518:e.GEQUAL,516:e.GREATER,517:e.NOTEQUAL};function ee(n,a,o){if(o?(e.texParameteri(n,e.TEXTURE_WRAP_S,K[a.wrapS]),e.texParameteri(n,e.TEXTURE_WRAP_T,K[a.wrapT]),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,K[a.wrapR]),e.texParameteri(n,e.TEXTURE_MAG_FILTER,Z[a.magFilter]),e.texParameteri(n,e.TEXTURE_MIN_FILTER,Z[a.minFilter])):(e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE),a.wrapS===b&&a.wrapT===b||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,e.TEXTURE_MAG_FILTER,H(a.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,H(a.minFilter)),a.minFilter!==S&&a.minFilter!==A&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),a.compareFunction&&(e.texParameteri(n,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(n,e.TEXTURE_COMPARE_FUNC,Q[a.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")){const o=t.get("EXT_texture_filter_anisotropic");if(a.magFilter===S)return;if(a.minFilter!==T&&a.minFilter!==w)return;if(a.type===L&&!1===t.has("OES_texture_float_linear"))return;if(!1===s&&a.type===U&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function te(t,n){let r=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",G));const i=n.source;let a=g.get(i);void 0===a&&(a={},g.set(i,a));const s=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(n);if(s!==t.__cacheKey){void 0===a[s]&&(a[s]={texture:e.createTexture(),usedTimes:0},o.memory.textures++,r=!0),a[s].usedTimes++;const i=a[t.__cacheKey];void 0!==i&&(a[t.__cacheKey].usedTimes--,0===i.usedTimes&&W(n)),t.__cacheKey=s,t.__webglTexture=a[s].texture}return r}function ne(t,i,o){let l=e.TEXTURE_2D;(i.isDataArrayTexture||i.isCompressedArrayTexture)&&(l=e.TEXTURE_2D_ARRAY),i.isData3DTexture&&(l=e.TEXTURE_3D);const c=te(t,i),h=i.source;n.bindTexture(l,t.__webglTexture,e.TEXTURE0+o);const d=r.get(h);if(h.version!==d.__version||!0===c){n.activeTexture(e.TEXTURE0+o);const t=Pe.getPrimaries(Pe.workingColorSpace),r=i.colorSpace===X?null:Pe.getPrimaries(i.colorSpace),f=i.colorSpace===X||t===r?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,i.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,f);const p=function(e){return!s&&(e.wrapS!==b||e.wrapT!==b||e.minFilter!==S&&e.minFilter!==A)}(i)&&!1===y(i.image);let m=x(i.image,p,!1,u);m=ce(i,m);const g=y(m)||s,_=a.convert(i.format,i.colorSpace);let v,M=a.convert(i.type),E=z(i.internalFormat,_,M,i.colorSpace,i.isVideoTexture);ee(l,i,g);const T=i.mipmaps,w=s&&!0!==i.isVideoTexture,R=void 0===d.__version||!0===c,U=V(i,m,g);if(i.isDepthTexture)E=e.DEPTH_COMPONENT,s?E=i.type===L?e.DEPTH_COMPONENT32F:i.type===C?e.DEPTH_COMPONENT24:i.type===I?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT16:i.type===L&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),i.format===N&&E===e.DEPTH_COMPONENT&&i.type!==P&&i.type!==C&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=C,M=a.convert(i.type)),i.format===F&&E===e.DEPTH_COMPONENT&&(E=e.DEPTH_STENCIL,i.type!==I&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=I,M=a.convert(i.type))),R&&(w?n.texStorage2D(e.TEXTURE_2D,1,E,m.width,m.height):n.texImage2D(e.TEXTURE_2D,0,E,m.width,m.height,0,_,M,null));else if(i.isDataTexture)if(T.length>0&&g){w&&R&&n.texStorage2D(e.TEXTURE_2D,U,E,T[0].width,T[0].height);for(let t=0,r=T.length;t<r;t++)v=T[t],w?n.texSubImage2D(e.TEXTURE_2D,t,0,0,v.width,v.height,_,M,v.data):n.texImage2D(e.TEXTURE_2D,t,E,v.width,v.height,0,_,M,v.data);i.generateMipmaps=!1}else w?(R&&n.texStorage2D(e.TEXTURE_2D,U,E,m.width,m.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,m.width,m.height,_,M,m.data)):n.texImage2D(e.TEXTURE_2D,0,E,m.width,m.height,0,_,M,m.data);else if(i.isCompressedTexture)if(i.isCompressedArrayTexture){w&&R&&n.texStorage3D(e.TEXTURE_2D_ARRAY,U,E,T[0].width,T[0].height,m.depth);for(let t=0,r=T.length;t<r;t++)v=T[t],i.format!==D?null!==_?w?n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,v.width,v.height,m.depth,_,v.data,0,0):n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,t,E,v.width,v.height,m.depth,0,v.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):w?n.texSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,v.width,v.height,m.depth,_,M,v.data):n.texImage3D(e.TEXTURE_2D_ARRAY,t,E,v.width,v.height,m.depth,0,_,M,v.data)}else{w&&R&&n.texStorage2D(e.TEXTURE_2D,U,E,T[0].width,T[0].height);for(let t=0,r=T.length;t<r;t++)v=T[t],i.format!==D?null!==_?w?n.compressedTexSubImage2D(e.TEXTURE_2D,t,0,0,v.width,v.height,_,v.data):n.compressedTexImage2D(e.TEXTURE_2D,t,E,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):w?n.texSubImage2D(e.TEXTURE_2D,t,0,0,v.width,v.height,_,M,v.data):n.texImage2D(e.TEXTURE_2D,t,E,v.width,v.height,0,_,M,v.data)}else if(i.isDataArrayTexture)w?(R&&n.texStorage3D(e.TEXTURE_2D_ARRAY,U,E,m.width,m.height,m.depth),n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,m.width,m.height,m.depth,_,M,m.data)):n.texImage3D(e.TEXTURE_2D_ARRAY,0,E,m.width,m.height,m.depth,0,_,M,m.data);else if(i.isData3DTexture)w?(R&&n.texStorage3D(e.TEXTURE_3D,U,E,m.width,m.height,m.depth),n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,m.width,m.height,m.depth,_,M,m.data)):n.texImage3D(e.TEXTURE_3D,0,E,m.width,m.height,m.depth,0,_,M,m.data);else if(i.isFramebufferTexture){if(R)if(w)n.texStorage2D(e.TEXTURE_2D,U,E,m.width,m.height);else{let t=m.width,r=m.height;for(let i=0;i<U;i++)n.texImage2D(e.TEXTURE_2D,i,E,t,r,0,_,M,null),t>>=1,r>>=1}}else if(T.length>0&&g){w&&R&&n.texStorage2D(e.TEXTURE_2D,U,E,T[0].width,T[0].height);for(let t=0,r=T.length;t<r;t++)v=T[t],w?n.texSubImage2D(e.TEXTURE_2D,t,0,0,_,M,v):n.texImage2D(e.TEXTURE_2D,t,E,_,M,v);i.generateMipmaps=!1}else w?(R&&n.texStorage2D(e.TEXTURE_2D,U,E,m.width,m.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,_,M,m)):n.texImage2D(e.TEXTURE_2D,0,E,_,M,m);O(i,g)&&B(l),d.__version=h.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version}function ie(t,i,o,s,l,c){const u=a.convert(o.format,o.colorSpace),h=a.convert(o.type),f=z(o.internalFormat,u,h,o.colorSpace);if(!r.get(i).__hasExternalTextures){const t=Math.max(1,i.width>>c),r=Math.max(1,i.height>>c);l===e.TEXTURE_3D||l===e.TEXTURE_2D_ARRAY?n.texImage3D(l,c,f,t,r,i.depth,0,u,h,null):n.texImage2D(l,c,f,t,r,0,u,h,null)}n.bindFramebuffer(e.FRAMEBUFFER,t),le(i)?d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,s,l,r.get(o).__webglTexture,0,se(i)):(l===e.TEXTURE_2D||l>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&l<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,s,l,r.get(o).__webglTexture,c),n.bindFramebuffer(e.FRAMEBUFFER,null)}function ae(t,n,r){if(e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer){let i=!0===s?e.DEPTH_COMPONENT24:e.DEPTH_COMPONENT16;if(r||le(n)){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===L?i=e.DEPTH_COMPONENT32F:t.type===C&&(i=e.DEPTH_COMPONENT24));const r=se(n);le(n)?d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,r,i,n.width,n.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,r,i,n.width,n.height)}else e.renderbufferStorage(e.RENDERBUFFER,i,n.width,n.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(n.depthBuffer&&n.stencilBuffer){const i=se(n);r&&!1===le(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,i,e.DEPTH24_STENCIL8,n.width,n.height):le(n)?d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,i,e.DEPTH24_STENCIL8,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{const t=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let i=0;i<t.length;i++){const o=t[i],s=a.convert(o.format,o.colorSpace),l=a.convert(o.type),c=z(o.internalFormat,s,l,o.colorSpace),u=se(n);r&&!1===le(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,u,c,n.width,n.height):le(n)?d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,u,c,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,c,n.width,n.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function oe(t){const i=r.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!i.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,t),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),q(i.depthTexture,0);const a=r.get(i.depthTexture).__webglTexture,o=se(i);if(i.depthTexture.format===N)le(i)?d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,o):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0);else{if(i.depthTexture.format!==F)throw new Error("Unknown depthTexture format");le(i)?d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,o):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0)}}(i.__webglFramebuffer,t)}else if(a){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer[r]),i.__webglDepthbuffer[r]=e.createRenderbuffer(),ae(i.__webglDepthbuffer[r],t,!1)}else n.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),ae(i.__webglDepthbuffer,t,!1);n.bindFramebuffer(e.FRAMEBUFFER,null)}function se(e){return Math.min(h,e.samples)}function le(e){const n=r.get(e);return s&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function ce(e,n){const r=e.colorSpace,i=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===re||r!==Y&&r!==X&&(Pe.getTransfer(r)===$?!1===s?!0===t.has("EXT_sRGB")&&i===D?(e.format=re,e.minFilter=A,e.generateMipmaps=!1):n=Ie.sRGBToLinear(n):i===D&&a===R||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",r)),n}this.allocateTextureUnit=function(){const e=j;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),j+=1,e},this.resetTextureUnits=function(){j=0},this.setTexture2D=q,this.setTexture2DArray=function(t,i){const a=r.get(t);t.version>0&&a.__version!==t.version?ne(a,t,i):n.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+i)},this.setTexture3D=function(t,i){const a=r.get(t);t.version>0&&a.__version!==t.version?ne(a,t,i):n.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+i)},this.setTextureCube=function(t,i){const o=r.get(t);t.version>0&&o.__version!==t.version?function(t,i,o){if(6!==i.image.length)return;const l=te(t,i),u=i.source;n.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+o);const h=r.get(u);if(u.version!==h.__version||!0===l){n.activeTexture(e.TEXTURE0+o);const t=Pe.getPrimaries(Pe.workingColorSpace),r=i.colorSpace===X?null:Pe.getPrimaries(i.colorSpace),d=i.colorSpace===X||t===r?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,i.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);const f=i.isCompressedTexture||i.image[0].isCompressedTexture,p=i.image[0]&&i.image[0].isDataTexture,m=[];for(let e=0;e<6;e++)m[e]=f||p?p?i.image[e].image:i.image[e]:x(i.image[e],!1,!0,c),m[e]=ce(i,m[e]);const g=m[0],_=y(g)||s,v=a.convert(i.format,i.colorSpace),M=a.convert(i.type),b=z(i.internalFormat,v,M,i.colorSpace),E=s&&!0!==i.isVideoTexture,S=void 0===h.__version||!0===l;let T,A=V(i,g,_);if(ee(e.TEXTURE_CUBE_MAP,i,_),f){E&&S&&n.texStorage2D(e.TEXTURE_CUBE_MAP,A,b,g.width,g.height);for(let t=0;t<6;t++){T=m[t].mipmaps;for(let r=0;r<T.length;r++){const a=T[r];i.format!==D?null!==v?E?n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,0,0,a.width,a.height,v,a.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,b,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):E?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,0,0,a.width,a.height,v,M,a.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,b,a.width,a.height,0,v,M,a.data)}}}else{T=i.mipmaps,E&&S&&(T.length>0&&A++,n.texStorage2D(e.TEXTURE_CUBE_MAP,A,b,m[0].width,m[0].height));for(let t=0;t<6;t++)if(p){E?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,m[t].width,m[t].height,v,M,m[t].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,b,m[t].width,m[t].height,0,v,M,m[t].data);for(let r=0;r<T.length;r++){const i=T[r].image[t].image;E?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,0,0,i.width,i.height,v,M,i.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,b,i.width,i.height,0,v,M,i.data)}}else{E?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,v,M,m[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,b,v,M,m[t]);for(let r=0;r<T.length;r++){const i=T[r];E?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,0,0,v,M,i.image[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,b,v,M,i.image[t])}}}O(i,_)&&B(e.TEXTURE_CUBE_MAP),h.__version=u.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version}(o,t,i):n.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture,e.TEXTURE0+i)},this.rebindTextures=function(t,n,i){const a=r.get(t);void 0!==n&&ie(a.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==i&&oe(t)},this.setupRenderTarget=function(t){const l=t.texture,c=r.get(t),u=r.get(l);t.addEventListener("dispose",k),!0!==t.isWebGLMultipleRenderTargets&&(void 0===u.__webglTexture&&(u.__webglTexture=e.createTexture()),u.__version=l.version,o.memory.textures++);const h=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,f=y(t)||s;if(h){c.__webglFramebuffer=[];for(let t=0;t<6;t++)if(s&&l.mipmaps&&l.mipmaps.length>0){c.__webglFramebuffer[t]=[];for(let n=0;n<l.mipmaps.length;n++)c.__webglFramebuffer[t][n]=e.createFramebuffer()}else c.__webglFramebuffer[t]=e.createFramebuffer()}else{if(s&&l.mipmaps&&l.mipmaps.length>0){c.__webglFramebuffer=[];for(let t=0;t<l.mipmaps.length;t++)c.__webglFramebuffer[t]=e.createFramebuffer()}else c.__webglFramebuffer=e.createFramebuffer();if(d)if(i.drawBuffers){const n=t.texture;for(let t=0,i=n.length;t<i;t++){const i=r.get(n[t]);void 0===i.__webglTexture&&(i.__webglTexture=e.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(s&&t.samples>0&&!1===le(t)){const r=d?l:[l];c.__webglMultisampledFramebuffer=e.createFramebuffer(),c.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer);for(let n=0;n<r.length;n++){const i=r[n];c.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,c.__webglColorRenderbuffer[n]);const o=a.convert(i.format,i.colorSpace),s=a.convert(i.type),l=z(i.internalFormat,o,s,i.colorSpace,!0===t.isXRRenderTarget),u=se(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,u,l,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.RENDERBUFFER,c.__webglColorRenderbuffer[n])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(c.__webglDepthRenderbuffer=e.createRenderbuffer(),ae(c.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(h){n.bindTexture(e.TEXTURE_CUBE_MAP,u.__webglTexture),ee(e.TEXTURE_CUBE_MAP,l,f);for(let n=0;n<6;n++)if(s&&l.mipmaps&&l.mipmaps.length>0)for(let r=0;r<l.mipmaps.length;r++)ie(c.__webglFramebuffer[n][r],t,l,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r);else ie(c.__webglFramebuffer[n],t,l,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);O(l,f)&&B(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(d){const i=t.texture;for(let a=0,o=i.length;a<o;a++){const o=i[a],s=r.get(o);n.bindTexture(e.TEXTURE_2D,s.__webglTexture),ee(e.TEXTURE_2D,o,f),ie(c.__webglFramebuffer,t,o,e.COLOR_ATTACHMENT0+a,e.TEXTURE_2D,0),O(o,f)&&B(e.TEXTURE_2D)}n.unbindTexture()}else{let r=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(s?r=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(r,u.__webglTexture),ee(r,l,f),s&&l.mipmaps&&l.mipmaps.length>0)for(let n=0;n<l.mipmaps.length;n++)ie(c.__webglFramebuffer[n],t,l,e.COLOR_ATTACHMENT0,r,n);else ie(c.__webglFramebuffer,t,l,e.COLOR_ATTACHMENT0,r,0);O(l,f)&&B(r),n.unbindTexture()}t.depthBuffer&&oe(t)},this.updateRenderTargetMipmap=function(t){const i=y(t)||s,a=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let o=0,s=a.length;o<s;o++){const s=a[o];if(O(s,i)){const i=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=r.get(s).__webglTexture;n.bindTexture(i,a),B(i),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(s&&t.samples>0&&!1===le(t)){const i=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],a=t.width,o=t.height;let s=e.COLOR_BUFFER_BIT;const l=[],c=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,u=r.get(t),h=!0===t.isWebGLMultipleRenderTargets;if(h)for(let t=0;t<i.length;t++)n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let n=0;n<i.length;n++){l.push(e.COLOR_ATTACHMENT0+n),t.depthBuffer&&l.push(c);const d=void 0!==u.__ignoreDepthValues&&u.__ignoreDepthValues;if(!1===d&&(t.depthBuffer&&(s|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&(s|=e.STENCIL_BUFFER_BIT)),h&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,u.__webglColorRenderbuffer[n]),!0===d&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[c]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[c])),h){const t=r.get(i[n]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,a,o,0,0,a,o,s,e.NEAREST),f&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,l)}if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),h)for(let t=0;t<i.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,u.__webglColorRenderbuffer[t]);const a=r.get(i[t]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,a,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=oe,this.setupFrameBufferTexture=ie,this.useMultisampledRTT=le}function Ba(e,t,n){const r=n.isWebGL2;return{convert:function(n,i=""){let a;const o=Pe.getTransfer(i);if(n===R)return e.UNSIGNED_BYTE;if(1017===n)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===n)return e.UNSIGNED_SHORT_5_5_5_1;if(1010===n)return e.BYTE;if(1011===n)return e.SHORT;if(n===P)return e.UNSIGNED_SHORT;if(1013===n)return e.INT;if(n===C)return e.UNSIGNED_INT;if(n===L)return e.FLOAT;if(n===U)return r?e.HALF_FLOAT:(a=t.get("OES_texture_half_float"),null!==a?a.HALF_FLOAT_OES:null);if(1021===n)return e.ALPHA;if(n===D)return e.RGBA;if(1024===n)return e.LUMINANCE;if(1025===n)return e.LUMINANCE_ALPHA;if(n===N)return e.DEPTH_COMPONENT;if(n===F)return e.DEPTH_STENCIL;if(n===re)return a=t.get("EXT_sRGB"),null!==a?a.SRGB_ALPHA_EXT:null;if(1028===n)return e.RED;if(1029===n)return e.RED_INTEGER;if(1030===n)return e.RG;if(1031===n)return e.RG_INTEGER;if(1033===n)return e.RGBA_INTEGER;if(n===O||n===B||n===z||n===V)if(o===$){if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===a)return null;if(n===O)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===B)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===z)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===V)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=t.get("WEBGL_compressed_texture_s3tc"),null===a)return null;if(n===O)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===B)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===z)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===V)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===n||35841===n||35842===n||35843===n){if(a=t.get("WEBGL_compressed_texture_pvrtc"),null===a)return null;if(35840===n)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return a=t.get("WEBGL_compressed_texture_etc1"),null!==a?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===n||37496===n){if(a=t.get("WEBGL_compressed_texture_etc"),null===a)return null;if(37492===n)return o===$?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n){if(a=t.get("WEBGL_compressed_texture_astc"),null===a)return null;if(37808===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===n)return o===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===H||36494===n||36495===n){if(a=t.get("EXT_texture_compression_bptc"),null===a)return null;if(n===H)return o===$?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===n)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(36495===n)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===n||36284===n||36285===n||36286===n){if(a=t.get("EXT_texture_compression_rgtc"),null===a)return null;if(n===H)return a.COMPRESSED_RED_RGTC1_EXT;if(36284===n)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===n)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===n)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===I?r?e.UNSIGNED_INT_24_8:(a=t.get("WEBGL_depth_texture"),null!==a?a.UNSIGNED_INT_24_8_WEBGL:null):void 0!==e[n]?e[n]:null}}}class za extends tr{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Va extends Xt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Ha={type:"move"};class Ga{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Va,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Va,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new je,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new je),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Va,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new je,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new je),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let r=null,i=null,a=null;const o=this._targetRay,s=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){a=!0;for(const r of e.hand.values()){const e=t.getJointPose(r,n),i=this._getHandJoint(l,r);null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,i.jointRadius=e.radius),i.visible=null!==e}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],o=r.position.distanceTo(i.position),s=.02,c=.005;l.inputState.pinching&&o>s+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&o<=s-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&(i=t.getPose(e.gripSpace,n),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1));null!==o&&(r=t.getPose(e.targetRaySpace,n),null===r&&null!==i&&(r=i),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Ha)))}return null!==o&&(o.visible=null!==r),null!==s&&(s.visible=null!==i),null!==l&&(l.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){const n=new Va;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class ka extends Be{constructor(e,t,n,r,i,a,o,s,l,c){if((c=void 0!==c?c:N)!==N&&c!==F)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===N&&(n=C),void 0===n&&c===F&&(n=I),super(null,r,i,a,o,s,c,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==o?o:S,this.minFilter=void 0!==s?s:S,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}class Wa extends oe{constructor(e,t){super();const n=this;let r=null,i=1,a=null,o="local-floor",s=1,l=null,c=null,u=null,h=null,d=null,f=null;const p=t.getContextAttributes();let m=null,g=null;const _=[],v=[],x=new tr;x.layers.enable(1),x.viewport=new ze;const y=new tr;y.layers.enable(2),y.viewport=new ze;const M=[x,y],b=new za;b.layers.enable(1),b.layers.enable(2);let E=null,S=null;function T(e){const t=v.indexOf(e.inputSource);if(-1===t)return;const n=_[t];void 0!==n&&(n.update(e.inputSource,e.frame,l||a),n.dispatchEvent({type:e.type,data:e.inputSource}))}function A(){r.removeEventListener("select",T),r.removeEventListener("selectstart",T),r.removeEventListener("selectend",T),r.removeEventListener("squeeze",T),r.removeEventListener("squeezestart",T),r.removeEventListener("squeezeend",T),r.removeEventListener("end",A),r.removeEventListener("inputsourceschange",w);for(let e=0;e<_.length;e++){const t=v[e];null!==t&&(v[e]=null,_[e].disconnect(t))}E=null,S=null,e.setRenderTarget(m),d=null,h=null,u=null,r=null,g=null,B.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function w(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],r=v.indexOf(n);r>=0&&(v[r]=null,_[r].disconnect(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let r=v.indexOf(n);if(-1===r){for(let e=0;e<_.length;e++){if(e>=v.length){v.push(n),r=e;break}if(null===v[e]){v[e]=n,r=e;break}}if(-1===r)break}const i=_[r];i&&i.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=_[e];return void 0===t&&(t=new Ga,_[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=_[e];return void 0===t&&(t=new Ga,_[e]=t),t.getGripSpace()},this.getHand=function(e){let t=_[e];return void 0===t&&(t=new Ga,_[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==h?h:d},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return r},this.setSession=async function(c){if(r=c,null!==r){if(m=e.getRenderTarget(),r.addEventListener("select",T),r.addEventListener("selectstart",T),r.addEventListener("selectend",T),r.addEventListener("squeeze",T),r.addEventListener("squeezestart",T),r.addEventListener("squeezeend",T),r.addEventListener("end",A),r.addEventListener("inputsourceschange",w),!0!==p.xrCompatible&&await t.makeXRCompatible(),void 0===r.renderState.layers||!1===e.capabilities.isWebGL2){const n={antialias:void 0!==r.renderState.layers||p.antialias,alpha:!0,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:i};d=new XRWebGLLayer(r,t,n),r.updateRenderState({baseLayer:d}),g=new He(d.framebufferWidth,d.framebufferHeight,{format:D,type:R,colorSpace:e.outputColorSpace,stencilBuffer:p.stencil})}else{let n=null,a=null,o=null;p.depth&&(o=p.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,n=p.stencil?F:N,a=p.stencil?I:C);const s={colorFormat:t.RGBA8,depthFormat:o,scaleFactor:i};u=new XRWebGLBinding(r,t),h=u.createProjectionLayer(s),r.updateRenderState({layers:[h]}),g=new He(h.textureWidth,h.textureHeight,{format:D,type:R,depthTexture:new ka(h.textureWidth,h.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:p.stencil,colorSpace:e.outputColorSpace,samples:p.antialias?4:0}),e.properties.get(g).__ignoreDepthValues=h.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(s),l=null,a=await r.requestReferenceSpace(o),B.setContext(r),B.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==r)return r.environmentBlendMode};const P=new je,L=new je;function U(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;b.near=y.near=x.near=e.near,b.far=y.far=x.far=e.far,E===b.near&&S===b.far||(r.updateRenderState({depthNear:b.near,depthFar:b.far}),E=b.near,S=b.far);const t=e.parent,n=b.cameras;U(b,t);for(let e=0;e<n.length;e++)U(n[e],t);2===n.length?function(e,t,n){P.setFromMatrixPosition(t.matrixWorld),L.setFromMatrixPosition(n.matrixWorld);const r=P.distanceTo(L),i=t.projectionMatrix.elements,a=n.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),l=(i[9]+1)/i[5],c=(i[9]-1)/i[5],u=(i[8]-1)/i[0],h=(a[8]+1)/a[0],d=o*u,f=o*h,p=r/(-u+h),m=p*-u;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(p),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=o+p,_=s+p,v=d-m,x=f+(r-m),y=l*s/_*g,M=c*s/_*g;e.projectionMatrix.makePerspective(v,x,y,M,g,_),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}(b,x,y):b.projectionMatrix.copy(x.projectionMatrix),function(e,t,n){null===n?e.matrix.copy(t.matrixWorld):(e.matrix.copy(n.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld)),e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*ce*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,b,t)},this.getCamera=function(){return b},this.getFoveation=function(){if(null!==h||null!==d)return s},this.setFoveation=function(e){s=e,null!==h&&(h.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)};let O=null;const B=new fr;B.setAnimationLoop((function(t,r){if(c=r.getViewerPose(l||a),f=r,null!==c){const t=c.views;null!==d&&(e.setRenderTargetFramebuffer(g,d.framebuffer),e.setRenderTarget(g));let n=!1;t.length!==b.cameras.length&&(b.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){const i=t[r];let a=null;if(null!==d)a=d.getViewport(i);else{const t=u.getViewSubImage(h,i);a=t.viewport,0===r&&(e.setRenderTargetTextures(g,t.colorTexture,h.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(g))}let o=M[r];void 0===o&&(o=new tr,o.layers.enable(r),o.viewport=new ze,M[r]=o),o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.quaternion,o.scale),o.projectionMatrix.fromArray(i.projectionMatrix),o.projectionMatrixInverse.copy(o.projectionMatrix).invert(),o.viewport.set(a.x,a.y,a.width,a.height),0===r&&(b.matrix.copy(o.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),!0===n&&b.cameras.push(o)}}for(let e=0;e<_.length;e++){const t=v[e],n=_[e];null!==t&&void 0!==n&&n.update(t,r,l||a)}O&&O(t,r),r.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:r}),f=null})),this.setAnimationLoop=function(e){O=e},this.dispose=function(){}}}function ja(e,t){function n(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function r(r,i){r.opacity.value=i.opacity,i.color&&r.diffuse.value.copy(i.color),i.emissive&&r.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(r.map.value=i.map,n(i.map,r.mapTransform)),i.alphaMap&&(r.alphaMap.value=i.alphaMap,n(i.alphaMap,r.alphaMapTransform)),i.bumpMap&&(r.bumpMap.value=i.bumpMap,n(i.bumpMap,r.bumpMapTransform),r.bumpScale.value=i.bumpScale,1===i.side&&(r.bumpScale.value*=-1)),i.normalMap&&(r.normalMap.value=i.normalMap,n(i.normalMap,r.normalMapTransform),r.normalScale.value.copy(i.normalScale),1===i.side&&r.normalScale.value.negate()),i.displacementMap&&(r.displacementMap.value=i.displacementMap,n(i.displacementMap,r.displacementMapTransform),r.displacementScale.value=i.displacementScale,r.displacementBias.value=i.displacementBias),i.emissiveMap&&(r.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,r.emissiveMapTransform)),i.specularMap&&(r.specularMap.value=i.specularMap,n(i.specularMap,r.specularMapTransform)),i.alphaTest>0&&(r.alphaTest.value=i.alphaTest);const a=t.get(i).envMap;if(a&&(r.envMap.value=a,r.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,r.reflectivity.value=i.reflectivity,r.ior.value=i.ior,r.refractionRatio.value=i.refractionRatio),i.lightMap){r.lightMap.value=i.lightMap;const t=!0===e._useLegacyLights?Math.PI:1;r.lightMapIntensity.value=i.lightMapIntensity*t,n(i.lightMap,r.lightMapTransform)}i.aoMap&&(r.aoMap.value=i.aoMap,r.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,r.aoMapTransform))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,Jn(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,i,a,o,s){i.isMeshBasicMaterial||i.isMeshLambertMaterial?r(e,i):i.isMeshToonMaterial?(r(e,i),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,i)):i.isMeshPhongMaterial?(r(e,i),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,i)):i.isMeshStandardMaterial?(r(e,i),function(e,r){e.metalness.value=r.metalness,r.metalnessMap&&(e.metalnessMap.value=r.metalnessMap,n(r.metalnessMap,e.metalnessMapTransform)),e.roughness.value=r.roughness,r.roughnessMap&&(e.roughnessMap.value=r.roughnessMap,n(r.roughnessMap,e.roughnessMapTransform));t.get(r).envMap&&(e.envMapIntensity.value=r.envMapIntensity)}(e,i),i.isMeshPhysicalMaterial&&function(e,t,r){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap,n(t.sheenColorMap,e.sheenColorMapTransform)),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap,n(t.sheenRoughnessMap,e.sheenRoughnessMapTransform))),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap,n(t.clearcoatMap,e.clearcoatMapTransform)),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap,n(t.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),t.clearcoatNormalMap&&(e.clearcoatNormalMap.value=t.clearcoatNormalMap,n(t.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),1===t.side&&e.clearcoatNormalScale.value.negate())),t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap,n(t.iridescenceMap,e.iridescenceMapTransform)),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap,n(t.iridescenceThicknessMap,e.iridescenceThicknessMapTransform))),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=r.texture,e.transmissionSamplerSize.value.set(r.width,r.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap,n(t.transmissionMap,e.transmissionMapTransform)),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap,n(t.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),t.anisotropy>0&&(e.anisotropyVector.value.set(t.anisotropy*Math.cos(t.anisotropyRotation),t.anisotropy*Math.sin(t.anisotropyRotation)),t.anisotropyMap&&(e.anisotropyMap.value=t.anisotropyMap,n(t.anisotropyMap,e.anisotropyMapTransform))),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap,n(t.specularColorMap,e.specularColorMapTransform)),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap,n(t.specularIntensityMap,e.specularIntensityMapTransform))}(e,i,s)):i.isMeshMatcapMaterial?(r(e,i),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,i)):i.isMeshDepthMaterial?r(e,i):i.isMeshDistanceMaterial?(r(e,i),function(e,n){const r=t.get(n).light;e.referencePosition.value.setFromMatrixPosition(r.matrixWorld),e.nearDistance.value=r.shadow.camera.near,e.farDistance.value=r.shadow.camera.far}(e,i)):i.isMeshNormalMaterial?r(e,i):i.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform))}(e,i),i.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,i)):i.isPointsMaterial?function(e,t,r,i){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*r,e.scale.value=.5*i,t.map&&(e.map.value=t.map,n(t.map,e.uvTransform)),t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform)),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,i,a,o):i.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform)),t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform)),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,i):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function Xa(e,t,n,r){let i={},a={},o=[];const s=n.isWebGL2?e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(e,t,n){const r=e.value;if(void 0===n[t]){if("number"==typeof r)n[t]=r;else{const e=Array.isArray(r)?r:[r],i=[];for(let t=0;t<e.length;t++)i.push(e[t].clone());n[t]=i}return!0}if("number"==typeof r){if(n[t]!==r)return n[t]=r,!0}else{const e=Array.isArray(n[t])?n[t]:[n[t]],i=Array.isArray(r)?r:[r];for(let t=0;t<e.length;t++){const n=e[t];if(!1===n.equals(i[t]))return n.copy(i[t]),!0}}return!1}function c(e){const t={boundary:0,storage:0};return"number"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function u(t){const n=t.target;n.removeEventListener("dispose",u);const r=o.indexOf(n.__bindingPointIndex);o.splice(r,1),e.deleteBuffer(i[n.id]),delete i[n.id],delete a[n.id]}return{bind:function(e,t){const n=t.program;r.uniformBlockBinding(e,n)},update:function(n,h){let d=i[n.id];void 0===d&&(function(e){const t=e.uniforms;let n=0;let r=0;for(let e=0,i=t.length;e<i;e++){const i=t[e],a={boundary:0,storage:0},o=Array.isArray(i.value)?i.value:[i.value];for(let e=0,t=o.length;e<t;e++){const t=c(o[e]);a.boundary+=t.boundary,a.storage+=t.storage}i.__data=new Float32Array(a.storage/Float32Array.BYTES_PER_ELEMENT),i.__offset=n,e>0&&(r=n%16,0!==r&&16-r-a.boundary<0&&(n+=16-r,i.__offset=n)),n+=a.storage}r=n%16,r>0&&(n+=16-r),e.__size=n,e.__cache={}}(n),d=function(t){const n=function(){for(let e=0;e<s;e++)if(-1===o.indexOf(e))return o.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;const r=e.createBuffer(),i=t.__size,a=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,r),e.bufferData(e.UNIFORM_BUFFER,i,a),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,n,r),r}(n),i[n.id]=d,n.addEventListener("dispose",u));const f=h.program;r.updateUBOMapping(n,f);const p=t.render.frame;a[n.id]!==p&&(function(t){const n=i[t.id],r=t.uniforms,a=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let t=0,n=r.length;t<n;t++){const n=r[t];if(!0===l(n,t,a)){const t=n.__offset,r=Array.isArray(n.value)?n.value:[n.value];let i=0;for(let a=0;a<r.length;a++){const o=r[a],s=c(o);"number"==typeof o?(n.__data[0]=o,e.bufferSubData(e.UNIFORM_BUFFER,t+i,n.__data)):o.isMatrix3?(n.__data[0]=o.elements[0],n.__data[1]=o.elements[1],n.__data[2]=o.elements[2],n.__data[3]=o.elements[0],n.__data[4]=o.elements[3],n.__data[5]=o.elements[4],n.__data[6]=o.elements[5],n.__data[7]=o.elements[0],n.__data[8]=o.elements[6],n.__data[9]=o.elements[7],n.__data[10]=o.elements[8],n.__data[11]=o.elements[0]):(o.toArray(n.__data,i),i+=s.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,n.__data)}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(n),a[n.id]=p)},dispose:function(){for(const t in i)e.deleteBuffer(i[t]);o=[],i={},a={}}}}class qa{constructor(e={}){const{canvas:t=be(),context:n=null,depth:i=!0,stencil:a=!0,alpha:o=!1,antialias:l=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:u=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:f=!1}=e;let p;this.isWebGLRenderer=!0,p=null!==n?n.getContextAttributes().alpha:o;const m=new Uint32Array(4),g=new Int32Array(4);let _=null,v=null;const x=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=q,this._useLegacyLights=!1,this.toneMapping=d,this.toneMappingExposure=1;const M=this;let b=!1,E=0,S=0,T=null,A=-1,N=null;const F=new ze,O=new ze;let B=null;const z=new un(0);let V=0,H=t.width,G=t.height,k=1,W=null,j=null;const X=new ze(0,0,H,G),K=new ze(0,0,H,G);let Z=!1;const J=new dr;let $=!1,Q=!1,ee=null;const te=new Mt,ne=new _e,re=new je,ie={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ae(){return null===T?k:1}let oe,se,le,ce,ue,he,de,fe,me,ge,ve,xe,ye,Me,Ee,Se,Te,Ae,we,Re,Pe,Ce,Le,Ue,Ie=n;function De(e,n){for(let r=0;r<e.length;r++){const i=e[r],a=t.getContext(i,n);if(null!==a)return a}return null}try{const e={alpha:!0,depth:i,stencil:a,antialias:l,premultipliedAlpha:c,preserveDrawingBuffer:u,powerPreference:h,failIfMajorPerformanceCaveat:f};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${r}`),t.addEventListener("webglcontextlost",Oe,!1),t.addEventListener("webglcontextrestored",Be,!1),t.addEventListener("webglcontextcreationerror",Ve,!1),null===Ie){const t=["webgl2","webgl","experimental-webgl"];if(!0===M.isWebGL1Renderer&&t.shift(),Ie=De(t,e),null===Ie)throw De(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}"undefined"!=typeof WebGLRenderingContext&&Ie instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),void 0===Ie.getShaderPrecisionFormat&&(Ie.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function Ne(){oe=new Gr(Ie),se=new Er(Ie,oe,e),oe.init(se),Ce=new Ba(Ie,oe,se),le=new Fa(Ie,oe,se),ce=new jr(Ie),ue=new ba,he=new Oa(Ie,oe,le,ue,se,Ce,ce),de=new Tr(M),fe=new Hr(M),me=new pr(Ie,se),Le=new Mr(Ie,oe,me,se),ge=new kr(Ie,me,ce,Le),ve=new Kr(Ie,ge,me,ce),we=new Yr(Ie,se,he),Se=new Sr(ue),xe=new Ma(M,de,fe,oe,se,Le,Se),ye=new ja(M,ue),Me=new Aa,Ee=new Ua(oe,se),Ae=new yr(M,de,fe,le,ve,p,c),Te=new Na(M,ve,se),Ue=new Xa(Ie,ce,se,le),Re=new br(Ie,oe,ce,se),Pe=new Wr(Ie,oe,ce,se),ce.programs=xe.programs,M.capabilities=se,M.extensions=oe,M.properties=ue,M.renderLists=Me,M.shadowMap=Te,M.state=le,M.info=ce}Ne();const Fe=new Wa(M,Ie);function Oe(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function Be(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const e=ce.autoReset,t=Te.enabled,n=Te.autoUpdate,r=Te.needsUpdate,i=Te.type;Ne(),ce.autoReset=e,Te.enabled=t,Te.autoUpdate=n,Te.needsUpdate=r,Te.type=i}function Ve(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function Ge(e){const t=e.target;t.removeEventListener("dispose",Ge),function(e){(function(e){const t=ue.get(e).programs;void 0!==t&&(t.forEach((function(e){xe.releaseProgram(e)})),e.isShaderMaterial&&xe.releaseShaderCache(e))})(e),ue.remove(e)}(t)}function ke(e,t,n){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,Qe(e,t,n),e.side=s,e.needsUpdate=!0,Qe(e,t,n),e.side=2):Qe(e,t,n)}this.xr=Fe,this.getContext=function(){return Ie},this.getContextAttributes=function(){return Ie.getContextAttributes()},this.forceContextLoss=function(){const e=oe.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=oe.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(e){void 0!==e&&(k=e,this.setSize(H,G,!1))},this.getSize=function(e){return e.set(H,G)},this.setSize=function(e,n,r=!0){Fe.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(H=e,G=n,t.width=Math.floor(e*k),t.height=Math.floor(n*k),!0===r&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(H*k,G*k).floor()},this.setDrawingBufferSize=function(e,n,r){H=e,G=n,k=r,t.width=Math.floor(e*r),t.height=Math.floor(n*r),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(F)},this.getViewport=function(e){return e.copy(X)},this.setViewport=function(e,t,n,r){e.isVector4?X.set(e.x,e.y,e.z,e.w):X.set(e,t,n,r),le.viewport(F.copy(X).multiplyScalar(k).floor())},this.getScissor=function(e){return e.copy(K)},this.setScissor=function(e,t,n,r){e.isVector4?K.set(e.x,e.y,e.z,e.w):K.set(e,t,n,r),le.scissor(O.copy(K).multiplyScalar(k).floor())},this.getScissorTest=function(){return Z},this.setScissorTest=function(e){le.setScissorTest(Z=e)},this.setOpaqueSort=function(e){W=e},this.setTransparentSort=function(e){j=e},this.getClearColor=function(e){return e.copy(Ae.getClearColor())},this.setClearColor=function(){Ae.setClearColor.apply(Ae,arguments)},this.getClearAlpha=function(){return Ae.getClearAlpha()},this.setClearAlpha=function(){Ae.setClearAlpha.apply(Ae,arguments)},this.clear=function(e=!0,t=!0,n=!0){let r=0;if(e){let e=!1;if(null!==T){const t=T.texture.format;e=1033===t||1031===t||1029===t}if(e){const e=T.texture.type,t=e===R||e===C||e===P||e===I||1017===e||1018===e,n=Ae.getClearColor(),r=Ae.getClearAlpha(),i=n.r,a=n.g,o=n.b;t?(m[0]=i,m[1]=a,m[2]=o,m[3]=r,Ie.clearBufferuiv(Ie.COLOR,0,m)):(g[0]=i,g[1]=a,g[2]=o,g[3]=r,Ie.clearBufferiv(Ie.COLOR,0,g))}else r|=Ie.COLOR_BUFFER_BIT}t&&(r|=Ie.DEPTH_BUFFER_BIT),n&&(r|=Ie.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),Ie.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Oe,!1),t.removeEventListener("webglcontextrestored",Be,!1),t.removeEventListener("webglcontextcreationerror",Ve,!1),Me.dispose(),Ee.dispose(),ue.dispose(),de.dispose(),fe.dispose(),ve.dispose(),Le.dispose(),Ue.dispose(),xe.dispose(),Fe.dispose(),Fe.removeEventListener("sessionstart",Xe),Fe.removeEventListener("sessionend",qe),ee&&(ee.dispose(),ee=null),Ye.stop()},this.renderBufferDirect=function(e,t,n,r,i,a){null===t&&(t=ie);const o=i.isMesh&&i.matrixWorld.determinant()<0,s=function(e,t,n,r,i){!0!==t.isScene&&(t=ie),he.resetTextureUnits();const a=t.fog,o=r.isMeshStandardMaterial?t.environment:null,s=null===T?M.outputColorSpace:!0===T.isXRRenderTarget?T.texture.colorSpace:Y,l=(r.isMeshStandardMaterial?fe:de).get(r.envMap||o),c=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,u=!!n.attributes.tangent&&(!!r.normalMap||r.anisotropy>0),h=!!n.morphAttributes.position,f=!!n.morphAttributes.normal,p=!!n.morphAttributes.color;let m=d;r.toneMapped&&(null!==T&&!0!==T.isXRRenderTarget||(m=M.toneMapping));const g=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,_=void 0!==g?g.length:0,x=ue.get(r),y=v.state.lights;if(!0===$&&(!0===Q||e!==N)){const t=e===N&&r.id===A;Se.setState(r,e,t)}let b=!1;r.version===x.__version?x.needsLights&&x.lightsStateVersion!==y.state.version||x.outputColorSpace!==s||i.isInstancedMesh&&!1===x.instancing?b=!0:i.isInstancedMesh||!0!==x.instancing?i.isSkinnedMesh&&!1===x.skinning?b=!0:i.isSkinnedMesh||!0!==x.skinning?i.isInstancedMesh&&!0===x.instancingColor&&null===i.instanceColor||i.isInstancedMesh&&!1===x.instancingColor&&null!==i.instanceColor||x.envMap!==l||!0===r.fog&&x.fog!==a?b=!0:void 0===x.numClippingPlanes||x.numClippingPlanes===Se.numPlanes&&x.numIntersection===Se.numIntersection?(x.vertexAlphas!==c||x.vertexTangents!==u||x.morphTargets!==h||x.morphNormals!==f||x.morphColors!==p||x.toneMapping!==m||!0===se.isWebGL2&&x.morphTargetsCount!==_)&&(b=!0):b=!0:b=!0:b=!0:(b=!0,x.__version=r.version);let E=x.currentProgram;!0===b&&(E=Qe(r,t,i));let S=!1,w=!1,R=!1;const P=E.getUniforms(),C=x.uniforms;if(le.useProgram(E.program)&&(S=!0,w=!0,R=!0),r.id!==A&&(A=r.id,w=!0),S||N!==e){P.setValue(Ie,"projectionMatrix",e.projectionMatrix),P.setValue(Ie,"viewMatrix",e.matrixWorldInverse);const t=P.map.cameraPosition;void 0!==t&&t.setValue(Ie,re.setFromMatrixPosition(e.matrixWorld)),se.logarithmicDepthBuffer&&P.setValue(Ie,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&P.setValue(Ie,"isOrthographic",!0===e.isOrthographicCamera),N!==e&&(N=e,w=!0,R=!0)}if(i.isSkinnedMesh){P.setOptional(Ie,i,"bindMatrix"),P.setOptional(Ie,i,"bindMatrixInverse");const e=i.skeleton;e&&(se.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),P.setValue(Ie,"boneTexture",e.boneTexture,he),P.setValue(Ie,"boneTextureSize",e.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const L=n.morphAttributes;var U,I;if((void 0!==L.position||void 0!==L.normal||void 0!==L.color&&!0===se.isWebGL2)&&we.update(i,n,E),(w||x.receiveShadow!==i.receiveShadow)&&(x.receiveShadow=i.receiveShadow,P.setValue(Ie,"receiveShadow",i.receiveShadow)),r.isMeshGouraudMaterial&&null!==r.envMap&&(C.envMap.value=l,C.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),w&&(P.setValue(Ie,"toneMappingExposure",M.toneMappingExposure),x.needsLights&&(I=R,(U=C).ambientLightColor.needsUpdate=I,U.lightProbe.needsUpdate=I,U.directionalLights.needsUpdate=I,U.directionalLightShadows.needsUpdate=I,U.pointLights.needsUpdate=I,U.pointLightShadows.needsUpdate=I,U.spotLights.needsUpdate=I,U.spotLightShadows.needsUpdate=I,U.rectAreaLights.needsUpdate=I,U.hemisphereLights.needsUpdate=I),a&&!0===r.fog&&ye.refreshFogUniforms(C,a),ye.refreshMaterialUniforms(C,r,k,G,ee),Qi.upload(Ie,et(x),C,he)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(Qi.upload(Ie,et(x),C,he),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&P.setValue(Ie,"center",i.center),P.setValue(Ie,"modelViewMatrix",i.modelViewMatrix),P.setValue(Ie,"normalMatrix",i.normalMatrix),P.setValue(Ie,"modelMatrix",i.matrixWorld),r.isShaderMaterial||r.isRawShaderMaterial){const e=r.uniformsGroups;for(let t=0,n=e.length;t<n;t++)if(se.isWebGL2){const n=e[t];Ue.update(n,E),Ue.bind(n,E)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return E}(e,t,n,r,i);le.setMaterial(r,o);let l=n.index,c=1;if(!0===r.wireframe){if(l=ge.getWireframeAttribute(n),void 0===l)return;c=2}const u=n.drawRange,h=n.attributes.position;let f=u.start*c,p=(u.start+u.count)*c;null!==a&&(f=Math.max(f,a.start*c),p=Math.min(p,(a.start+a.count)*c)),null!==l?(f=Math.max(f,0),p=Math.min(p,l.count)):null!=h&&(f=Math.max(f,0),p=Math.min(p,h.count));const m=p-f;if(m<0||m===1/0)return;let g;Le.setup(i,r,s,n,l);let _=Re;if(null!==l&&(g=me.get(l),_=Pe,_.setIndex(g)),i.isMesh)!0===r.wireframe?(le.setLineWidth(r.wireframeLinewidth*ae()),_.setMode(Ie.LINES)):_.setMode(Ie.TRIANGLES);else if(i.isLine){let e=r.linewidth;void 0===e&&(e=1),le.setLineWidth(e*ae()),i.isLineSegments?_.setMode(Ie.LINES):i.isLineLoop?_.setMode(Ie.LINE_LOOP):_.setMode(Ie.LINE_STRIP)}else i.isPoints?_.setMode(Ie.POINTS):i.isSprite&&_.setMode(Ie.TRIANGLES);if(i.isInstancedMesh)_.renderInstances(f,m,i.count);else if(n.isInstancedBufferGeometry){const e=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,t=Math.min(n.instanceCount,e);_.renderInstances(f,m,t)}else _.render(f,m)},this.compile=function(e,t,n=null){null===n&&(n=e),v=Ee.get(n),v.init(),y.push(v),n.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(v.pushLight(e),e.castShadow&&v.pushShadow(e))})),e!==n&&e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(v.pushLight(e),e.castShadow&&v.pushShadow(e))})),v.setupLights(M._useLegacyLights);const r=new Set;return e.traverse((function(e){const t=e.material;if(t)if(Array.isArray(t))for(let i=0;i<t.length;i++){const a=t[i];ke(a,n,e),r.add(a)}else ke(t,n,e),r.add(t)})),y.pop(),v=null,r},this.compileAsync=function(e,t,n=null){const r=this.compile(e,t,n);return new Promise((t=>{function n(){r.forEach((function(e){ue.get(e).currentProgram.isReady()&&r.delete(e)})),0!==r.size?setTimeout(n,10):t(e)}null!==oe.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)}))};let We=null;function Xe(){Ye.stop()}function qe(){Ye.start()}const Ye=new fr;function Ke(e,t,n,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)v.pushLight(e),e.castShadow&&v.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||J.intersectsSprite(e)){r&&re.setFromMatrixPosition(e.matrixWorld).applyMatrix4(te);const t=ve.update(e),i=e.material;i.visible&&_.push(e,t,i,n,re.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||J.intersectsObject(e))){const t=ve.update(e),i=e.material;if(r&&(void 0!==e.boundingSphere?(null===e.boundingSphere&&e.computeBoundingSphere(),re.copy(e.boundingSphere.center)):(null===t.boundingSphere&&t.computeBoundingSphere(),re.copy(t.boundingSphere.center)),re.applyMatrix4(e.matrixWorld).applyMatrix4(te)),Array.isArray(i)){const r=t.groups;for(let a=0,o=r.length;a<o;a++){const o=r[a],s=i[o.materialIndex];s&&s.visible&&_.push(e,t,s,n,re.z,o)}}else i.visible&&_.push(e,t,i,n,re.z,null)}const i=e.children;for(let e=0,a=i.length;e<a;e++)Ke(i[e],t,n,r)}function Ze(e,t,n,r){const i=e.opaque,a=e.transmissive,o=e.transparent;v.setupLightsView(n),!0===$&&Se.setGlobalState(M.clippingPlanes,n),a.length>0&&function(e,t,n,r){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;const i=se.isWebGL2;null===ee&&(ee=new He(1,1,{generateMipmaps:!0,type:oe.has("EXT_color_buffer_half_float")?U:R,minFilter:w,samples:i?4:0})),M.getDrawingBufferSize(ne),i?ee.setSize(ne.x,ne.y):ee.setSize(pe(ne.x),pe(ne.y));const a=M.getRenderTarget();M.setRenderTarget(ee),M.getClearColor(z),V=M.getClearAlpha(),V<1&&M.setClearColor(16777215,.5),M.clear();const o=M.toneMapping;M.toneMapping=d,Je(e,n,r),he.updateMultisampleRenderTarget(ee),he.updateRenderTargetMipmap(ee);let s=!1;for(let e=0,i=t.length;e<i;e++){const i=t[e],a=i.object,o=i.geometry,l=i.material,c=i.group;if(2===l.side&&a.layers.test(r.layers)){const e=l.side;l.side=1,l.needsUpdate=!0,$e(a,n,r,o,l,c),l.side=e,l.needsUpdate=!0,s=!0}}!0===s&&(he.updateMultisampleRenderTarget(ee),he.updateRenderTargetMipmap(ee)),M.setRenderTarget(a),M.setClearColor(z,V),M.toneMapping=o}(i,a,t,n),r&&le.viewport(F.copy(r)),i.length>0&&Je(i,t,n),a.length>0&&Je(a,t,n),o.length>0&&Je(o,t,n),le.buffers.depth.setTest(!0),le.buffers.depth.setMask(!0),le.buffers.color.setMask(!0),le.setPolygonOffset(!1)}function Je(e,t,n){const r=!0===t.isScene?t.overrideMaterial:null;for(let i=0,a=e.length;i<a;i++){const a=e[i],o=a.object,s=a.geometry,l=null===r?a.material:r,c=a.group;o.layers.test(n.layers)&&$e(o,t,n,s,l,c)}}function $e(e,t,n,r,i,a){e.onBeforeRender(M,t,n,r,i,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(M,t,n,r,e,a),!0===i.transparent&&2===i.side&&!1===i.forceSinglePass?(i.side=1,i.needsUpdate=!0,M.renderBufferDirect(n,t,r,i,e,a),i.side=s,i.needsUpdate=!0,M.renderBufferDirect(n,t,r,i,e,a),i.side=2):M.renderBufferDirect(n,t,r,i,e,a),e.onAfterRender(M,t,n,r,i,a)}function Qe(e,t,n){!0!==t.isScene&&(t=ie);const r=ue.get(e),i=v.state.lights,a=v.state.shadowsArray,o=i.state.version,s=xe.getParameters(e,i.state,a,t,n),l=xe.getProgramCacheKey(s);let c=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?fe:de).get(e.envMap||r.environment),void 0===c&&(e.addEventListener("dispose",Ge),c=new Map,r.programs=c);let u=c.get(l);if(void 0!==u){if(r.currentProgram===u&&r.lightsStateVersion===o)return tt(e,s),u}else s.uniforms=xe.getUniforms(e),e.onBuild(n,s,M),e.onBeforeCompile(s,M),u=xe.acquireProgram(s,l),c.set(l,u),r.uniforms=s.uniforms;const h=r.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=Se.uniform),tt(e,s),r.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),r.lightsStateVersion=o,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotLightMatrix.value=i.state.spotLightMatrix,h.spotLightMap.value=i.state.spotLightMap,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix),r.currentProgram=u,r.uniformsList=null,u}function et(e){if(null===e.uniformsList){const t=e.currentProgram.getUniforms();e.uniformsList=Qi.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function tt(e,t){const n=ue.get(e);n.outputColorSpace=t.outputColorSpace,n.instancing=t.instancing,n.instancingColor=t.instancingColor,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}Ye.setAnimationLoop((function(e){We&&We(e)})),"undefined"!=typeof self&&Ye.setContext(self),this.setAnimationLoop=function(e){We=e,Fe.setAnimationLoop(e),null===e?Ye.stop():Ye.start()},Fe.addEventListener("sessionstart",Xe),Fe.addEventListener("sessionend",qe),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===b)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===Fe.enabled&&!0===Fe.isPresenting&&(!0===Fe.cameraAutoUpdate&&Fe.updateCamera(t),t=Fe.getCamera()),!0===e.isScene&&e.onBeforeRender(M,e,t,T),v=Ee.get(e,y.length),v.init(),y.push(v),te.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),J.setFromProjectionMatrix(te),Q=this.localClippingEnabled,$=Se.init(this.clippingPlanes,Q),_=Me.get(e,x.length),_.init(),x.push(_),Ke(e,t,0,M.sortObjects),_.finish(),!0===M.sortObjects&&_.sort(W,j),this.info.render.frame++,!0===$&&Se.beginShadows();const n=v.state.shadowsArray;if(Te.render(n,e,t),!0===$&&Se.endShadows(),!0===this.info.autoReset&&this.info.reset(),Ae.render(_,e),v.setupLights(M._useLegacyLights),t.isArrayCamera){const n=t.cameras;for(let t=0,r=n.length;t<r;t++){const r=n[t];Ze(_,e,r,r.viewport)}}else Ze(_,e,t);null!==T&&(he.updateMultisampleRenderTarget(T),he.updateRenderTargetMipmap(T)),!0===e.isScene&&e.onAfterRender(M,e,t),Le.resetDefaultState(),A=-1,N=null,y.pop(),v=y.length>0?y[y.length-1]:null,x.pop(),_=x.length>0?x[x.length-1]:null},this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return S},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(e,t,n){ue.get(e.texture).__webglTexture=t,ue.get(e.depthTexture).__webglTexture=n;const r=ue.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||!0===oe.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const n=ue.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){T=e,E=t,S=n;let r=!0,i=null,a=!1,o=!1;if(e){const s=ue.get(e);void 0!==s.__useDefaultFramebuffer?(le.bindFramebuffer(Ie.FRAMEBUFFER,null),r=!1):void 0===s.__webglFramebuffer?he.setupRenderTarget(e):s.__hasExternalTextures&&he.rebindTextures(e,ue.get(e.texture).__webglTexture,ue.get(e.depthTexture).__webglTexture);const l=e.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(o=!0);const c=ue.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(i=Array.isArray(c[t])?c[t][n]:c[t],a=!0):i=se.isWebGL2&&e.samples>0&&!1===he.useMultisampledRTT(e)?ue.get(e).__webglMultisampledFramebuffer:Array.isArray(c)?c[n]:c,F.copy(e.viewport),O.copy(e.scissor),B=e.scissorTest}else F.copy(X).multiplyScalar(k).floor(),O.copy(K).multiplyScalar(k).floor(),B=Z;if(le.bindFramebuffer(Ie.FRAMEBUFFER,i)&&se.drawBuffers&&r&&le.drawBuffers(e,i),le.viewport(F),le.scissor(O),le.setScissorTest(B),a){const r=ue.get(e.texture);Ie.framebufferTexture2D(Ie.FRAMEBUFFER,Ie.COLOR_ATTACHMENT0,Ie.TEXTURE_CUBE_MAP_POSITIVE_X+t,r.__webglTexture,n)}else if(o){const r=ue.get(e.texture),i=t||0;Ie.framebufferTextureLayer(Ie.FRAMEBUFFER,Ie.COLOR_ATTACHMENT0,r.__webglTexture,n||0,i)}A=-1},this.readRenderTargetPixels=function(e,t,n,r,i,a,o){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=ue.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){le.bindFramebuffer(Ie.FRAMEBUFFER,s);try{const o=e.texture,s=o.format,l=o.type;if(s!==D&&Ce.convert(s)!==Ie.getParameter(Ie.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=l===U&&(oe.has("EXT_color_buffer_half_float")||se.isWebGL2&&oe.has("EXT_color_buffer_float"));if(!(l===R||Ce.convert(l)===Ie.getParameter(Ie.IMPLEMENTATION_COLOR_READ_TYPE)||l===L&&(se.isWebGL2||oe.has("OES_texture_float")||oe.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&Ie.readPixels(t,n,r,i,Ce.convert(s),Ce.convert(l),a)}finally{const e=null!==T?ue.get(T).__webglFramebuffer:null;le.bindFramebuffer(Ie.FRAMEBUFFER,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const r=Math.pow(2,-n),i=Math.floor(t.image.width*r),a=Math.floor(t.image.height*r);he.setTexture2D(t,0),Ie.copyTexSubImage2D(Ie.TEXTURE_2D,n,0,0,e.x,e.y,i,a),le.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){const i=t.image.width,a=t.image.height,o=Ce.convert(n.format),s=Ce.convert(n.type);he.setTexture2D(n,0),Ie.pixelStorei(Ie.UNPACK_FLIP_Y_WEBGL,n.flipY),Ie.pixelStorei(Ie.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),Ie.pixelStorei(Ie.UNPACK_ALIGNMENT,n.unpackAlignment),t.isDataTexture?Ie.texSubImage2D(Ie.TEXTURE_2D,r,e.x,e.y,i,a,o,s,t.image.data):t.isCompressedTexture?Ie.compressedTexSubImage2D(Ie.TEXTURE_2D,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):Ie.texSubImage2D(Ie.TEXTURE_2D,r,e.x,e.y,o,s,t.image),0===r&&n.generateMipmaps&&Ie.generateMipmap(Ie.TEXTURE_2D),le.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,r,i=0){if(M.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const a=e.max.x-e.min.x+1,o=e.max.y-e.min.y+1,s=e.max.z-e.min.z+1,l=Ce.convert(r.format),c=Ce.convert(r.type);let u;if(r.isData3DTexture)he.setTexture3D(r,0),u=Ie.TEXTURE_3D;else{if(!r.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");he.setTexture2DArray(r,0),u=Ie.TEXTURE_2D_ARRAY}Ie.pixelStorei(Ie.UNPACK_FLIP_Y_WEBGL,r.flipY),Ie.pixelStorei(Ie.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),Ie.pixelStorei(Ie.UNPACK_ALIGNMENT,r.unpackAlignment);const h=Ie.getParameter(Ie.UNPACK_ROW_LENGTH),d=Ie.getParameter(Ie.UNPACK_IMAGE_HEIGHT),f=Ie.getParameter(Ie.UNPACK_SKIP_PIXELS),p=Ie.getParameter(Ie.UNPACK_SKIP_ROWS),m=Ie.getParameter(Ie.UNPACK_SKIP_IMAGES),g=n.isCompressedTexture?n.mipmaps[0]:n.image;Ie.pixelStorei(Ie.UNPACK_ROW_LENGTH,g.width),Ie.pixelStorei(Ie.UNPACK_IMAGE_HEIGHT,g.height),Ie.pixelStorei(Ie.UNPACK_SKIP_PIXELS,e.min.x),Ie.pixelStorei(Ie.UNPACK_SKIP_ROWS,e.min.y),Ie.pixelStorei(Ie.UNPACK_SKIP_IMAGES,e.min.z),n.isDataTexture||n.isData3DTexture?Ie.texSubImage3D(u,i,t.x,t.y,t.z,a,o,s,l,c,g.data):n.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Ie.compressedTexSubImage3D(u,i,t.x,t.y,t.z,a,o,s,l,g.data)):Ie.texSubImage3D(u,i,t.x,t.y,t.z,a,o,s,l,c,g),Ie.pixelStorei(Ie.UNPACK_ROW_LENGTH,h),Ie.pixelStorei(Ie.UNPACK_IMAGE_HEIGHT,d),Ie.pixelStorei(Ie.UNPACK_SKIP_PIXELS,f),Ie.pixelStorei(Ie.UNPACK_SKIP_ROWS,p),Ie.pixelStorei(Ie.UNPACK_SKIP_IMAGES,m),0===i&&r.generateMipmaps&&Ie.generateMipmap(u),le.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?he.setTextureCube(e,0):e.isData3DTexture?he.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?he.setTexture2DArray(e,0):he.setTexture2D(e,0),le.unbindTexture()},this.resetState=function(){E=0,S=0,T=null,le.reset(),Le.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ie}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===K?"display-p3":"srgb",t.unpackColorSpace=Pe.workingColorSpace===Z?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===q?j:3e3}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===j?q:Y}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}(class extends qa{}).prototype.isWebGL1Renderer=!0;class Ya extends fn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new un(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ka=new je,Za=new je,Ja=new Mt,$a=new yt,Qa=new dt;class eo extends Xt{constructor(e=new Rn,t=new Ya){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,r=t.count;e<r;e++)Ka.fromBufferAttribute(t,e-1),Za.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=Ka.distanceTo(Za);e.setAttribute("lineDistance",new yn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,i=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Qa.copy(n.boundingSphere),Qa.applyMatrix4(r),Qa.radius+=i,!1===e.ray.intersectsSphere(Qa))return;Ja.copy(r).invert(),$a.copy(e.ray).applyMatrix4(Ja);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,l=new je,c=new je,u=new je,h=new je,d=this.isLineSegments?2:1,f=n.index,p=n.attributes.position;if(null!==f)for(let n=Math.max(0,a.start),r=Math.min(f.count,a.start+a.count)-1;n<r;n+=d){const r=f.getX(n),i=f.getX(n+1);if(l.fromBufferAttribute(p,r),c.fromBufferAttribute(p,i),$a.distanceSqToSegment(l,c,h,u)>s)continue;h.applyMatrix4(this.matrixWorld);const a=e.ray.origin.distanceTo(h);a<e.near||a>e.far||t.push({distance:a,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,a.start),r=Math.min(p.count,a.start+a.count)-1;n<r;n+=d){if(l.fromBufferAttribute(p,n),c.fromBufferAttribute(p,n+1),$a.distanceSqToSegment(l,c,h,u)>s)continue;h.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(h);r<e.near||r>e.far||t.push({distance:r,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}const to=new je,no=new je;class ro extends eo{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,r=t.count;e<r;e+=2)to.fromBufferAttribute(t,e),no.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+to.distanceTo(no);e.setAttribute("lineDistance",new yn(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class io extends fn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new un(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const ao=new Mt,oo=new yt,so=new dt,lo=new je;class co extends Xt{constructor(e=new Rn,t=new io){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,i=e.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),so.copy(n.boundingSphere),so.applyMatrix4(r),so.radius+=i,!1===e.ray.intersectsSphere(so))return;ao.copy(r).invert(),oo.copy(e.ray).applyMatrix4(ao);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,l=n.index,c=n.attributes.position;if(null!==l)for(let n=Math.max(0,a.start),i=Math.min(l.count,a.start+a.count);n<i;n++){const i=l.getX(n);lo.fromBufferAttribute(c,i),uo(lo,i,s,r,e,t,this)}else for(let n=Math.max(0,a.start),i=Math.min(c.count,a.start+a.count);n<i;n++)lo.fromBufferAttribute(c,n),uo(lo,n,s,r,e,t,this)}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function uo(e,t,n,r,i,a,o){const s=oo.distanceSqToPoint(e);if(s<n){const n=new je;oo.closestPointToPoint(e,n),n.applyMatrix4(r);const l=i.ray.origin.distanceTo(n);if(l<i.near||l>i.far)return;a.push({distance:l,distanceToRay:Math.sqrt(s),point:n,index:t,face:null,object:o})}}class ho extends fn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new un(16777215),this.specular=new un(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new un(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new _e(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=c,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}function fo(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)}class po{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{let a;n:{r:if(!(e<r)){for(let a=n+2;;){if(void 0===r){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(i=r,r=t[++n],e<r)break t}a=t.length;break n}if(e>=i)break e;{const o=t[1];e<o&&(n=2,i=o);for(let a=n-2;;){if(void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(n===a)break;if(r=i,i=t[--n-1],e>=i)break t}a=n,n=0}}for(;n<a;){const r=n+a>>>1;e<t[r]?a=r:n=r+1}if(r=t[n],i=t[n-1],void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(let e=0;e!==r;++e)t[e]=n[i+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class mo extends po{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,n){const r=this.parameterPositions;let i=e-2,a=e+1,o=r[i],s=r[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:i=e,o=2*t-n;break;case 2402:i=r.length-2,o=t+r[i]-r[i+1];break;default:i=e,o=n}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:a=e,s=2*n-t;break;case 2402:a=1,s=n+r[1]-r[0];break;default:a=e-1,s=t}const l=.5*(n-t),c=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-n),this._offsetPrev=i*c,this._offsetNext=a*c}interpolate_(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,f=(n-t)/(r-t),p=f*f,m=p*f,g=-h*m+2*h*p-h*f,_=(1+h)*m+(-1.5-2*h)*p+(-.5+h)*f+1,v=(-1-d)*m+(1.5+d)*p+.5*f,x=d*m-d*p;for(let e=0;e!==o;++e)i[e]=g*a[c+e]+_*a[l+e]+v*a[s+e]+x*a[u+e];return i}}class go extends po{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,c=(n-t)/(r-t),u=1-c;for(let e=0;e!==o;++e)i[e]=a[l+e]*u+a[s+e]*c;return i}}class _o extends po{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class vo{constructor(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=fo(t,this.TimeBufferType),this.values=fo(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:fo(e.times,Array),values:fo(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new _o(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new go(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new mo(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case G:t=this.InterpolantFactoryMethodDiscrete;break;case k:t=this.InterpolantFactoryMethodLinear;break;case W:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return G;case this.InterpolantFactoryMethodLinear:return k;case this.InterpolantFactoryMethodSmooth:return W}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let i=0,a=r-1;for(;i!==r&&n[i]<e;)++i;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==i||a!==r){i>=a&&(a=Math.max(a,1),i=a-1);const e=this.getValueSize();this.times=n.slice(i,a),this.values=this.values.slice(i*e,a*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==i;t++){const r=n[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==a&&a>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,a),e=!1;break}a=r}if(void 0!==r&&(o=r,ArrayBuffer.isView(o)&&!(o instanceof DataView)))for(let t=0,n=r.length;t!==n;++t){const n=r[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}var o;return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),r=this.getInterpolation()===W,i=e.length-1;let a=1;for(let o=1;o<i;++o){let i=!1;const s=e[o];if(s!==e[o+1]&&(1!==o||s!==e[0]))if(r)i=!0;else{const e=o*n,r=e-n,a=e+n;for(let o=0;o!==n;++o){const n=t[e+o];if(n!==t[r+o]||n!==t[a+o]){i=!0;break}}}if(i){if(o!==a){e[a]=e[o];const r=o*n,i=a*n;for(let e=0;e!==n;++e)t[i+e]=t[r+e]}++a}}if(i>0){e[a]=e[i];for(let e=i*n,r=a*n,o=0;o!==n;++o)t[r+o]=t[e+o];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}vo.prototype.TimeBufferType=Float32Array,vo.prototype.ValueBufferType=Float32Array,vo.prototype.DefaultInterpolation=k;class xo extends vo{}xo.prototype.ValueTypeName="bool",xo.prototype.ValueBufferType=Array,xo.prototype.DefaultInterpolation=G,xo.prototype.InterpolantFactoryMethodLinear=void 0,xo.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends vo{}).prototype.ValueTypeName="color";(class extends vo{}).prototype.ValueTypeName="number";class yo extends po{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=(n-t)/(r-t);let l=e*o;for(let e=l+o;l!==e;l+=4)We.slerpFlat(i,0,a,l-o,a,l,s);return i}}class Mo extends vo{InterpolantFactoryMethodLinear(e){return new yo(this.times,this.values,this.getValueSize(),e)}}Mo.prototype.ValueTypeName="quaternion",Mo.prototype.DefaultInterpolation=k,Mo.prototype.InterpolantFactoryMethodSmooth=void 0;class bo extends vo{}bo.prototype.ValueTypeName="string",bo.prototype.ValueBufferType=Array,bo.prototype.DefaultInterpolation=G,bo.prototype.InterpolantFactoryMethodLinear=void 0,bo.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends vo{}).prototype.ValueTypeName="vector";const Eo={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class So{constructor(e,t,n){const r=this;let i,a=!1,o=0,s=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){s++,!1===a&&void 0!==r.onStart&&r.onStart(e,o,s),a=!0},this.itemEnd=function(e){o++,void 0!==r.onProgress&&r.onProgress(e,o,s),o===s&&(a=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return i?i(e):e},this.setURLModifier=function(e){return i=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){const n=l[t],r=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}}const To=new So;class Ao{constructor(e){this.manager=void 0!==e?e:To,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise((function(r,i){n.load(e,r,t,i)}))}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Ao.DEFAULT_MATERIAL_NAME="__DEFAULT";const wo={};class Ro extends Error{constructor(e,t){super(e),this.response=t}}class Po extends Ao{constructor(e){super(e)}load(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=Eo.get(e);if(void 0!==i)return this.manager.itemStart(e),setTimeout((()=>{t&&t(i),this.manager.itemEnd(e)}),0),i;if(void 0!==wo[e])return void wo[e].push({onLoad:t,onProgress:n,onError:r});wo[e]=[],wo[e].push({onLoad:t,onProgress:n,onError:r});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,s=this.responseType;fetch(a).then((t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const n=wo[e],r=t.body.getReader(),i=t.headers.get("Content-Length")||t.headers.get("X-File-Size"),a=i?parseInt(i):0,o=0!==a;let s=0;const l=new ReadableStream({start(e){!function t(){r.read().then((({done:r,value:i})=>{if(r)e.close();else{s+=i.byteLength;const r=new ProgressEvent("progress",{lengthComputable:o,loaded:s,total:a});for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onProgress&&t.onProgress(r)}e.enqueue(i),t()}}))}()}});return new Response(l)}throw new Ro(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)})).then((e=>{switch(s){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((e=>(new DOMParser).parseFromString(e,o)));case"json":return e.json();default:if(void 0===o)return e.text();{const t=/charset="?([^;"\s]*)"?/i.exec(o),n=t&&t[1]?t[1].toLowerCase():void 0,r=new TextDecoder(n);return e.arrayBuffer().then((e=>r.decode(e)))}}})).then((t=>{Eo.add(e,t);const n=wo[e];delete wo[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onLoad&&r.onLoad(t)}})).catch((t=>{const n=wo[e];if(void 0===n)throw this.manager.itemError(e),t;delete wo[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}this.manager.itemError(e)})).finally((()=>{this.manager.itemEnd(e)})),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Co extends Ao{constructor(e){super(e)}load(e,t,n,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,a=Eo.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout((function(){t&&t(a),i.manager.itemEnd(e)}),0),a;const o=Me("img");function s(){c(),Eo.add(e,this),t&&t(this),i.manager.itemEnd(e)}function l(t){c(),r&&r(t),i.manager.itemError(e),i.manager.itemEnd(e)}function c(){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",s,!1),o.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o}}class Lo extends Ao{constructor(e){super(e)}load(e,t,n,r){const i=new Be,a=new Co(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,(function(e){i.image=e,i.needsUpdate=!0,void 0!==t&&t(i)}),n,r),i}}class Uo{static decodeText(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,r=e.length;n<r;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(e){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}const Io="\\[\\]\\.:\\/",Do=new RegExp("["+Io+"]","g"),No="[^"+Io+"]",Fo="[^"+Io.replace("\\.","")+"]",Oo=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",No)+/(WCOD+)?/.source.replace("WCOD",Fo)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",No)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",No)+"$"),Bo=["material","materials","bones","map"];class zo{constructor(e,t,n){this.path=t,this.parsedPath=n||zo.parseTrackName(t),this.node=zo.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new zo.Composite(e,t,n):new zo(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Do,"")}static parseTrackName(e){const t=Oo.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const e=n.nodeName.substring(r+1);-1!==Bo.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let r=0;r<e.length;r++){const i=e[r];if(i.name===t||i.uuid===t)return i;const a=n(i.children);if(a)return a}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let i=t.propertyIndex;if(e||(e=zo.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let r=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==r){if(void 0===e[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[r]}}const a=e[r];if(void 0===a){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let s=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}s=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=i}else void 0!==a.fromArray&&void 0!==a.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(s=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}zo.Composite=class{constructor(e,t,n){const r=n||zo.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},zo.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},zo.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},zo.prototype.GetterByBindingType=[zo.prototype._getValue_direct,zo.prototype._getValue_array,zo.prototype._getValue_arrayElement,zo.prototype._getValue_toArray],zo.prototype.SetterByBindingTypeAndVersioning=[[zo.prototype._setValue_direct,zo.prototype._setValue_direct_setNeedsUpdate,zo.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[zo.prototype._setValue_array,zo.prototype._setValue_array_setNeedsUpdate,zo.prototype._setValue_array_setMatrixWorldNeedsUpdate],[zo.prototype._setValue_arrayElement,zo.prototype._setValue_arrayElement_setNeedsUpdate,zo.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[zo.prototype._setValue_fromArray,zo.prototype._setValue_fromArray_setNeedsUpdate,zo.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1),"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)},23:(e,t,n)=>{n.r(t),n.d(t,{MTLLoader:()=>i});var r=n(477);class i extends r.aNw{constructor(e){super(e)}load(e,t,n,i){const a=this,o=""===this.path?r.Zp0.extractUrlBase(e):this.path,s=new r.hH6(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,(function(n){try{t(a.parse(n,o))}catch(t){i?i(t):console.error(t),a.manager.itemError(e)}}),n,i)}setMaterialOptions(e){return this.materialOptions=e,this}parse(e,t){const n=e.split("\n");let r={};const i=/\s+/,o={};for(let e=0;e<n.length;e++){let t=n[e];if(t=t.trim(),0===t.length||"#"===t.charAt(0))continue;const a=t.indexOf(" ");let s=a>=0?t.substring(0,a):t;s=s.toLowerCase();let l=a>=0?t.substring(a+1):"";if(l=l.trim(),"newmtl"===s)r={name:l},o[l]=r;else if("ka"===s||"kd"===s||"ks"===s||"ke"===s){const e=l.split(i,3);r[s]=[parseFloat(e[0]),parseFloat(e[1]),parseFloat(e[2])]}else r[s]=l}const s=new a(this.resourcePath||t,this.materialOptions);return s.setCrossOrigin(this.crossOrigin),s.setManager(this.manager),s.setMaterials(o),s}}class a{constructor(e="",t={}){this.baseUrl=e,this.options=t,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=void 0!==this.options.side?this.options.side:r.Wl3,this.wrap=void 0!==this.options.wrap?this.options.wrap:r.rpg}setCrossOrigin(e){return this.crossOrigin=e,this}setManager(e){this.manager=e}setMaterials(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(e){if(!this.options)return e;const t={};for(const n in e){const r=e[n],i={};t[n]=i;for(const e in r){let t=!0,n=r[e];const a=e.toLowerCase();switch(a){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(n=[n[0]/255,n[1]/255,n[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===n[0]&&0===n[1]&&0===n[2]&&(t=!1)}t&&(i[a]=n)}}return t}preload(){for(const e in this.materialsInfo)this.create(e)}getIndex(e){return this.nameLookup[e]}getAsArray(){let e=0;for(const t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray}create(e){return void 0===this.materials[e]&&this.createMaterial_(e),this.materials[e]}createMaterial_(e){const t=this,n=this.materialsInfo[e],i={name:e,side:this.side};function a(e,n){if(i[e])return;const a=t.getTextureParams(n,i),o=t.loadTexture((s=t.baseUrl,"string"!=typeof(l=a.url)||""===l?"":/^https?:\/\//i.test(l)?l:s+l));var s,l;o.repeat.copy(a.scale),o.offset.copy(a.offset),o.wrapS=t.wrap,o.wrapT=t.wrap,"map"!==e&&"emissiveMap"!==e||(o.colorSpace=r.KI_),i[e]=o}for(const e in n){const t=n[e];let o;if(""!==t)switch(e.toLowerCase()){case"kd":i.color=(new r.Ilk).fromArray(t).convertSRGBToLinear();break;case"ks":i.specular=(new r.Ilk).fromArray(t).convertSRGBToLinear();break;case"ke":i.emissive=(new r.Ilk).fromArray(t).convertSRGBToLinear();break;case"map_kd":a("map",t);break;case"map_ks":a("specularMap",t);break;case"map_ke":a("emissiveMap",t);break;case"norm":a("normalMap",t);break;case"map_bump":case"bump":a("bumpMap",t);break;case"map_d":a("alphaMap",t),i.transparent=!0;break;case"ns":i.shininess=parseFloat(t);break;case"d":o=parseFloat(t),o<1&&(i.opacity=o,i.transparent=!0);break;case"tr":o=parseFloat(t),this.options&&this.options.invertTrProperty&&(o=1-o),o>0&&(i.opacity=1-o,i.transparent=!0)}}return this.materials[e]=new r.xoR(i),this.materials[e]}getTextureParams(e,t){const n={scale:new r.FM8(1,1),offset:new r.FM8(0,0)},i=e.split(/\s+/);let a;return a=i.indexOf("-bm"),a>=0&&(t.bumpScale=parseFloat(i[a+1]),i.splice(a,2)),a=i.indexOf("-s"),a>=0&&(n.scale.set(parseFloat(i[a+1]),parseFloat(i[a+2])),i.splice(a,4)),a=i.indexOf("-o"),a>=0&&(n.offset.set(parseFloat(i[a+1]),parseFloat(i[a+2])),i.splice(a,4)),n.url=i.join(" ").trim(),n}loadTexture(e,t,n,i,a){const o=void 0!==this.manager?this.manager:r.tEQ;let s=o.getHandler(e);null===s&&(s=new r.dpR(o)),s.setCrossOrigin&&s.setCrossOrigin(this.crossOrigin);const l=s.load(e,n,i,a);return void 0!==t&&(l.mapping=t),l}}},11:(e,t,n)=>{n.r(t),n.d(t,{OBJLoader:()=>g});var r=n(477);const i=/^[og]\s*(.+)?/,a=/^mtllib /,o=/^usemtl /,s=/^usemap /,l=/\s+/,c=new r.Pa4,u=new r.Pa4,h=new r.Pa4,d=new r.Pa4,f=new r.Pa4,p=new r.Ilk;function m(){const e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);const n=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(e,t){const n=this._finalize(!1);n&&(n.inherited||n.groupCount<=0)&&this.materials.splice(n.index,1);const r={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==n?n.smooth:this.smooth,groupStart:void 0!==n?n.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){const t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(r),r},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){const t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(let e=this.materials.length-1;e>=0;e--)this.materials[e].groupCount<=0&&this.materials.splice(e,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},n&&n.name&&"function"==typeof n.clone){const e=n.clone(0);e.inherited=!0,this.object.materials.push(e)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseNormalIndex:function(e,t){const n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseUVIndex:function(e,t){const n=parseInt(e,10);return 2*(n>=0?n-1:n+t/2)},addVertex:function(e,t,n){const r=this.vertices,i=this.object.geometry.vertices;i.push(r[e+0],r[e+1],r[e+2]),i.push(r[t+0],r[t+1],r[t+2]),i.push(r[n+0],r[n+1],r[n+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,n){const r=this.normals,i=this.object.geometry.normals;i.push(r[e+0],r[e+1],r[e+2]),i.push(r[t+0],r[t+1],r[t+2]),i.push(r[n+0],r[n+1],r[n+2])},addFaceNormal:function(e,t,n){const r=this.vertices,i=this.object.geometry.normals;c.fromArray(r,e),u.fromArray(r,t),h.fromArray(r,n),f.subVectors(h,u),d.subVectors(c,u),f.cross(d),f.normalize(),i.push(f.x,f.y,f.z),i.push(f.x,f.y,f.z),i.push(f.x,f.y,f.z)},addColor:function(e,t,n){const r=this.colors,i=this.object.geometry.colors;void 0!==r[e]&&i.push(r[e+0],r[e+1],r[e+2]),void 0!==r[t]&&i.push(r[t+0],r[t+1],r[t+2]),void 0!==r[n]&&i.push(r[n+0],r[n+1],r[n+2])},addUV:function(e,t,n){const r=this.uvs,i=this.object.geometry.uvs;i.push(r[e+0],r[e+1]),i.push(r[t+0],r[t+1]),i.push(r[n+0],r[n+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,n,r,i,a,o,s,l){const c=this.vertices.length;let u=this.parseVertexIndex(e,c),h=this.parseVertexIndex(t,c),d=this.parseVertexIndex(n,c);if(this.addVertex(u,h,d),this.addColor(u,h,d),void 0!==o&&""!==o){const e=this.normals.length;u=this.parseNormalIndex(o,e),h=this.parseNormalIndex(s,e),d=this.parseNormalIndex(l,e),this.addNormal(u,h,d)}else this.addFaceNormal(u,h,d);if(void 0!==r&&""!==r){const e=this.uvs.length;u=this.parseUVIndex(r,e),h=this.parseUVIndex(i,e),d=this.parseUVIndex(a,e),this.addUV(u,h,d),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let n=0,r=e.length;n<r;n++){const r=this.parseVertexIndex(e[n],t);this.addVertexPoint(r),this.addColor(r)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const n=this.vertices.length,r=this.uvs.length;for(let t=0,r=e.length;t<r;t++)this.addVertexLine(this.parseVertexIndex(e[t],n));for(let e=0,n=t.length;e<n;e++)this.addUVLine(this.parseUVIndex(t[e],r))}};return e.startObject("",!1),e}class g extends r.aNw{constructor(e){super(e),this.materials=null}load(e,t,n,i){const a=this,o=new r.hH6(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,(function(n){try{t(a.parse(n))}catch(t){i?i(t):console.error(t),a.manager.itemError(e)}}),n,i)}setMaterials(e){return this.materials=e,this}parse(e){const t=new m;-1!==e.indexOf("\r\n")&&(e=e.replace(/\r\n/g,"\n")),-1!==e.indexOf("\\\n")&&(e=e.replace(/\\\n/g,""));const n=e.split("\n");let c=[];for(let e=0,r=n.length;e<r;e++){const r=n[e].trimStart();if(0===r.length)continue;const u=r.charAt(0);if("#"!==u)if("v"===u){const e=r.split(l);switch(e[0]){case"v":t.vertices.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3])),e.length>=7?(p.setRGB(parseFloat(e[4]),parseFloat(e[5]),parseFloat(e[6])).convertSRGBToLinear(),t.colors.push(p.r,p.g,p.b)):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]));break;case"vt":t.uvs.push(parseFloat(e[1]),parseFloat(e[2]))}}else if("f"===u){const e=r.slice(1).trim().split(l),n=[];for(let t=0,r=e.length;t<r;t++){const r=e[t];if(r.length>0){const e=r.split("/");n.push(e)}}const i=n[0];for(let e=1,r=n.length-1;e<r;e++){const r=n[e],a=n[e+1];t.addFace(i[0],r[0],a[0],i[1],r[1],a[1],i[2],r[2],a[2])}}else if("l"===u){const e=r.substring(1).trim().split(" ");let n=[];const i=[];if(-1===r.indexOf("/"))n=e;else for(let t=0,r=e.length;t<r;t++){const r=e[t].split("/");""!==r[0]&&n.push(r[0]),""!==r[1]&&i.push(r[1])}t.addLineGeometry(n,i)}else if("p"===u){const e=r.slice(1).trim().split(" ");t.addPointGeometry(e)}else if(null!==(c=i.exec(r))){const e=(" "+c[0].slice(1).trim()).slice(1);t.startObject(e)}else if(o.test(r))t.object.startMaterial(r.substring(7).trim(),t.materialLibraries);else if(a.test(r))t.materialLibraries.push(r.substring(7).trim());else if(s.test(r))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===u){if(c=r.split(" "),c.length>1){const e=c[1].trim().toLowerCase();t.object.smooth="0"!==e&&"off"!==e}else t.object.smooth=!0;const e=t.object.currentMaterial();e&&(e.smooth=t.object.smooth)}else{if("\0"===r)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+r+'"')}}t.finalize();const u=new r.ZAu;if(u.materialLibraries=[].concat(t.materialLibraries),!0==!(1===t.objects.length&&0===t.objects[0].geometry.vertices.length))for(let e=0,n=t.objects.length;e<n;e++){const n=t.objects[e],i=n.geometry,a=n.materials,o="Line"===i.type,s="Points"===i.type;let l=!1;if(0===i.vertices.length)continue;const c=new r.u9r;c.setAttribute("position",new r.a$l(i.vertices,3)),i.normals.length>0&&c.setAttribute("normal",new r.a$l(i.normals,3)),i.colors.length>0&&(l=!0,c.setAttribute("color",new r.a$l(i.colors,3))),!0===i.hasUVIndices&&c.setAttribute("uv",new r.a$l(i.uvs,2));const h=[];for(let e=0,n=a.length;e<n;e++){const n=a[e],i=n.name+"_"+n.smooth+"_"+l;let c=t.materials[i];if(null!==this.materials)if(c=this.materials.create(n.name),!o||!c||c instanceof r.nls){if(s&&c&&!(c instanceof r.UY4)){const e=new r.UY4({size:10,sizeAttenuation:!1});r.F5T.prototype.copy.call(e,c),e.color.copy(c.color),e.map=c.map,c=e}}else{const e=new r.nls;r.F5T.prototype.copy.call(e,c),e.color.copy(c.color),c=e}void 0===c&&(c=o?new r.nls:s?new r.UY4({size:1,sizeAttenuation:!1}):new r.xoR,c.name=n.name,c.flatShading=!n.smooth,c.vertexColors=l,t.materials[i]=c),h.push(c)}let d;if(h.length>1){for(let e=0,t=a.length;e<t;e++){const t=a[e];c.addGroup(t.groupStart,t.groupCount,e)}d=o?new r.ejS(c,h):s?new r.woe(c,h):new r.Kj0(c,h)}else d=o?new r.ejS(c,h[0]):s?new r.woe(c,h[0]):new r.Kj0(c,h[0]);d.name=n.name,u.add(d)}else if(t.vertices.length>0){const e=new r.UY4({size:1,sizeAttenuation:!1}),n=new r.u9r;n.setAttribute("position",new r.a$l(t.vertices,3)),t.colors.length>0&&void 0!==t.colors[0]&&(n.setAttribute("color",new r.a$l(t.colors,3)),e.vertexColors=!0);const i=new r.woe(n,e);u.add(i)}return u}}}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(244)})();